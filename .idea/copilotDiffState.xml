<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/build.gradle.kts" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.google.gms.google.services)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.s23010526.hiddensrilanka&quot;&#10;    compileSdk = 35&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.s23010526.hiddensrilanka&quot;&#10;        minSdk = 24&#10;        targetSdk = 34&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_1_8&#10;        targetCompatibility = JavaVersion.VERSION_1_8&#10;    }&#10;    buildFeatures {&#10;        viewBinding = true&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation(libs.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.activity)&#10;    implementation(libs.constraintlayout)&#10;&#10;    // --- Firebase Setup ---&#10;    // Firebase BoM -- Bill of Materials--&#10;    // This line manages all Firebase library versions.&#10;    implementation(platform(libs.firebase.bom))&#10;&#10;    // Versions are handled by the BoM so  dont need to  specify them here.&#10;    implementation(libs.firebase.auth)       // For  login system&#10;    implementation(libs.firebase.database)   // For login system&#10;    implementation(libs.firebase.firestore)  // For location content&#10;&#10;&#10;    implementation(libs.glide)&#10;    annotationProcessor(libs.glide.compiler)&#10;&#10;    // Google Play Servicesfor location&#10;    implementation(libs.play.services.location)&#10;&#10;&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.ext.junit)&#10;    androidTestImplementation(libs.espresso.core)&#10;}&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.google.gms.google.services)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.s23010526.hiddensrilanka&quot;&#10;    compileSdk = 34  // Change from 35 to 34 for better compatibility&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.s23010526.hiddensrilanka&quot;&#10;        minSdk = 24&#10;        targetSdk = 34&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11  // Update from VERSION_1_8&#10;        targetCompatibility = JavaVersion.VERSION_11  // Update from VERSION_1_8&#10;    }&#10;    buildFeatures {&#10;        viewBinding = true&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation(libs.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.activity)&#10;    implementation(libs.constraintlayout)&#10;&#10;    // --- Firebase Setup ---&#10;    // Firebase BoM -- Bill of Materials--&#10;    // This line manages all Firebase library versions.&#10;    implementation(platform(libs.firebase.bom))&#10;&#10;    // Versions are handled by the BoM so  dont need to  specify them here.&#10;    implementation(libs.firebase.auth)       // For  login system&#10;    implementation(libs.firebase.database)   // For login system&#10;    implementation(libs.firebase.firestore)  // For location content&#10;    implementation(libs.firebase.storage)    // For image uploads - ADDED&#10;&#10;    implementation(libs.glide)&#10;    annotationProcessor(libs.glide.compiler)&#10;&#10;    // Google Play Services for location&#10;    implementation(libs.play.services.location)&#10;&#10;&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.ext.junit)&#10;    androidTestImplementation(libs.espresso.core)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/AddLocationActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/AddLocationActivity.java" />
              <option name="originalContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.os.Bundle;&#10;import android.text.TextUtils;&#10;import android.util.Log;&#10;import android.view.View;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.AutoCompleteTextView;&#10;import android.widget.EditText;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.Toast;&#10;import android.widget.ProgressBar;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.google.android.material.button.MaterialButton;&#10;import com.google.android.material.textfield.TextInputLayout;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;&#10;import java.util.ArrayList;&#10;import java.util.HashMap;&#10;import java.util.List;&#10;import java.util.Map;&#10;&#10;public class AddLocationActivity extends BaseActivity {&#10;&#10;    private static final String TAG = &quot;AddLocationActivity&quot;;&#10;&#10;    // UI Components&#10;    private EditText etLocationName, etDescription, etYoutubeUrl, etContributorName, etImageUrl;&#10;    private AutoCompleteTextView etCategory, etCity, etProvince;&#10;    private ImageView ivSelectedImage;&#10;    private LinearLayout layoutImagePlaceholder;&#10;    private MaterialButton btnSubmitLocation, btnLoadUrl;&#10;    private TextInputLayout tilCity;&#10;    private ProgressBar progressBar; // Replace ProgressDialog with ProgressBar&#10;&#10;    // Firebase&#10;    private FirebaseFirestore firestore;&#10;&#10;    // Data structures for province-city mapping&#10;    private Map&lt;String, String[]&gt; provinceCityMap;&#10;&#10;    @Override&#10;    protected int getLayoutResourceId() {&#10;        return R.layout.activity_add_location;&#10;    }&#10;&#10;    @Override&#10;    protected String getActivityTitle() {&#10;        return &quot;Add New Location&quot;;&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        initializeViews();&#10;        initializeFirebase();&#10;        initializeProvinceCityMapping();&#10;        setupDropdowns();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initializeViews() {&#10;        etLocationName = findViewById(R.id.et_location_name);&#10;        etDescription = findViewById(R.id.et_description);&#10;        etYoutubeUrl = findViewById(R.id.et_youtube_url);&#10;        etContributorName = findViewById(R.id.et_contributor_name);&#10;        etImageUrl = findViewById(R.id.et_image_url);&#10;        etCategory = findViewById(R.id.et_category);&#10;        etCity = findViewById(R.id.et_city);&#10;        etProvince = findViewById(R.id.et_province);&#10;        ivSelectedImage = findViewById(R.id.iv_selected_image);&#10;        layoutImagePlaceholder = findViewById(R.id.layout_image_placeholder);&#10;        btnSubmitLocation = findViewById(R.id.btn_submit_location);&#10;        btnLoadUrl = findViewById(R.id.btn_load_url);&#10;        tilCity = findViewById(R.id.til_city);&#10;&#10;        // Reference ProgressBar from layout&#10;        progressBar = findViewById(R.id.progress_bar);&#10;    }&#10;&#10;    private void initializeFirebase() {&#10;        firestore = FirebaseFirestore.getInstance();&#10;        Log.d(TAG, &quot;Firestore initialized&quot;);&#10;    }&#10;&#10;    private void initializeProvinceCityMapping() {&#10;        // Initialize province-city mapping&#10;        provinceCityMap = new HashMap&lt;&gt;();&#10;        provinceCityMap.put(&quot;Western Province&quot;, new String[]{&#10;            &quot;Colombo&quot;, &quot;Gampaha&quot;, &quot;Kalutara&quot;, &quot;Negombo&quot;, &quot;Panadura&quot;, &quot;Moratuwa&quot;,&#10;            &quot;Sri Jayawardenepura Kotte&quot;, &quot;Dehiwala&quot;, &quot;Mount Lavinia&quot;, &quot;Kelaniya&quot;,&#10;            &quot;Ja-Ela&quot;, &quot;Wattala&quot;, &quot;Peliyagoda&quot;, &quot;Ragama&quot;, &quot;Kaduwela&quot;, &quot;Maharagama&quot;,&#10;            &quot;Kotte&quot;, &quot;Battaramulla&quot;, &quot;Homagama&quot;, &quot;Padukka&quot;, &quot;Hanwella&quot;, &quot;Avissawella&quot;,&#10;            &quot;Beruwala&quot;, &quot;Bentota&quot;, &quot;Aluthgama&quot;, &quot;Wadduwa&quot;, &quot;Payagala&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Central Province&quot;, new String[]{&#10;            &quot;Kandy&quot;, &quot;Matale&quot;, &quot;Nuwara Eliya&quot;, &quot;Gampola&quot;, &quot;Nawalapitiya&quot;, &quot;Hatton&quot;,&#10;            &quot;Talawakelle&quot;, &quot;Nanu Oya&quot;, &quot;Haputale&quot;, &quot;Bandarawela&quot;, &quot;Ella&quot;, &quot;Welimada&quot;,&#10;            &quot;Badulla&quot;, &quot;Passara&quot;, &quot;Mahiyanganaya&quot;, &quot;Diyatalawa&quot;, &quot;Pussellawa&quot;,&#10;            &quot;Ramboda&quot;, &quot;Maskeliya&quot;, &quot;Norton Bridge&quot;, &quot;Watawala&quot;, &quot;Dikoya&quot;, &quot;Bogawantalawa&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Southern Province&quot;, new String[]{&#10;            &quot;Galle&quot;, &quot;Matara&quot;, &quot;Hambantota&quot;, &quot;Tangalle&quot;, &quot;Mirissa&quot;, &quot;Weligama&quot;,&#10;            &quot;Dikwella&quot;, &quot;Tissamaharama&quot;, &quot;Kataragama&quot;, &quot;Embilipitiya&quot;, &quot;Suriyawewa&quot;,&#10;            &quot;Ambalantota&quot;, &quot;Beliatta&quot;, &quot;Deniyaya&quot;, &quot;Akuressa&quot;, &quot;Kamburupitiya&quot;,&#10;            &quot;Kirinda&quot;, &quot;Yala&quot;, &quot;Bundala&quot;, &quot;Unawatuna&quot;, &quot;Hikkaduwa&quot;, &quot;Bentota&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Northern Province&quot;, new String[]{&#10;            &quot;Jaffna&quot;, &quot;Vavuniya&quot;, &quot;Mannar&quot;, &quot;Kilinochchi&quot;, &quot;Mullaittivu&quot;, &quot;Point Pedro&quot;,&#10;            &quot;Chavakachcheri&quot;, &quot;Valvettithurai&quot;, &quot;Kayts&quot;, &quot;Karainagar&quot;, &quot;Nallur&quot;,&#10;            &quot;Kondavil&quot;, &quot;Tellippalai&quot;, &quot;Kopay&quot;, &quot;Udupiddy&quot;, &quot;Elephant Pass&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Eastern Province&quot;, new String[]{&#10;            &quot;Trincomalee&quot;, &quot;Batticaloa&quot;, &quot;Ampara&quot;, &quot;Kalmunai&quot;, &quot;Akkaraipattu&quot;,&#10;            &quot;Sammanthurai&quot;, &quot;Kattankudy&quot;, &quot;Eravur&quot;, &quot;Valaichchenai&quot;, &quot;Pasikudah&quot;,&#10;            &quot;Kalkudah&quot;, &quot;Arugam Bay&quot;, &quot;Pottuvil&quot;, &quot;Lahugala&quot;, &quot;Siyambalanduwa&quot;,&#10;            &quot;Uhana&quot;, &quot;Maha Oya&quot;, &quot;Nintavur&quot;, &quot;Addalachchenai&quot;, &quot;Chenkalady&quot;&#10;        });&#10;        provinceCityMap.put(&quot;North Western Province&quot;, new String[]{&#10;            &quot;Kurunegala&quot;, &quot;Puttalam&quot;, &quot;Chilaw&quot;, &quot;Wariyapola&quot;, &quot;Mawathagama&quot;,&#10;            &quot;Kuliyapitiya&quot;, &quot;Narammala&quot;, &quot;Pannala&quot;, &quot;Alawwa&quot;, &quot;Bingiriya&quot;,&#10;            &quot;Nikaweratiya&quot;, &quot;Giriulla&quot;, &quot;Polgahawela&quot;, &quot;Kegalle&quot;, &quot;Mawanella&quot;,&#10;            &quot;Warakapola&quot;, &quot;Ruwanwella&quot;, &quot;Yatiyantota&quot;, &quot;Deraniyagala&quot;, &quot;Kitulgala&quot;&#10;        });&#10;        provinceCityMap.put(&quot;North Central Province&quot;, new String[]{&#10;            &quot;Anuradhapura&quot;, &quot;Polonnaruwa&quot;, &quot;Dambulla&quot;, &quot;Sigiriya&quot;, &quot;Habarana&quot;,&#10;            &quot;Mihintale&quot;, &quot;Kekirawa&quot;, &quot;Tambuttegama&quot;, &quot;Galenbindunuwewa&quot;, &quot;Eppawala&quot;,&#10;            &quot;Medawachchiya&quot;, &quot;Rambewa&quot;, &quot;Thambuttegama&quot;, &quot;Galnewa&quot;, &quot;Palagala&quot;,&#10;            &quot;Hingurakgoda&quot;, &quot;Minneriya&quot;, &quot;Medirigiriya&quot;, &quot;Welikanda&quot;, &quot;Dimbulagala&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Uva Province&quot;, new String[]{&#10;            &quot;Badulla&quot;, &quot;Monaragala&quot;, &quot;Bandarawela&quot;, &quot;Ella&quot;, &quot;Haputale&quot;, &quot;Welimada&quot;,&#10;            &quot;Passara&quot;, &quot;Mahiyanganaya&quot;, &quot;Diyatalawa&quot;, &quot;Hali Ela&quot;, &quot;Demodara&quot;,&#10;            &quot;Namunukula&quot;, &quot;Uva Paranagama&quot;, &quot;Kandaketiya&quot;, &quot;Haldummulla&quot;, &quot;Hapugastenna&quot;,&#10;            &quot;Soranathota&quot;, &quot;Meegahakiula&quot;, &quot;Buttala&quot;, &quot;Wellawaya&quot;, &quot;Thanamalwila&quot;,&#10;            &quot;Kataragama&quot;, &quot;Siyambalanduwa&quot;, &quot;Madulla&quot;, &quot;Bibile&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Sabaragamuwa Province&quot;, new String[]{&#10;            &quot;Ratnapura&quot;, &quot;Kegalle&quot;, &quot;Embilipitiya&quot;, &quot;Balangoda&quot;, &quot;Kahawatta&quot;,&#10;            &quot;Pelmadulla&quot;, &quot;Eheliyagoda&quot;, &quot;Kuruwita&quot;, &quot;Godakawela&quot;, &quot;Rakwana&quot;,&#10;            &quot;Nivitigala&quot;, &quot;Kalawana&quot;, &quot;Kolonne&quot;, &quot;Weligepola&quot;, &quot;Ayagama&quot;,&#10;            &quot;Imbulpe&quot;, &quot;Lellopitiya&quot;, &quot;Opanayaka&quot;, &quot;Palmadulla&quot;, &quot;Suriyawewa&quot;&#10;        });&#10;    }&#10;&#10;    private void setupDropdowns() {&#10;        // Categories dropdown&#10;        String[] categories = {&#10;            &quot;Historical Site&quot;, &quot;WaterFall&quot;, &quot;Beach&quot;, &quot;Mountain&quot;, &quot;Temple&quot;,&#10;            &quot;National Park&quot;, &quot;Cave&quot;, &quot;Lake&quot;, &quot;Village&quot;, &quot;Cultural Site&quot;, &quot;More&quot;&#10;        };&#10;        ArrayAdapter&lt;String&gt; categoryAdapter = new ArrayAdapter&lt;&gt;(this,&#10;            android.R.layout.simple_dropdown_item_1line, categories);&#10;        etCategory.setAdapter(categoryAdapter);&#10;&#10;        // All Sri Lankan cities (comprehensive list)&#10;        List&lt;String&gt; allCities = new ArrayList&lt;&gt;();&#10;        for (String[] cities : provinceCityMap.values()) {&#10;            for (String city : cities) {&#10;                if (!allCities.contains(city)) {&#10;                    allCities.add(city);&#10;                }&#10;            }&#10;        }&#10;        allCities.sort(String::compareToIgnoreCase);&#10;&#10;        ArrayAdapter&lt;String&gt; cityAdapter = new ArrayAdapter&lt;&gt;(this,&#10;            android.R.layout.simple_dropdown_item_1line, allCities);&#10;        etCity.setAdapter(cityAdapter);&#10;        etCity.setEnabled(true);&#10;&#10;        // Provinces dropdown&#10;        String[] provinces = {&#10;            &quot;Western Province&quot;, &quot;Central Province&quot;, &quot;Southern Province&quot;, &quot;Northern Province&quot;,&#10;            &quot;Eastern Province&quot;, &quot;North Western Province&quot;, &quot;North Central Province&quot;, &quot;Uva Province&quot;,&#10;            &quot;Sabaragamuwa Province&quot;&#10;        };&#10;        ArrayAdapter&lt;String&gt; provinceAdapter = new ArrayAdapter&lt;&gt;(this,&#10;            android.R.layout.simple_dropdown_item_1line, provinces);&#10;        etProvince.setAdapter(provinceAdapter);&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnSubmitLocation.setOnClickListener(v -&gt; validateAndSubmitLocation());&#10;        btnLoadUrl.setOnClickListener(v -&gt; loadImageFromUrl());&#10;&#10;        // Province selection listener - optional filtering&#10;        etProvince.setOnItemClickListener((parent, view, position, id) -&gt; {&#10;            String selectedProvince = parent.getItemAtPosition(position).toString();&#10;            updateCityDropdown(selectedProvince);&#10;        });&#10;    }&#10;&#10;    private void updateCityDropdown(String selectedProvince) {&#10;        String[] cities = provinceCityMap.get(selectedProvince);&#10;        if (cities != null) {&#10;            ArrayAdapter&lt;String&gt; cityAdapter = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_dropdown_item_1line, cities);&#10;            etCity.setAdapter(cityAdapter);&#10;            etCity.setText(&quot;&quot;);&#10;&#10;            tilCity.setHint(&quot;Select City from &quot; + selectedProvince);&#10;            Toast.makeText(this, &quot;Cities filtered for &quot; + selectedProvince, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    private void loadImageFromUrl() {&#10;        String url = etImageUrl.getText().toString().trim();&#10;&#10;        if (TextUtils.isEmpty(url)) {&#10;            etImageUrl.setError(&quot;Please enter an image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (!isValidUrl(url)) {&#10;            etImageUrl.setError(&quot;Please enter a valid image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        loadAndDisplayImage(url);&#10;    }&#10;&#10;    private boolean isValidUrl(String url) {&#10;        return url.startsWith(&quot;http://&quot;) || url.startsWith(&quot;https://&quot;);&#10;    }&#10;&#10;    private void loadAndDisplayImage(String url) {&#10;        progressBar.setVisibility(View.VISIBLE);&#10;&#10;        Glide.with(this)&#10;            .load(url)&#10;            .into(ivSelectedImage);&#10;&#10;        layoutImagePlaceholder.setVisibility(View.GONE);&#10;        ivSelectedImage.setVisibility(View.VISIBLE);&#10;&#10;        progressBar.setVisibility(View.GONE);&#10;        Toast.makeText(this, &quot;Image loaded successfully&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;&#10;    private void validateAndSubmitLocation() {&#10;        String locationName = etLocationName.getText().toString().trim();&#10;        String description = etDescription.getText().toString().trim();&#10;        String category = etCategory.getText().toString().trim();&#10;        String city = etCity.getText().toString().trim();&#10;        String contributorName = etContributorName.getText().toString().trim();&#10;        String youtubeUrl = etYoutubeUrl.getText().toString().trim();&#10;        String province = etProvince.getText().toString().trim();&#10;&#10;        // Validation&#10;        if (TextUtils.isEmpty(locationName)) {&#10;            etLocationName.setError(&quot;Location name is required&quot;);&#10;            etLocationName.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(description)) {&#10;            etDescription.setError(&quot;Description is required&quot;);&#10;            etDescription.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(category)) {&#10;            etCategory.setError(&quot;Category is required&quot;);&#10;            etCategory.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(city)) {&#10;            etCity.setError(&quot;City is required&quot;);&#10;            etCity.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(contributorName)) {&#10;            etContributorName.setError(&quot;Your name is required&quot;);&#10;            etContributorName.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(province)) {&#10;            etProvince.setError(&quot;Province is required&quot;);&#10;            etProvince.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Check if image URL is provided&#10;        String providedImageUrl = etImageUrl.getText().toString().trim();&#10;        if (TextUtils.isEmpty(providedImageUrl)) {&#10;            etImageUrl.setError(&quot;Please provide an image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Validate image URL&#10;        if (!isValidUrl(providedImageUrl)) {&#10;            etImageUrl.setError(&quot;Please enter a valid image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Validate YouTube URL if provided&#10;        if (!TextUtils.isEmpty(youtubeUrl) &amp;&amp; !isValidYouTubeUrl(youtubeUrl)) {&#10;            etYoutubeUrl.setError(&quot;Please enter a valid YouTube URL&quot;);&#10;            etYoutubeUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // All validations passed, submit the location&#10;        submitLocation(locationName, description, category, city, contributorName, youtubeUrl, province, providedImageUrl);&#10;    }&#10;&#10;    private boolean isValidYouTubeUrl(String url) {&#10;        return url.contains(&quot;youtube.com/watch?v=&quot;) || url.contains(&quot;youtu.be/&quot;);&#10;    }&#10;&#10;    private void submitLocation(String locationName, String description, String category,&#10;                              String city, String contributorName, String youtubeUrl, String province, String imageUrl) {&#10;        progressBar.setVisibility(View.VISIBLE);&#10;&#10;        saveLocationToFirestore(locationName, description, category, city,&#10;                              contributorName, youtubeUrl, imageUrl, province);&#10;    }&#10;&#10;    private void saveLocationToFirestore(String locationName, String description, String category,&#10;                                       String city, String contributorName, String youtubeUrl,&#10;                                       String finalImageUrl, String province) {&#10;&#10;        // Create location data map&#10;        Map&lt;String, Object&gt; locationData = new HashMap&lt;&gt;();&#10;        locationData.put(&quot;name&quot;, locationName);&#10;        locationData.put(&quot;description&quot;, description);&#10;        locationData.put(&quot;category&quot;, category);&#10;        locationData.put(&quot;city&quot;, city);&#10;        locationData.put(&quot;province&quot;, province);&#10;        locationData.put(&quot;contributorName&quot;, contributorName);&#10;        locationData.put(&quot;contributedAt&quot;, System.currentTimeMillis());&#10;        locationData.put(&quot;youtubeUrl&quot;, youtubeUrl.isEmpty() ? &quot;&quot; : youtubeUrl);&#10;&#10;        // Create images list with the provided URL&#10;        List&lt;String&gt; images = new ArrayList&lt;&gt;();&#10;        images.add(finalImageUrl);&#10;        locationData.put(&quot;images&quot;, images);&#10;&#10;        // Save to Firestore under cities/{city}/attractions collection&#10;        firestore.collection(&quot;cities&quot;)&#10;                .document(city)&#10;                .collection(&quot;attractions&quot;)&#10;                .add(locationData)&#10;                .addOnSuccessListener(documentReference -&gt; {&#10;                    progressBar.setVisibility(View.GONE);&#10;                    Log.d(TAG, &quot;Location added successfully with ID: &quot; + documentReference.getId());&#10;&#10;                    Toast.makeText(this, &quot;Location added successfully! Thank you for your contribution.&quot;,&#10;                                 Toast.LENGTH_LONG).show();&#10;&#10;                    // Clear form after successful submission&#10;                    clearForm();&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    progressBar.setVisibility(View.GONE);&#10;                    Log.e(TAG, &quot;Error adding location: &quot; + e.getMessage());&#10;&#10;                    String errorMessage = &quot;Failed to add location&quot;;&#10;                    if (e.getMessage() != null) {&#10;                        if (e.getMessage().contains(&quot;PERMISSION_DENIED&quot;)) {&#10;                            errorMessage = &quot;Permission denied. Please check Firestore security rules.&quot;;&#10;                        } else if (e.getMessage().contains(&quot;Network&quot;)) {&#10;                            errorMessage = &quot;Network error. Please check your internet connection.&quot;;&#10;                        } else {&#10;                            errorMessage = &quot;Error: &quot; + e.getMessage();&#10;                        }&#10;                    }&#10;&#10;                    Toast.makeText(this, errorMessage, Toast.LENGTH_LONG).show();&#10;                });&#10;    }&#10;&#10;    private void clearForm() {&#10;        etLocationName.setText(&quot;&quot;);&#10;        etDescription.setText(&quot;&quot;);&#10;        etCategory.setText(&quot;&quot;);&#10;        etCity.setText(&quot;&quot;);&#10;        etProvince.setText(&quot;&quot;);&#10;        etContributorName.setText(&quot;&quot;);&#10;        etYoutubeUrl.setText(&quot;&quot;);&#10;        etImageUrl.setText(&quot;&quot;);&#10;&#10;        ivSelectedImage.setVisibility(View.GONE);&#10;        layoutImagePlaceholder.setVisibility(View.VISIBLE);&#10;&#10;        tilCity.setHint(&quot;City *&quot;);&#10;    }&#10;}&#10;&#10;&#10;" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.os.Bundle;&#10;import android.text.TextUtils;&#10;import android.util.Log;&#10;import android.view.View;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.AutoCompleteTextView;&#10;import android.widget.EditText;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.Toast;&#10;import android.widget.ProgressBar;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.google.android.material.button.MaterialButton;&#10;import com.google.android.material.textfield.TextInputLayout;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;&#10;import java.util.ArrayList;&#10;import java.util.HashMap;&#10;import java.util.List;&#10;import java.util.Map;&#10;&#10;public class AddLocationActivity extends BaseActivity {&#10;&#10;    private static final String TAG = &quot;AddLocationActivity&quot;;&#10;&#10;    // UI Components&#10;    private EditText etLocationName, etDescription, etYoutubeUrl, etContributorName, etImageUrl;&#10;    private AutoCompleteTextView etCategory, etCity, etProvince;&#10;    private ImageView ivSelectedImage, ivTutorialThumbnail, btnPlayTutorial;&#10;    private LinearLayout layoutImagePlaceholder;&#10;    private MaterialButton btnSubmitLocation, btnLoadUrl;&#10;    private TextInputLayout tilCity;&#10;    private ProgressBar progressBar; // Replace ProgressDialog with ProgressBar&#10;&#10;    // Tutorial video URL - Replace with your actual instructional video&#10;    private static final String TUTORIAL_VIDEO_URL = &quot;https://www.youtube.com/watch?v=YOUR_TUTORIAL_VIDEO_ID&quot;; // Replace with actual tutorial video&#10;&#10;    // Firebase&#10;    private FirebaseFirestore firestore;&#10;&#10;    // Data structures for province-city mapping&#10;    private Map&lt;String, String[]&gt; provinceCityMap;&#10;&#10;    @Override&#10;    protected int getLayoutResourceId() {&#10;        return R.layout.activity_add_location;&#10;    }&#10;&#10;    @Override&#10;    protected String getActivityTitle() {&#10;        return &quot;Add New Location&quot;;&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        initializeViews();&#10;        initializeFirebase();&#10;        initializeProvinceCityMapping();&#10;        setupDropdowns();&#10;        setupClickListeners();&#10;        setupTutorialVideo();&#10;    }&#10;&#10;    private void initializeViews() {&#10;        etLocationName = findViewById(R.id.et_location_name);&#10;        etDescription = findViewById(R.id.et_description);&#10;        etYoutubeUrl = findViewById(R.id.et_youtube_url);&#10;        etContributorName = findViewById(R.id.et_contributor_name);&#10;        etImageUrl = findViewById(R.id.et_image_url);&#10;        etCategory = findViewById(R.id.et_category);&#10;        etCity = findViewById(R.id.et_city);&#10;        etProvince = findViewById(R.id.et_province);&#10;        ivSelectedImage = findViewById(R.id.iv_selected_image);&#10;        ivTutorialThumbnail = findViewById(R.id.iv_tutorial_thumbnail);&#10;        btnPlayTutorial = findViewById(R.id.btn_play_tutorial);&#10;        layoutImagePlaceholder = findViewById(R.id.layout_image_placeholder);&#10;        btnSubmitLocation = findViewById(R.id.btn_submit_location);&#10;        btnLoadUrl = findViewById(R.id.btn_load_url);&#10;        tilCity = findViewById(R.id.til_city);&#10;&#10;        // Reference ProgressBar from layout&#10;        progressBar = findViewById(R.id.progress_bar);&#10;    }&#10;&#10;    private void initializeFirebase() {&#10;        firestore = FirebaseFirestore.getInstance();&#10;        Log.d(TAG, &quot;Firestore initialized&quot;);&#10;    }&#10;&#10;    private void initializeProvinceCityMapping() {&#10;        // Initialize province-city mapping&#10;        provinceCityMap = new HashMap&lt;&gt;();&#10;        provinceCityMap.put(&quot;Western Province&quot;, new String[]{&#10;            &quot;Colombo&quot;, &quot;Gampaha&quot;, &quot;Kalutara&quot;, &quot;Negombo&quot;, &quot;Panadura&quot;, &quot;Moratuwa&quot;,&#10;            &quot;Sri Jayawardenepura Kotte&quot;, &quot;Dehiwala&quot;, &quot;Mount Lavinia&quot;, &quot;Kelaniya&quot;,&#10;            &quot;Ja-Ela&quot;, &quot;Wattala&quot;, &quot;Peliyagoda&quot;, &quot;Ragama&quot;, &quot;Kaduwela&quot;, &quot;Maharagama&quot;,&#10;            &quot;Kotte&quot;, &quot;Battaramulla&quot;, &quot;Homagama&quot;, &quot;Padukka&quot;, &quot;Hanwella&quot;, &quot;Avissawella&quot;,&#10;            &quot;Beruwala&quot;, &quot;Bentota&quot;, &quot;Aluthgama&quot;, &quot;Wadduwa&quot;, &quot;Payagala&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Central Province&quot;, new String[]{&#10;            &quot;Kandy&quot;, &quot;Matale&quot;, &quot;Nuwara Eliya&quot;, &quot;Gampola&quot;, &quot;Nawalapitiya&quot;, &quot;Hatton&quot;,&#10;            &quot;Talawakelle&quot;, &quot;Nanu Oya&quot;, &quot;Haputale&quot;, &quot;Bandarawela&quot;, &quot;Ella&quot;, &quot;Welimada&quot;,&#10;            &quot;Badulla&quot;, &quot;Passara&quot;, &quot;Mahiyanganaya&quot;, &quot;Diyatalawa&quot;, &quot;Pussellawa&quot;,&#10;            &quot;Ramboda&quot;, &quot;Maskeliya&quot;, &quot;Norton Bridge&quot;, &quot;Watawala&quot;, &quot;Dikoya&quot;, &quot;Bogawantalawa&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Southern Province&quot;, new String[]{&#10;            &quot;Galle&quot;, &quot;Matara&quot;, &quot;Hambantota&quot;, &quot;Tangalle&quot;, &quot;Mirissa&quot;, &quot;Weligama&quot;,&#10;            &quot;Dikwella&quot;, &quot;Tissamaharama&quot;, &quot;Kataragama&quot;, &quot;Embilipitiya&quot;, &quot;Suriyawewa&quot;,&#10;            &quot;Ambalantota&quot;, &quot;Beliatta&quot;, &quot;Deniyaya&quot;, &quot;Akuressa&quot;, &quot;Kamburupitiya&quot;,&#10;            &quot;Kirinda&quot;, &quot;Yala&quot;, &quot;Bundala&quot;, &quot;Unawatuna&quot;, &quot;Hikkaduwa&quot;, &quot;Bentota&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Northern Province&quot;, new String[]{&#10;            &quot;Jaffna&quot;, &quot;Vavuniya&quot;, &quot;Mannar&quot;, &quot;Kilinochchi&quot;, &quot;Mullaittivu&quot;, &quot;Point Pedro&quot;,&#10;            &quot;Chavakachcheri&quot;, &quot;Valvettithurai&quot;, &quot;Kayts&quot;, &quot;Karainagar&quot;, &quot;Nallur&quot;,&#10;            &quot;Kondavil&quot;, &quot;Tellippalai&quot;, &quot;Kopay&quot;, &quot;Udupiddy&quot;, &quot;Elephant Pass&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Eastern Province&quot;, new String[]{&#10;            &quot;Trincomalee&quot;, &quot;Batticaloa&quot;, &quot;Ampara&quot;, &quot;Kalmunai&quot;, &quot;Akkaraipattu&quot;,&#10;            &quot;Sammanthurai&quot;, &quot;Kattankudy&quot;, &quot;Eravur&quot;, &quot;Valaichchenai&quot;, &quot;Pasikudah&quot;,&#10;            &quot;Kalkudah&quot;, &quot;Arugam Bay&quot;, &quot;Pottuvil&quot;, &quot;Lahugala&quot;, &quot;Siyambalanduwa&quot;,&#10;            &quot;Uhana&quot;, &quot;Maha Oya&quot;, &quot;Nintavur&quot;, &quot;Addalachchenai&quot;, &quot;Chenkalady&quot;&#10;        });&#10;        provinceCityMap.put(&quot;North Western Province&quot;, new String[]{&#10;            &quot;Kurunegala&quot;, &quot;Puttalam&quot;, &quot;Chilaw&quot;, &quot;Wariyapola&quot;, &quot;Mawathagama&quot;,&#10;            &quot;Kuliyapitiya&quot;, &quot;Narammala&quot;, &quot;Pannala&quot;, &quot;Alawwa&quot;, &quot;Bingiriya&quot;,&#10;            &quot;Nikaweratiya&quot;, &quot;Giriulla&quot;, &quot;Polgahawela&quot;, &quot;Kegalle&quot;, &quot;Mawanella&quot;,&#10;            &quot;Warakapola&quot;, &quot;Ruwanwella&quot;, &quot;Yatiyantota&quot;, &quot;Deraniyagala&quot;, &quot;Kitulgala&quot;&#10;        });&#10;        provinceCityMap.put(&quot;North Central Province&quot;, new String[]{&#10;            &quot;Anuradhapura&quot;, &quot;Polonnaruwa&quot;, &quot;Dambulla&quot;, &quot;Sigiriya&quot;, &quot;Habarana&quot;,&#10;            &quot;Mihintale&quot;, &quot;Kekirawa&quot;, &quot;Tambuttegama&quot;, &quot;Galenbindunuwewa&quot;, &quot;Eppawala&quot;,&#10;            &quot;Medawachchiya&quot;, &quot;Rambewa&quot;, &quot;Thambuttegama&quot;, &quot;Galnewa&quot;, &quot;Palagala&quot;,&#10;            &quot;Hingurakgoda&quot;, &quot;Minneriya&quot;, &quot;Medirigiriya&quot;, &quot;Welikanda&quot;, &quot;Dimbulagala&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Uva Province&quot;, new String[]{&#10;            &quot;Badulla&quot;, &quot;Monaragala&quot;, &quot;Bandarawela&quot;, &quot;Ella&quot;, &quot;Haputale&quot;, &quot;Welimada&quot;,&#10;            &quot;Passara&quot;, &quot;Mahiyanganaya&quot;, &quot;Diyatalawa&quot;, &quot;Hali Ela&quot;, &quot;Demodara&quot;,&#10;            &quot;Namunukula&quot;, &quot;Uva Paranagama&quot;, &quot;Kandaketiya&quot;, &quot;Haldummulla&quot;, &quot;Hapugastenna&quot;,&#10;            &quot;Soranathota&quot;, &quot;Meegahakiula&quot;, &quot;Buttala&quot;, &quot;Wellawaya&quot;, &quot;Thanamalwila&quot;,&#10;            &quot;Kataragama&quot;, &quot;Siyambalanduwa&quot;, &quot;Madulla&quot;, &quot;Bibile&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Sabaragamuwa Province&quot;, new String[]{&#10;            &quot;Ratnapura&quot;, &quot;Kegalle&quot;, &quot;Embilipitiya&quot;, &quot;Balangoda&quot;, &quot;Kahawatta&quot;,&#10;            &quot;Pelmadulla&quot;, &quot;Eheliyagoda&quot;, &quot;Kuruwita&quot;, &quot;Godakawela&quot;, &quot;Rakwana&quot;,&#10;            &quot;Nivitigala&quot;, &quot;Kalawana&quot;, &quot;Kolonne&quot;, &quot;Weligepola&quot;, &quot;Ayagama&quot;,&#10;            &quot;Imbulpe&quot;, &quot;Lellopitiya&quot;, &quot;Opanayaka&quot;, &quot;Palmadulla&quot;, &quot;Suriyawewa&quot;&#10;        });&#10;    }&#10;&#10;    private void setupDropdowns() {&#10;        // Categories dropdown&#10;        String[] categories = {&#10;            &quot;Historical Site&quot;, &quot;WaterFall&quot;, &quot;Beach&quot;, &quot;Mountain&quot;, &quot;Temple&quot;,&#10;            &quot;National Park&quot;, &quot;Cave&quot;, &quot;Lake&quot;, &quot;Village&quot;, &quot;Cultural Site&quot;, &quot;More&quot;&#10;        };&#10;        ArrayAdapter&lt;String&gt; categoryAdapter = new ArrayAdapter&lt;&gt;(this,&#10;            android.R.layout.simple_dropdown_item_1line, categories);&#10;        etCategory.setAdapter(categoryAdapter);&#10;&#10;        // All Sri Lankan cities (comprehensive list)&#10;        List&lt;String&gt; allCities = new ArrayList&lt;&gt;();&#10;        for (String[] cities : provinceCityMap.values()) {&#10;            for (String city : cities) {&#10;                if (!allCities.contains(city)) {&#10;                    allCities.add(city);&#10;                }&#10;            }&#10;        }&#10;        allCities.sort(String::compareToIgnoreCase);&#10;&#10;        ArrayAdapter&lt;String&gt; cityAdapter = new ArrayAdapter&lt;&gt;(this,&#10;            android.R.layout.simple_dropdown_item_1line, allCities);&#10;        etCity.setAdapter(cityAdapter);&#10;        etCity.setEnabled(true);&#10;&#10;        // Provinces dropdown&#10;        String[] provinces = {&#10;            &quot;Western Province&quot;, &quot;Central Province&quot;, &quot;Southern Province&quot;, &quot;Northern Province&quot;,&#10;            &quot;Eastern Province&quot;, &quot;North Western Province&quot;, &quot;North Central Province&quot;, &quot;Uva Province&quot;,&#10;            &quot;Sabaragamuwa Province&quot;&#10;        };&#10;        ArrayAdapter&lt;String&gt; provinceAdapter = new ArrayAdapter&lt;&gt;(this,&#10;            android.R.layout.simple_dropdown_item_1line, provinces);&#10;        etProvince.setAdapter(provinceAdapter);&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnSubmitLocation.setOnClickListener(v -&gt; validateAndSubmitLocation());&#10;        btnLoadUrl.setOnClickListener(v -&gt; loadImageFromUrl());&#10;&#10;        // Province selection listener - optional filtering&#10;        etProvince.setOnItemClickListener((parent, view, position, id) -&gt; {&#10;            String selectedProvince = parent.getItemAtPosition(position).toString();&#10;            updateCityDropdown(selectedProvince);&#10;        });&#10;&#10;        // Tutorial video play button&#10;        btnPlayTutorial.setOnClickListener(v -&gt; playTutorialVideo());&#10;    }&#10;&#10;    private void updateCityDropdown(String selectedProvince) {&#10;        String[] cities = provinceCityMap.get(selectedProvince);&#10;        if (cities != null) {&#10;            ArrayAdapter&lt;String&gt; cityAdapter = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_dropdown_item_1line, cities);&#10;            etCity.setAdapter(cityAdapter);&#10;            etCity.setText(&quot;&quot;);&#10;&#10;            tilCity.setHint(&quot;Select City from &quot; + selectedProvince);&#10;            Toast.makeText(this, &quot;Cities filtered for &quot; + selectedProvince, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    private void loadImageFromUrl() {&#10;        String url = etImageUrl.getText().toString().trim();&#10;&#10;        if (TextUtils.isEmpty(url)) {&#10;            etImageUrl.setError(&quot;Please enter an image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (!isValidUrl(url)) {&#10;            etImageUrl.setError(&quot;Please enter a valid image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        loadAndDisplayImage(url);&#10;    }&#10;&#10;    private boolean isValidUrl(String url) {&#10;        return url.startsWith(&quot;http://&quot;) || url.startsWith(&quot;https://&quot;);&#10;    }&#10;&#10;    private void loadAndDisplayImage(String url) {&#10;        progressBar.setVisibility(View.VISIBLE);&#10;&#10;        Glide.with(this)&#10;            .load(url)&#10;            .into(ivSelectedImage);&#10;&#10;        layoutImagePlaceholder.setVisibility(View.GONE);&#10;        ivSelectedImage.setVisibility(View.VISIBLE);&#10;&#10;        progressBar.setVisibility(View.GONE);&#10;        Toast.makeText(this, &quot;Image loaded successfully&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;&#10;    private void validateAndSubmitLocation() {&#10;        String locationName = etLocationName.getText().toString().trim();&#10;        String description = etDescription.getText().toString().trim();&#10;        String category = etCategory.getText().toString().trim();&#10;        String city = etCity.getText().toString().trim();&#10;        String contributorName = etContributorName.getText().toString().trim();&#10;        String youtubeUrl = etYoutubeUrl.getText().toString().trim();&#10;        String province = etProvince.getText().toString().trim();&#10;&#10;        // Validation&#10;        if (TextUtils.isEmpty(locationName)) {&#10;            etLocationName.setError(&quot;Location name is required&quot;);&#10;            etLocationName.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(description)) {&#10;            etDescription.setError(&quot;Description is required&quot;);&#10;            etDescription.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Updated description length check - increased to 3000 characters&#10;        if (description.length() &gt; 3000) {&#10;            etDescription.setError(&quot;Description cannot exceed 3000 characters (&quot; + description.length() + &quot;/3000)&quot;);&#10;            etDescription.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (description.length() &lt; 50) {&#10;            etDescription.setError(&quot;Description must be at least 50 characters (&quot; + description.length() + &quot;/50)&quot;);&#10;            etDescription.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(category)) {&#10;            etCategory.setError(&quot;Category is required&quot;);&#10;            etCategory.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(city)) {&#10;            etCity.setError(&quot;City is required&quot;);&#10;            etCity.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(contributorName)) {&#10;            etContributorName.setError(&quot;Your name is required&quot;);&#10;            etContributorName.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(province)) {&#10;            etProvince.setError(&quot;Province is required&quot;);&#10;            etProvince.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Check if image URL is provided&#10;        String providedImageUrl = etImageUrl.getText().toString().trim();&#10;        if (TextUtils.isEmpty(providedImageUrl)) {&#10;            etImageUrl.setError(&quot;Please provide an image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Validate image URL&#10;        if (!isValidUrl(providedImageUrl)) {&#10;            etImageUrl.setError(&quot;Please enter a valid image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Validate YouTube URL if provided&#10;        if (!TextUtils.isEmpty(youtubeUrl) &amp;&amp; !isValidYouTubeUrl(youtubeUrl)) {&#10;            etYoutubeUrl.setError(&quot;Please enter a valid YouTube URL&quot;);&#10;            etYoutubeUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // All validations passed, submit the location&#10;        submitLocation(locationName, description, category, city, contributorName, youtubeUrl, province, providedImageUrl);&#10;    }&#10;&#10;    private boolean isValidYouTubeUrl(String url) {&#10;        return url.contains(&quot;youtube.com/watch?v=&quot;) || url.contains(&quot;youtu.be/&quot;);&#10;    }&#10;&#10;    private void submitLocation(String locationName, String description, String category,&#10;                              String city, String contributorName, String youtubeUrl, String province, String imageUrl) {&#10;        progressBar.setVisibility(View.VISIBLE);&#10;&#10;        saveLocationToFirestore(locationName, description, category, city,&#10;                              contributorName, youtubeUrl, imageUrl, province);&#10;    }&#10;&#10;    private void saveLocationToFirestore(String locationName, String description, String category,&#10;                                       String city, String contributorName, String youtubeUrl,&#10;                                       String finalImageUrl, String province) {&#10;&#10;        // Create location data map&#10;        Map&lt;String, Object&gt; locationData = new HashMap&lt;&gt;();&#10;        locationData.put(&quot;name&quot;, locationName);&#10;        locationData.put(&quot;description&quot;, description);&#10;        locationData.put(&quot;category&quot;, category);&#10;        locationData.put(&quot;city&quot;, city);&#10;        locationData.put(&quot;province&quot;, province);&#10;        locationData.put(&quot;contributorName&quot;, contributorName);&#10;        locationData.put(&quot;contributedAt&quot;, System.currentTimeMillis());&#10;        locationData.put(&quot;youtubeUrl&quot;, youtubeUrl.isEmpty() ? &quot;&quot; : youtubeUrl);&#10;&#10;        // Create images list with the provided URL&#10;        List&lt;String&gt; images = new ArrayList&lt;&gt;();&#10;        images.add(finalImageUrl);&#10;        locationData.put(&quot;images&quot;, images);&#10;&#10;        // Save to Firestore under cities/{city}/attractions collection&#10;        firestore.collection(&quot;cities&quot;)&#10;                .document(city)&#10;                .collection(&quot;attractions&quot;)&#10;                .add(locationData)&#10;                .addOnSuccessListener(documentReference -&gt; {&#10;                    progressBar.setVisibility(View.GONE);&#10;                    Log.d(TAG, &quot;Location added successfully with ID: &quot; + documentReference.getId());&#10;&#10;                    Toast.makeText(this, &quot;Location added successfully! Thank you for your contribution.&quot;,&#10;                                 Toast.LENGTH_LONG).show();&#10;&#10;                    // Clear form after successful submission&#10;                    clearForm();&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    progressBar.setVisibility(View.GONE);&#10;                    Log.e(TAG, &quot;Error adding location: &quot; + e.getMessage());&#10;&#10;                    String errorMessage = &quot;Failed to add location&quot;;&#10;                    if (e.getMessage() != null) {&#10;                        if (e.getMessage().contains(&quot;PERMISSION_DENIED&quot;)) {&#10;                            errorMessage = &quot;Permission denied. Please check Firestore security rules.&quot;;&#10;                        } else if (e.getMessage().contains(&quot;Network&quot;)) {&#10;                            errorMessage = &quot;Network error. Please check your internet connection.&quot;;&#10;                        } else {&#10;                            errorMessage = &quot;Error: &quot; + e.getMessage();&#10;                        }&#10;                    }&#10;&#10;                    Toast.makeText(this, errorMessage, Toast.LENGTH_LONG).show();&#10;                });&#10;    }&#10;&#10;    private void clearForm() {&#10;        etLocationName.setText(&quot;&quot;);&#10;        etDescription.setText(&quot;&quot;);&#10;        etCategory.setText(&quot;&quot;);&#10;        etCity.setText(&quot;&quot;);&#10;        etProvince.setText(&quot;&quot;);&#10;        etContributorName.setText(&quot;&quot;);&#10;        etYoutubeUrl.setText(&quot;&quot;);&#10;        etImageUrl.setText(&quot;&quot;);&#10;&#10;        ivSelectedImage.setVisibility(View.GONE);&#10;        layoutImagePlaceholder.setVisibility(View.VISIBLE);&#10;&#10;        tilCity.setHint(&quot;City *&quot;);&#10;    }&#10;&#10;    private void playTutorialVideo() {&#10;        try {&#10;            android.content.Intent youtubeIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(TUTORIAL_VIDEO_URL));&#10;            youtubeIntent.setPackage(&quot;com.google.android.youtube&quot;);&#10;&#10;            // Check if YouTube app is installed&#10;            if (youtubeIntent.resolveActivity(getPackageManager()) != null) {&#10;                startActivity(youtubeIntent);&#10;                Toast.makeText(this, &quot;Opening tutorial in YouTube app&quot;, Toast.LENGTH_SHORT).show();&#10;            } else {&#10;                // Fallback to web browser&#10;                android.content.Intent webIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(TUTORIAL_VIDEO_URL));&#10;                startActivity(webIntent);&#10;                Toast.makeText(this, &quot;Opening tutorial in browser&quot;, Toast.LENGTH_SHORT).show();&#10;            }&#10;        } catch (Exception e) {&#10;            Log.e(TAG, &quot;Error playing tutorial video: &quot; + e.getMessage());&#10;            Toast.makeText(this, &quot;Unable to play tutorial video&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    // Improved tutorial video setup with better instructions&#10;    private void setupTutorialVideo() {&#10;        // Load tutorial video thumbnail&#10;        String videoId = extractYouTubeVideoId(TUTORIAL_VIDEO_URL);&#10;        if (videoId != null &amp;&amp; !videoId.equals(&quot;YOUR_TUTORIAL_VIDEO_ID&quot;)) {&#10;            String thumbnailUrl = &quot;https://img.youtube.com/vi/&quot; + videoId + &quot;/maxresdefault.jpg&quot;;&#10;&#10;            Glide.with(this)&#10;                .load(thumbnailUrl)&#10;                .placeholder(R.drawable.ic_image_placeholder)&#10;                .error(R.drawable.ic_image_placeholder)&#10;                .centerCrop()&#10;                .into(ivTutorialThumbnail);&#10;        } else {&#10;            // Use a default image for tutorial placeholder&#10;            ivTutorialThumbnail.setImageResource(R.drawable.ic_image_placeholder);&#10;        }&#10;&#10;        // Setup click listeners for video elements&#10;        ivTutorialThumbnail.setOnClickListener(v -&gt; playTutorialVideo());&#10;    }&#10;&#10;    private String extractYouTubeVideoId(String youtubeUrl) {&#10;        try {&#10;            String videoId = null;&#10;&#10;            if (youtubeUrl.contains(&quot;youtube.com/watch?v=&quot;)) {&#10;                videoId = youtubeUrl.substring(youtubeUrl.indexOf(&quot;v=&quot;) + 2);&#10;            } else if (youtubeUrl.contains(&quot;youtu.be/&quot;)) {&#10;                videoId = youtubeUrl.substring(youtubeUrl.lastIndexOf(&quot;/&quot;) + 1);&#10;            }&#10;&#10;            // Remove any additional parameters&#10;            if (videoId != null &amp;&amp; videoId.contains(&quot;&amp;&quot;)) {&#10;                videoId = videoId.substring(0, videoId.indexOf(&quot;&amp;&quot;));&#10;            }&#10;&#10;            return videoId;&#10;        } catch (Exception e) {&#10;            Log.e(TAG, &quot;Error extracting YouTube video ID: &quot; + e.getMessage());&#10;            return null;&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/Attraction.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/Attraction.java" />
              <option name="originalContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import java.util.List;&#10;import java.util.ArrayList;&#10;&#10;public class Attraction {&#10;    private String documentId;&#10;    private String name;&#10;    private String category;&#10;    private String description;&#10;    private String youtubeUrl;&#10;    private List&lt;String&gt; images;&#10;&#10;    // New fields for contributor information&#10;    private String contributorName;&#10;    private long contributedAt;&#10;&#10;    // Field to identify placeholder entries&#10;    private boolean isPlaceholder;&#10;&#10;    // Firebase requires a public, no-argument constructor&#10;    public Attraction() {&#10;    }&#10;&#10;    // Constructor with all fields including contributor info&#10;    public Attraction(String documentId, String name, String category, String description,&#10;                     String youtubeUrl, List&lt;String&gt; images, String contributorName, long contributedAt) {&#10;        this.documentId = documentId;&#10;        this.name = name;&#10;        this.category = category;&#10;        this.description = description;&#10;        this.youtubeUrl = youtubeUrl;&#10;        this.images = images;&#10;        this.contributorName = contributorName;&#10;        this.contributedAt = contributedAt;&#10;    }&#10;&#10;    // Original constructor for backward compatibility&#10;    public Attraction(String documentId, String name, String category, String description, String youtubeUrl, List&lt;String&gt; images) {&#10;        this.documentId = documentId;&#10;        this.name = name;&#10;        this.category = category;&#10;        this.description = description;&#10;        this.youtubeUrl = youtubeUrl;&#10;        this.images = images;&#10;        this.contributorName = &quot;Unknown&quot;;&#10;        this.contributedAt = 0;&#10;    }&#10;&#10;    // Getters and Setters&#10;    public String getDocumentId() {&#10;        return documentId;&#10;    }&#10;&#10;    public void setDocumentId(String documentId) {&#10;        this.documentId = documentId;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;&#10;    public String getCategory() {&#10;        return category;&#10;    }&#10;&#10;    public void setCategory(String category) {&#10;        this.category = category;&#10;    }&#10;&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;&#10;    public String getYoutubeUrl() {&#10;        return youtubeUrl;&#10;    }&#10;&#10;    public void setYoutubeUrl(String youtubeUrl) {&#10;        this.youtubeUrl = youtubeUrl;&#10;    }&#10;&#10;    public List&lt;String&gt; getImages() {&#10;        return images;&#10;    }&#10;&#10;    @SuppressWarnings(&quot;unchecked&quot;)&#10;    public void setImages(Object imagesData) {&#10;        if (imagesData == null) {&#10;            this.images = new ArrayList&lt;&gt;();&#10;        } else if (imagesData instanceof List) {&#10;            // If it's already a List, cast it with proper type checking&#10;            List&lt;?&gt; rawList = (List&lt;?&gt;) imagesData;&#10;            this.images = new ArrayList&lt;&gt;();&#10;            for (Object item : rawList) {&#10;                if (item instanceof String) {&#10;                    this.images.add((String) item);&#10;                }&#10;            }&#10;        } else if (imagesData instanceof String) {&#10;            // If it's a String, convert it to a List&#10;            String imageString = (String) imagesData;&#10;            if (imageString.trim().isEmpty()) {&#10;                this.images = new ArrayList&lt;&gt;();&#10;            } else if (imageString.contains(&quot;,&quot;)) {&#10;                // Handle comma-separated string&#10;                this.images = new ArrayList&lt;&gt;();&#10;                String[] urlArray = imageString.split(&quot;,&quot;);&#10;                for (String url : urlArray) {&#10;                    this.images.add(url.trim());&#10;                }&#10;            } else {&#10;                // Single URL&#10;                this.images = new ArrayList&lt;&gt;();&#10;                this.images.add(imageString.trim());&#10;            }&#10;        } else {&#10;            // Fallback for any other data type&#10;            this.images = new ArrayList&lt;&gt;();&#10;        }&#10;    }&#10;&#10;    // New getters and setters for contributor information&#10;    public String getContributorName() {&#10;        return contributorName;&#10;    }&#10;&#10;    public void setContributorName(String contributorName) {&#10;        this.contributorName = contributorName;&#10;    }&#10;&#10;    public long getContributedAt() {&#10;        return contributedAt;&#10;    }&#10;&#10;    public void setContributedAt(long contributedAt) {&#10;        this.contributedAt = contributedAt;&#10;    }&#10;&#10;    // Getter and setter for isPlaceholder&#10;    public boolean isPlaceholder() {&#10;        return isPlaceholder;&#10;    }&#10;&#10;    public void setPlaceholder(boolean placeholder) {&#10;        isPlaceholder = placeholder;&#10;    }&#10;&#10;    // Helper method to get formatted contribution date&#10;    public String getFormattedContributionDate() {&#10;        if (contributedAt == 0) return &quot;Unknown&quot;;&#10;        return new java.text.SimpleDateFormat(&quot;MMM dd, yyyy&quot;, java.util.Locale.getDefault())&#10;                .format(new java.util.Date(contributedAt));&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import java.util.List;&#10;import java.util.ArrayList;&#10;&#10;public class Attraction {&#10;    private String documentId;&#10;    private String name;&#10;    private String category;&#10;    private String description;&#10;    private String youtubeUrl;&#10;    private List&lt;String&gt; images;&#10;&#10;    // New fields for contributor information&#10;    private String contributorName;&#10;    private long contributedAt;&#10;&#10;    // Location fields&#10;    private String city;&#10;    private String province;&#10;&#10;    // Field to identify placeholder entries&#10;    private boolean isPlaceholder;&#10;&#10;    // Firebase requires a public, no-argument constructor&#10;    public Attraction() {&#10;    }&#10;&#10;    // Constructor with all fields including contributor info and location&#10;    public Attraction(String documentId, String name, String category, String description,&#10;                     String youtubeUrl, List&lt;String&gt; images, String contributorName, long contributedAt,&#10;                     String city, String province) {&#10;        this.documentId = documentId;&#10;        this.name = name;&#10;        this.category = category;&#10;        this.description = description;&#10;        this.youtubeUrl = youtubeUrl;&#10;        this.images = images;&#10;        this.contributorName = contributorName;&#10;        this.contributedAt = contributedAt;&#10;        this.city = city;&#10;        this.province = province;&#10;    }&#10;&#10;    // Constructor with all fields including contributor info&#10;    public Attraction(String documentId, String name, String category, String description,&#10;                     String youtubeUrl, List&lt;String&gt; images, String contributorName, long contributedAt) {&#10;        this.documentId = documentId;&#10;        this.name = name;&#10;        this.category = category;&#10;        this.description = description;&#10;        this.youtubeUrl = youtubeUrl;&#10;        this.images = images;&#10;        this.contributorName = contributorName;&#10;        this.contributedAt = contributedAt;&#10;        this.city = &quot;&quot;;&#10;        this.province = &quot;&quot;;&#10;    }&#10;&#10;    // Original constructor for backward compatibility&#10;    public Attraction(String documentId, String name, String category, String description, String youtubeUrl, List&lt;String&gt; images) {&#10;        this.documentId = documentId;&#10;        this.name = name;&#10;        this.category = category;&#10;        this.description = description;&#10;        this.youtubeUrl = youtubeUrl;&#10;        this.images = images;&#10;        this.contributorName = &quot;Unknown&quot;;&#10;        this.contributedAt = 0;&#10;        this.city = &quot;&quot;;&#10;        this.province = &quot;&quot;;&#10;    }&#10;&#10;    // Getters and Setters&#10;    public String getDocumentId() {&#10;        return documentId;&#10;    }&#10;&#10;    public void setDocumentId(String documentId) {&#10;        this.documentId = documentId;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;&#10;    public String getCategory() {&#10;        return category;&#10;    }&#10;&#10;    public void setCategory(String category) {&#10;        this.category = category;&#10;    }&#10;&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;&#10;    public String getYoutubeUrl() {&#10;        return youtubeUrl;&#10;    }&#10;&#10;    public void setYoutubeUrl(String youtubeUrl) {&#10;        this.youtubeUrl = youtubeUrl;&#10;    }&#10;&#10;    public List&lt;String&gt; getImages() {&#10;        return images;&#10;    }&#10;&#10;    @SuppressWarnings(&quot;unchecked&quot;)&#10;    public void setImages(Object imagesData) {&#10;        if (imagesData == null) {&#10;            this.images = new ArrayList&lt;&gt;();&#10;        } else if (imagesData instanceof List) {&#10;            // If it's already a List, cast it with proper type checking&#10;            List&lt;?&gt; rawList = (List&lt;?&gt;) imagesData;&#10;            this.images = new ArrayList&lt;&gt;();&#10;            for (Object item : rawList) {&#10;                if (item instanceof String) {&#10;                    this.images.add((String) item);&#10;                }&#10;            }&#10;        } else if (imagesData instanceof String) {&#10;            // If it's a String, convert it to a List&#10;            String imageString = (String) imagesData;&#10;            if (imageString.trim().isEmpty()) {&#10;                this.images = new ArrayList&lt;&gt;();&#10;            } else if (imageString.contains(&quot;,&quot;)) {&#10;                // Handle comma-separated string&#10;                this.images = new ArrayList&lt;&gt;();&#10;                String[] urlArray = imageString.split(&quot;,&quot;);&#10;                for (String url : urlArray) {&#10;                    this.images.add(url.trim());&#10;                }&#10;            } else {&#10;                // Single URL&#10;                this.images = new ArrayList&lt;&gt;();&#10;                this.images.add(imageString.trim());&#10;            }&#10;        } else {&#10;            // Fallback for any other data type&#10;            this.images = new ArrayList&lt;&gt;();&#10;        }&#10;    }&#10;&#10;    // New getters and setters for contributor information&#10;    public String getContributorName() {&#10;        return contributorName;&#10;    }&#10;&#10;    public void setContributorName(String contributorName) {&#10;        this.contributorName = contributorName;&#10;    }&#10;&#10;    public long getContributedAt() {&#10;        return contributedAt;&#10;    }&#10;&#10;    public void setContributedAt(long contributedAt) {&#10;        this.contributedAt = contributedAt;&#10;    }&#10;&#10;    // Getter and setter for isPlaceholder&#10;    public boolean isPlaceholder() {&#10;        return isPlaceholder;&#10;    }&#10;&#10;    public void setPlaceholder(boolean placeholder) {&#10;        isPlaceholder = placeholder;&#10;    }&#10;&#10;    // New getters and setters for location fields&#10;    public String getCity() {&#10;        return city;&#10;    }&#10;&#10;    public void setCity(String city) {&#10;        this.city = city;&#10;    }&#10;&#10;    public String getProvince() {&#10;        return province;&#10;    }&#10;&#10;    public void setProvince(String province) {&#10;        this.province = province;&#10;    }&#10;&#10;    // Helper method to get formatted contribution date&#10;    public String getFormattedContributionDate() {&#10;        if (contributedAt == 0) return &quot;Unknown&quot;;&#10;        return new java.text.SimpleDateFormat(&quot;MMM dd, yyyy&quot;, java.util.Locale.getDefault())&#10;                .format(new java.util.Date(contributedAt));&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/AttractionAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/AttractionAdapter.java" />
              <option name="originalContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Intent;&#10;import android.graphics.drawable.Drawable;&#10;import android.util.Log;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.annotation.Nullable;&#10;import androidx.core.content.ContextCompat;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.bumptech.glide.load.DataSource;&#10;import com.bumptech.glide.load.engine.GlideException;&#10;import com.bumptech.glide.request.RequestListener;&#10;import com.bumptech.glide.request.target.Target;&#10;&#10;import java.util.List;&#10;&#10;public class AttractionAdapter extends RecyclerView.Adapter&lt;AttractionAdapter.AttractionViewHolder&gt; {&#10;&#10;    private List&lt;Attraction&gt; attractionList;&#10;&#10;    public AttractionAdapter(List&lt;Attraction&gt; attractionList) {&#10;        this.attractionList = attractionList;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public AttractionViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_attraction, parent, false);&#10;        return new AttractionViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull AttractionViewHolder holder, int position) {&#10;        Attraction currentAttraction = attractionList.get(position);&#10;&#10;        holder.nameTextView.setText(currentAttraction.getName());&#10;        holder.categoryTextView.setText(currentAttraction.getCategory());&#10;&#10;        // Handle placeholder entries differently&#10;        if (currentAttraction.isPlaceholder()) {&#10;            // For placeholder entries, show a special custom image&#10;            holder.imageViewAttraction.setImageResource(R.drawable.ic_grow_database);&#10;            holder.imageViewAttraction.setScaleType(ImageView.ScaleType.CENTER_CROP);&#10;&#10;            // Change appearance to indicate it's clickable&#10;            holder.itemView.setAlpha(0.9f);&#10;            holder.nameTextView.setTextColor(ContextCompat.getColor(holder.itemView.getContext(), R.color.DeepForestGreen));&#10;            holder.categoryTextView.setTextColor(ContextCompat.getColor(holder.itemView.getContext(), R.color.GoldYellow));&#10;        } else {&#10;            // Normal attraction entries&#10;            holder.itemView.setAlpha(1.0f);&#10;            holder.nameTextView.setTextColor(ContextCompat.getColor(holder.itemView.getContext(), R.color.NavyBlue));&#10;            holder.categoryTextView.setTextColor(ContextCompat.getColor(holder.itemView.getContext(), R.color.light_gray));&#10;            holder.imageViewAttraction.setScaleType(ImageView.ScaleType.CENTER_CROP);&#10;&#10;            // Load image for normal attractions&#10;            if (currentAttraction.getImages() != null &amp;&amp; !currentAttraction.getImages().isEmpty()) {&#10;                String imageUrl = currentAttraction.getImages().get(0);&#10;&#10;                Glide.with(holder.itemView.getContext())&#10;                        .load(imageUrl)&#10;                        .placeholder(R.drawable.ic_image_placeholder)&#10;                        .error(R.drawable.ic_image_placeholder)&#10;                        .listener(new RequestListener&lt;Drawable&gt;() {&#10;                            @Override&#10;                            public boolean onLoadFailed(@Nullable GlideException e, Object model, Target&lt;Drawable&gt; target, boolean isFirstResource) {&#10;                                Log.w(&quot;GlideDebug&quot;, &quot;Failed to load image: &quot; + imageUrl);&#10;                                if (e != null) {&#10;                                    Log.w(&quot;GlideDebug&quot;, &quot;Error: &quot; + e.getMessage());&#10;                                }&#10;                                return false;&#10;                            }&#10;&#10;                            @Override&#10;                            public boolean onResourceReady(Drawable resource, Object model, Target&lt;Drawable&gt; target, DataSource dataSource, boolean isFirstResource) {&#10;                                Log.d(&quot;GlideDebug&quot;, &quot;Successfully loaded image: &quot; + imageUrl);&#10;                                return false;&#10;                            }&#10;                        })&#10;                        .into(holder.imageViewAttraction);&#10;            } else {&#10;                Log.w(&quot;GlideDebug&quot;, &quot;Image URL list is null or empty for: &quot; + currentAttraction.getName());&#10;                holder.imageViewAttraction.setImageResource(R.drawable.ic_image_placeholder);&#10;            }&#10;        }&#10;&#10;        // Click listener with placeholder handling&#10;        holder.itemView.setOnClickListener(v -&gt; {&#10;            if (currentAttraction.isPlaceholder()) {&#10;                // Redirect to AddLocationActivity for placeholder entries&#10;                Intent intent = new Intent(holder.itemView.getContext(), AddLocationActivity.class);&#10;                holder.itemView.getContext().startActivity(intent);&#10;&#10;                Toast.makeText(holder.itemView.getContext(),&#10;                        &quot;Let's add some attractions! &quot;,&#10;                        Toast.LENGTH_SHORT).show();&#10;            } else {&#10;                // Navigate to LocationDetailScreenActivity with attraction data&#10;                Intent intent = new Intent(holder.itemView.getContext(), LocationDetailScreenActivity.class);&#10;&#10;                // Pass all attraction data as extras&#10;                intent.putExtra(&quot;ATTRACTION_NAME&quot;, currentAttraction.getName());&#10;                intent.putExtra(&quot;ATTRACTION_CATEGORY&quot;, currentAttraction.getCategory());&#10;                intent.putExtra(&quot;ATTRACTION_DESCRIPTION&quot;, currentAttraction.getDescription());&#10;                intent.putExtra(&quot;ATTRACTION_CONTRIBUTOR&quot;, currentAttraction.getContributorName());&#10;                intent.putExtra(&quot;ATTRACTION_CONTRIBUTED_AT&quot;, currentAttraction.getContributedAt());&#10;                intent.putExtra(&quot;ATTRACTION_YOUTUBE_URL&quot;, currentAttraction.getYoutubeUrl());&#10;                intent.putExtra(&quot;ATTRACTION_CITY&quot;, currentAttraction.getCity());&#10;&#10;                // Pass images as ArrayList&#10;                if (currentAttraction.getImages() != null) {&#10;                    intent.putStringArrayListExtra(&quot;ATTRACTION_IMAGES&quot;,&#10;                            new java.util.ArrayList&lt;&gt;(currentAttraction.getImages()));&#10;                }&#10;&#10;                holder.itemView.getContext().startActivity(intent);&#10;&#10;                Toast.makeText(holder.itemView.getContext(),&#10;                        &quot;Opening &quot; + currentAttraction.getName(),&#10;                        Toast.LENGTH_SHORT).show();&#10;            }&#10;        });&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return attractionList.size();&#10;    }&#10;&#10;&#10;    public static class AttractionViewHolder extends RecyclerView.ViewHolder {&#10;        public ImageView imageViewAttraction;&#10;        public TextView nameTextView;&#10;        public TextView categoryTextView;&#10;&#10;        public AttractionViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            imageViewAttraction = itemView.findViewById(R.id.imageView_attraction);&#10;            nameTextView = itemView.findViewById(R.id.textView_attraction_name);&#10;            categoryTextView = itemView.findViewById(R.id.textView_attraction_category);&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Intent;&#10;import android.graphics.drawable.Drawable;&#10;import android.util.Log;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.annotation.Nullable;&#10;import androidx.core.content.ContextCompat;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.bumptech.glide.load.DataSource;&#10;import com.bumptech.glide.load.engine.GlideException;&#10;import com.bumptech.glide.request.RequestListener;&#10;import com.bumptech.glide.request.target.Target;&#10;&#10;import java.util.List;&#10;&#10;public class AttractionAdapter extends RecyclerView.Adapter&lt;AttractionAdapter.AttractionViewHolder&gt; {&#10;&#10;    private List&lt;Attraction&gt; attractionList;&#10;&#10;    public AttractionAdapter(List&lt;Attraction&gt; attractionList) {&#10;        this.attractionList = attractionList;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public AttractionViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_attraction, parent, false);&#10;        return new AttractionViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull AttractionViewHolder holder, int position) {&#10;        Attraction currentAttraction = attractionList.get(position);&#10;&#10;        holder.nameTextView.setText(currentAttraction.getName());&#10;        holder.categoryTextView.setText(currentAttraction.getCategory());&#10;&#10;        // Handle placeholder entries differently&#10;        if (currentAttraction.isPlaceholder()) {&#10;            // For placeholder entries, show your original PNG image&#10;            holder.imageViewAttraction.setImageResource(R.drawable.grow_our_database);&#10;            holder.imageViewAttraction.setScaleType(ImageView.ScaleType.CENTER_CROP);&#10;&#10;            // Change appearance to indicate it's clickable&#10;            holder.itemView.setAlpha(0.9f);&#10;            holder.nameTextView.setTextColor(ContextCompat.getColor(holder.itemView.getContext(), R.color.DeepForestGreen));&#10;            holder.categoryTextView.setTextColor(ContextCompat.getColor(holder.itemView.getContext(), R.color.GoldYellow));&#10;        } else {&#10;            // Normal attraction entries&#10;            holder.itemView.setAlpha(1.0f);&#10;            holder.nameTextView.setTextColor(ContextCompat.getColor(holder.itemView.getContext(), R.color.NavyBlue));&#10;            holder.categoryTextView.setTextColor(ContextCompat.getColor(holder.itemView.getContext(), R.color.light_gray));&#10;            holder.imageViewAttraction.setScaleType(ImageView.ScaleType.CENTER_CROP);&#10;&#10;            // Load image for normal attractions&#10;            if (currentAttraction.getImages() != null &amp;&amp; !currentAttraction.getImages().isEmpty()) {&#10;                String imageUrl = currentAttraction.getImages().get(0);&#10;&#10;                Glide.with(holder.itemView.getContext())&#10;                        .load(imageUrl)&#10;                        .placeholder(R.drawable.ic_image_placeholder)&#10;                        .error(R.drawable.ic_image_placeholder)&#10;                        .listener(new RequestListener&lt;Drawable&gt;() {&#10;                            @Override&#10;                            public boolean onLoadFailed(@Nullable GlideException e, Object model, Target&lt;Drawable&gt; target, boolean isFirstResource) {&#10;                                Log.w(&quot;GlideDebug&quot;, &quot;Failed to load image: &quot; + imageUrl);&#10;                                if (e != null) {&#10;                                    Log.w(&quot;GlideDebug&quot;, &quot;Error: &quot; + e.getMessage());&#10;                                }&#10;                                return false;&#10;                            }&#10;&#10;                            @Override&#10;                            public boolean onResourceReady(Drawable resource, Object model, Target&lt;Drawable&gt; target, DataSource dataSource, boolean isFirstResource) {&#10;                                Log.d(&quot;GlideDebug&quot;, &quot;Successfully loaded image: &quot; + imageUrl);&#10;                                return false;&#10;                            }&#10;                        })&#10;                        .into(holder.imageViewAttraction);&#10;            } else {&#10;                Log.w(&quot;GlideDebug&quot;, &quot;Image URL list is null or empty for: &quot; + currentAttraction.getName());&#10;                holder.imageViewAttraction.setImageResource(R.drawable.ic_image_placeholder);&#10;            }&#10;        }&#10;&#10;        // Click listener with placeholder handling&#10;        holder.itemView.setOnClickListener(v -&gt; {&#10;            if (currentAttraction.isPlaceholder()) {&#10;                // Redirect to AddLocationActivity for placeholder entries&#10;                Intent intent = new Intent(holder.itemView.getContext(), AddLocationActivity.class);&#10;                holder.itemView.getContext().startActivity(intent);&#10;&#10;                Toast.makeText(holder.itemView.getContext(),&#10;                        &quot;Let's add some attractions! &quot;,&#10;                        Toast.LENGTH_SHORT).show();&#10;            } else {&#10;                // Navigate to LocationDetailScreenActivity with attraction data&#10;                Intent intent = new Intent(holder.itemView.getContext(), LocationDetailScreenActivity.class);&#10;&#10;                // Pass all attraction data as extras&#10;                intent.putExtra(&quot;ATTRACTION_NAME&quot;, currentAttraction.getName());&#10;                intent.putExtra(&quot;ATTRACTION_CATEGORY&quot;, currentAttraction.getCategory());&#10;                intent.putExtra(&quot;ATTRACTION_DESCRIPTION&quot;, currentAttraction.getDescription());&#10;                intent.putExtra(&quot;ATTRACTION_CONTRIBUTOR&quot;, currentAttraction.getContributorName());&#10;                intent.putExtra(&quot;ATTRACTION_CONTRIBUTED_AT&quot;, currentAttraction.getContributedAt());&#10;                intent.putExtra(&quot;ATTRACTION_YOUTUBE_URL&quot;, currentAttraction.getYoutubeUrl());&#10;                intent.putExtra(&quot;ATTRACTION_CITY&quot;, currentAttraction.getCity());&#10;&#10;                // Pass images as ArrayList&#10;                if (currentAttraction.getImages() != null) {&#10;                    intent.putStringArrayListExtra(&quot;ATTRACTION_IMAGES&quot;,&#10;                            new java.util.ArrayList&lt;&gt;(currentAttraction.getImages()));&#10;                }&#10;&#10;                holder.itemView.getContext().startActivity(intent);&#10;&#10;                Toast.makeText(holder.itemView.getContext(),&#10;                        &quot;Opening &quot; + currentAttraction.getName(),&#10;                        Toast.LENGTH_SHORT).show();&#10;            }&#10;        });&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return attractionList.size();&#10;    }&#10;&#10;&#10;    public static class AttractionViewHolder extends RecyclerView.ViewHolder {&#10;        public ImageView imageViewAttraction;&#10;        public TextView nameTextView;&#10;        public TextView categoryTextView;&#10;&#10;        public AttractionViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            imageViewAttraction = itemView.findViewById(R.id.imageView_attraction);&#10;            nameTextView = itemView.findViewById(R.id.textView_attraction_name);&#10;            categoryTextView = itemView.findViewById(R.id.textView_attraction_category);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/BaseActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/BaseActivity.java" />
              <option name="originalContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.LayoutInflater;&#10;import android.view.Menu;&#10;import android.view.MenuItem;&#10;import android.widget.EditText;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.LayoutRes;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.ActionBarDrawerToggle;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.GravityCompat;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;import androidx.activity.OnBackPressedCallback;&#10;&#10;import com.google.android.material.navigation.NavigationView;&#10;import com.s23010526.hiddensrilanka.databinding.ActivityBaseBinding;&#10;&#10;public abstract class BaseActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {&#10;&#10;    protected ActivityBaseBinding binding; // Binding for the base layout&#10;    private ActionBarDrawerToggle drawerToggle;&#10;&#10;    @LayoutRes&#10;    protected abstract int getLayoutResourceId(); // Child activities need to provide their content layout&#10;&#10;    protected abstract String getActivityTitle(); // Child activities need to provide their titles&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        binding = ActivityBaseBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;&#10;        LayoutInflater inflater = LayoutInflater.from(this);&#10;        inflater.inflate(getLayoutResourceId(), binding.contentFrame, true);&#10;&#10;        // Setup Toolbar with custom layout&#10;        setSupportActionBar(binding.toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            // Disable the default title since we're using custom TextView&#10;            getSupportActionBar().setDisplayShowTitleEnabled(false);&#10;        }&#10;&#10;        // Set custom title text&#10;        TextView toolbarTitle = binding.toolbar.findViewById(R.id.toolbar_title);&#10;        if (toolbarTitle != null) {&#10;            toolbarTitle.setText(getActivityTitle());&#10;        }&#10;&#10;        // Setup search field functionality&#10;        EditText searchField = binding.toolbar.findViewById(R.id.toolbar_search_field);&#10;        ImageView searchIcon = binding.toolbar.findViewById(R.id.search_icon);&#10;&#10;        if (searchField != null &amp;&amp; searchIcon != null) {&#10;            // Handle search input&#10;            searchField.setOnEditorActionListener((v, actionId, event) -&gt; {&#10;                if (actionId == android.view.inputmethod.EditorInfo.IME_ACTION_SEARCH) {&#10;                    String query = searchField.getText().toString().trim();&#10;                    if (!query.isEmpty()) {&#10;                        performSearch(query);&#10;                        searchField.clearFocus();&#10;                        // Hide keyboard&#10;                        android.view.inputmethod.InputMethodManager imm =&#10;                                (android.view.inputmethod.InputMethodManager) getSystemService(android.content.Context.INPUT_METHOD_SERVICE);&#10;                        imm.hideSoftInputFromWindow(searchField.getWindowToken(), 0);&#10;                    }&#10;                    return true;&#10;                }&#10;                return false;&#10;            });&#10;&#10;            // Handle search icon click&#10;            searchIcon.setOnClickListener(v -&gt; {&#10;                String query = searchField.getText().toString().trim();&#10;                if (!query.isEmpty()) {&#10;                    performSearch(query);&#10;                    searchField.clearFocus();&#10;                }&#10;            });&#10;        }&#10;&#10;        // Setup Navigation Drawer&#10;        drawerToggle = new ActionBarDrawerToggle(&#10;                this,&#10;                binding.drawerLayout,&#10;                binding.toolbar,&#10;                R.string.navigation_drawer_open,&#10;                R.string.navigation_drawer_close&#10;        );&#10;        binding.drawerLayout.addDrawerListener(drawerToggle);&#10;        drawerToggle.syncState();&#10;&#10;        binding.navView.setNavigationItemSelectedListener(this);&#10;        binding.navView.bringToFront();&#10;&#10;        // Handle back button press using OnBackPressedCallback (modern approach)&#10;        getOnBackPressedDispatcher().addCallback(this, new OnBackPressedCallback(true) {&#10;            @Override&#10;            public void handleOnBackPressed() {&#10;                if (binding.drawerLayout.isDrawerOpen(GravityCompat.START)) {&#10;                    binding.drawerLayout.closeDrawer(GravityCompat.START);&#10;                } else {&#10;                    setEnabled(false);&#10;                    getOnBackPressedDispatcher().onBackPressed();&#10;                }&#10;            }&#10;        });&#10;&#10;        // Handle WindowInsets for Edge to Edge display&#10;        ViewCompat.setOnApplyWindowInsetsListener(binding.drawerLayout, (v, windowInsets) -&gt; {&#10;            Insets systemBars = windowInsets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, 0, systemBars.right, systemBars.bottom);&#10;            return WindowInsetsCompat.CONSUMED;&#10;        });&#10;    }&#10;&#10;    @Override&#10;    public boolean onNavigationItemSelected(@NonNull MenuItem item) {&#10;        int itemId = item.getItemId();&#10;        Intent intent = null;&#10;&#10;        Class&lt;?&gt; currentActivityClass = this.getClass();&#10;&#10;        if (itemId == R.id.nav_home) {&#10;            if (currentActivityClass != HomeActivity.class) {&#10;                intent = new Intent(this, HomeActivity.class);&#10;            }&#10;            Toast.makeText(this, &quot;Home Clicked&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_settings) {&#10;            if (currentActivityClass != SettingsActivity.class) {&#10;                intent = new Intent(this, SettingsActivity.class);&#10;            }&#10;            Toast.makeText(this, &quot;Settings Clicked&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_exp_map) {&#10;            if (currentActivityClass != FullMapViewActivity.class) {&#10;                intent = new Intent(this, FullMapViewActivity.class);&#10;            }&#10;            Toast.makeText(this, &quot;Map Page Clicked&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_add_location) {&#10;            if (currentActivityClass != AddLocationActivity.class) {&#10;                intent = new Intent(this, AddLocationActivity.class);&#10;            }&#10;            Toast.makeText(this, &quot;Add Location Clicked&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_favorit) {&#10;            Toast.makeText(this, &quot;Favorites Feature Coming Soon...&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_about_us) {&#10;            if (currentActivityClass != AboutUsActivity.class) {&#10;                intent = new Intent(this, AboutUsActivity.class);&#10;            }&#10;            Toast.makeText(this, &quot;About Us Clicked&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_profile) {&#10;            Toast.makeText(this, &quot;Profile Feature not available Now ...&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_log_out) {&#10;            intent = new Intent(this, LoginActivity.class);&#10;            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;            Toast.makeText(this, &quot;Log Out&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;&#10;        if (intent != null) {&#10;            startActivity(intent);&#10;            if (itemId == R.id.nav_log_out) {&#10;                finish(); // Finish current activity after logging out&#10;            }&#10;        }&#10;&#10;        binding.drawerLayout.closeDrawer(GravityCompat.START);&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onCreateOptionsMenu(Menu menu) {&#10;        // No need to inflate any menu items as search is now integrated&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        if (drawerToggle.onOptionsItemSelected(item)) { // Let drawer toggle handle hamburger icon&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;&#10;&#10;    protected void performSearch(String query) {&#10;        // Implement search functionality in child classes or here&#10;        Toast.makeText(this, &quot;Search performed for query: &quot; + query, Toast.LENGTH_SHORT).show();&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.LayoutInflater;&#10;import android.view.Menu;&#10;import android.view.MenuItem;&#10;import android.widget.EditText;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.LayoutRes;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.ActionBarDrawerToggle;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.GravityCompat;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;import androidx.activity.OnBackPressedCallback;&#10;&#10;import com.google.android.material.navigation.NavigationView;&#10;import com.s23010526.hiddensrilanka.databinding.ActivityBaseBinding;&#10;&#10;public abstract class BaseActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {&#10;&#10;    protected ActivityBaseBinding binding; // Binding for the base layout&#10;    private ActionBarDrawerToggle drawerToggle;&#10;    protected SessionManager sessionManager; // Add SessionManager&#10;&#10;    @LayoutRes&#10;    protected abstract int getLayoutResourceId(); // Child activities need to provide their content layout&#10;&#10;    protected abstract String getActivityTitle(); // Child activities need to provide their titles&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        // Initialize SessionManager&#10;        sessionManager = new SessionManager(this);&#10;&#10;        binding = ActivityBaseBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;&#10;        LayoutInflater inflater = LayoutInflater.from(this);&#10;        inflater.inflate(getLayoutResourceId(), binding.contentFrame, true);&#10;&#10;        // Setup Toolbar with custom layout&#10;        setSupportActionBar(binding.toolbar);&#10;        if (getSupportActionBar() != null) {&#10;            // Disable the default title since we're using custom TextView&#10;            getSupportActionBar().setDisplayShowTitleEnabled(false);&#10;        }&#10;&#10;        // Set custom title text&#10;        TextView toolbarTitle = binding.toolbar.findViewById(R.id.toolbar_title);&#10;        if (toolbarTitle != null) {&#10;            toolbarTitle.setText(getActivityTitle());&#10;        }&#10;&#10;        // Setup search field functionality&#10;        EditText searchField = binding.toolbar.findViewById(R.id.toolbar_search_field);&#10;        ImageView searchIcon = binding.toolbar.findViewById(R.id.search_icon);&#10;&#10;        if (searchField != null &amp;&amp; searchIcon != null) {&#10;            // Handle search input&#10;            searchField.setOnEditorActionListener((v, actionId, event) -&gt; {&#10;                if (actionId == android.view.inputmethod.EditorInfo.IME_ACTION_SEARCH) {&#10;                    String query = searchField.getText().toString().trim();&#10;                    if (!query.isEmpty()) {&#10;                        performSearch(query);&#10;                        searchField.clearFocus();&#10;                        // Hide keyboard&#10;                        android.view.inputmethod.InputMethodManager imm =&#10;                                (android.view.inputmethod.InputMethodManager) getSystemService(android.content.Context.INPUT_METHOD_SERVICE);&#10;                        imm.hideSoftInputFromWindow(searchField.getWindowToken(), 0);&#10;                    }&#10;                    return true;&#10;                }&#10;                return false;&#10;            });&#10;&#10;            // Handle search icon click&#10;            searchIcon.setOnClickListener(v -&gt; {&#10;                String query = searchField.getText().toString().trim();&#10;                if (!query.isEmpty()) {&#10;                    performSearch(query);&#10;                    searchField.clearFocus();&#10;                }&#10;            });&#10;        }&#10;&#10;        // Setup Navigation Drawer&#10;        drawerToggle = new ActionBarDrawerToggle(&#10;                this,&#10;                binding.drawerLayout,&#10;                binding.toolbar,&#10;                R.string.navigation_drawer_open,&#10;                R.string.navigation_drawer_close&#10;        );&#10;        binding.drawerLayout.addDrawerListener(drawerToggle);&#10;        drawerToggle.syncState();&#10;&#10;        binding.navView.setNavigationItemSelectedListener(this);&#10;        binding.navView.bringToFront();&#10;&#10;        // Handle back button press using OnBackPressedCallback (modern approach)&#10;        getOnBackPressedDispatcher().addCallback(this, new OnBackPressedCallback(true) {&#10;            @Override&#10;            public void handleOnBackPressed() {&#10;                if (binding.drawerLayout.isDrawerOpen(GravityCompat.START)) {&#10;                    binding.drawerLayout.closeDrawer(GravityCompat.START);&#10;                } else {&#10;                    setEnabled(false);&#10;                    getOnBackPressedDispatcher().onBackPressed();&#10;                }&#10;            }&#10;        });&#10;&#10;        // Handle WindowInsets for Edge to Edge display&#10;        ViewCompat.setOnApplyWindowInsetsListener(binding.drawerLayout, (v, windowInsets) -&gt; {&#10;            Insets systemBars = windowInsets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, 0, systemBars.right, systemBars.bottom);&#10;            return WindowInsetsCompat.CONSUMED;&#10;        });&#10;    }&#10;&#10;    @Override&#10;    public boolean onNavigationItemSelected(@NonNull MenuItem item) {&#10;        int itemId = item.getItemId();&#10;        Intent intent = null;&#10;&#10;        Class&lt;?&gt; currentActivityClass = this.getClass();&#10;&#10;        if (itemId == R.id.nav_home) {&#10;            if (currentActivityClass != HomeActivity.class) {&#10;                intent = new Intent(this, HomeActivity.class);&#10;            }&#10;            Toast.makeText(this, &quot;Home Clicked&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_settings) {&#10;            if (currentActivityClass != SettingsActivity.class) {&#10;                intent = new Intent(this, SettingsActivity.class);&#10;            }&#10;            Toast.makeText(this, &quot;Settings Clicked&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_exp_map) {&#10;            if (currentActivityClass != FullMapViewActivity.class) {&#10;                intent = new Intent(this, FullMapViewActivity.class);&#10;            }&#10;            Toast.makeText(this, &quot;Map Page Clicked&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_add_location) {&#10;            if (currentActivityClass != AddLocationActivity.class) {&#10;                intent = new Intent(this, AddLocationActivity.class);&#10;            }&#10;            Toast.makeText(this, &quot;Add Location Clicked&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_favorit) {&#10;            Toast.makeText(this, &quot;Favorites Feature Coming Soon...&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_about_us) {&#10;            if (currentActivityClass != AboutUsActivity.class) {&#10;                intent = new Intent(this, AboutUsActivity.class);&#10;            }&#10;            Toast.makeText(this, &quot;About Us Clicked&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_profile) {&#10;            Toast.makeText(this, &quot;Profile Feature not available Now ...&quot;, Toast.LENGTH_SHORT).show();&#10;        } else if (itemId == R.id.nav_log_out) {&#10;            // Clear session data&#10;            sessionManager.logoutUser();&#10;            &#10;            // Redirect to WelcomeActivity and clear the activity stack&#10;            intent = new Intent(this, WelcomeActivity.class);&#10;            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;            Toast.makeText(this, &quot;Logged out successfully&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;&#10;        if (intent != null) {&#10;            startActivity(intent);&#10;            if (itemId == R.id.nav_log_out) {&#10;                finish(); // Finish current activity after logging out&#10;            }&#10;        }&#10;&#10;        binding.drawerLayout.closeDrawer(GravityCompat.START);&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onCreateOptionsMenu(Menu menu) {&#10;        // No need to inflate any menu items as search is now integrated&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        if (drawerToggle.onOptionsItemSelected(item)) { // Let drawer toggle handle hamburger icon&#10;            return true;&#10;        }&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;&#10;&#10;    protected void performSearch(String query) {&#10;        // Implement search functionality in child classes or here&#10;        Toast.makeText(this, &quot;Search performed for query: &quot; + query, Toast.LENGTH_SHORT).show();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/LocationDetailScreenActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/LocationDetailScreenActivity.java" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Intent;&#10;import android.net.Uri;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.View;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.google.android.material.button.MaterialButton;&#10;import com.google.android.material.chip.Chip;&#10;&#10;import java.text.SimpleDateFormat;&#10;import java.util.ArrayList;&#10;import java.util.Date;&#10;import java.util.Locale;&#10;&#10;public class LocationDetailScreenActivity extends BaseActivity {&#10;&#10;    private static final String TAG = &quot;LocationDetailScreen&quot;;&#10;&#10;    // UI Components&#10;    private ImageView ivMainImage;&#10;    private TextView tvLocationName, tvCategory, tvDescription, tvContributor, tvContributedDate;&#10;    private Chip chipCategory;&#10;    private MaterialButton btnGetDirections, btnShareLocation, btnWatchVideo;&#10;    private RecyclerView rvImageGallery;&#10;&#10;    // Data&#10;    private String attractionName, attractionCategory, attractionDescription;&#10;    private String contributorName, youtubeUrl, cityName;&#10;    private long contributedAt;&#10;    private ArrayList&lt;String&gt; imageUrls;&#10;&#10;    @Override&#10;    protected int getLayoutResourceId() {&#10;        return R.layout.activity_location_detail_screen;&#10;    }&#10;&#10;    @Override&#10;    protected String getActivityTitle() {&#10;        return &quot;Location Details&quot;;&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        initializeViews();&#10;        loadDataFromIntent();&#10;        setupClickListeners();&#10;        displayLocationDetails();&#10;    }&#10;&#10;    private void initializeViews() {&#10;        ivMainImage = findViewById(R.id.iv_main_image);&#10;        tvLocationName = findViewById(R.id.tv_location_name);&#10;        tvCategory = findViewById(R.id.tv_category);&#10;        tvDescription = findViewById(R.id.tv_description);&#10;        tvContributor = findViewById(R.id.tv_contributor);&#10;        tvContributedDate = findViewById(R.id.tv_contributed_date);&#10;        chipCategory = findViewById(R.id.chip_category);&#10;        btnGetDirections = findViewById(R.id.btn_get_directions);&#10;        btnShareLocation = findViewById(R.id.btn_share_location);&#10;        btnWatchVideo = findViewById(R.id.btn_watch_video);&#10;        rvImageGallery = findViewById(R.id.rv_image_gallery);&#10;    }&#10;&#10;    private void loadDataFromIntent() {&#10;        Intent intent = getIntent();&#10;        attractionName = intent.getStringExtra(&quot;ATTRACTION_NAME&quot;);&#10;        attractionCategory = intent.getStringExtra(&quot;ATTRACTION_CATEGORY&quot;);&#10;        attractionDescription = intent.getStringExtra(&quot;ATTRACTION_DESCRIPTION&quot;);&#10;        contributorName = intent.getStringExtra(&quot;ATTRACTION_CONTRIBUTOR&quot;);&#10;        contributedAt = intent.getLongExtra(&quot;ATTRACTION_CONTRIBUTED_AT&quot;, 0);&#10;        youtubeUrl = intent.getStringExtra(&quot;ATTRACTION_YOUTUBE_URL&quot;);&#10;        cityName = intent.getStringExtra(&quot;ATTRACTION_CITY&quot;);&#10;        imageUrls = intent.getStringArrayListExtra(&quot;ATTRACTION_IMAGES&quot;);&#10;&#10;        Log.d(TAG, &quot;Loaded attraction data: &quot; + attractionName);&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnGetDirections.setOnClickListener(v -&gt; openGoogleMaps());&#10;        btnShareLocation.setOnClickListener(v -&gt; shareLocation());&#10;        btnWatchVideo.setOnClickListener(v -&gt; watchYouTubeVideo());&#10;    }&#10;&#10;    private void displayLocationDetails() {&#10;        // Set basic information&#10;        tvLocationName.setText(attractionName != null ? attractionName : &quot;Unknown Location&quot;);&#10;        tvCategory.setText(attractionCategory != null ? attractionCategory : &quot;Unknown Category&quot;);&#10;        tvDescription.setText(attractionDescription != null ? attractionDescription : &quot;No description available.&quot;);&#10;&#10;        // Set category chip&#10;        if (attractionCategory != null) {&#10;            chipCategory.setText(attractionCategory);&#10;            chipCategory.setVisibility(View.VISIBLE);&#10;        } else {&#10;            chipCategory.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Set contributor information&#10;        if (contributorName != null &amp;&amp; !contributorName.isEmpty() &amp;&amp; !contributorName.equals(&quot;Unknown&quot;)) {&#10;            tvContributor.setText(&quot;Contributed by: &quot; + contributorName);&#10;            tvContributor.setVisibility(View.VISIBLE);&#10;        } else {&#10;            tvContributor.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Set contribution date&#10;        if (contributedAt &gt; 0) {&#10;            String formattedDate = new SimpleDateFormat(&quot;MMM dd, yyyy&quot;, Locale.getDefault())&#10;                    .format(new Date(contributedAt));&#10;            tvContributedDate.setText(&quot;Added on: &quot; + formattedDate);&#10;            tvContributedDate.setVisibility(View.VISIBLE);&#10;        } else {&#10;            tvContributedDate.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Load main image&#10;        if (imageUrls != null &amp;&amp; !imageUrls.isEmpty()) {&#10;            String mainImageUrl = imageUrls.get(0);&#10;            Glide.with(this)&#10;                    .load(mainImageUrl)&#10;                    .placeholder(R.drawable.ic_image_placeholder)&#10;                    .error(R.drawable.ic_image_placeholder)&#10;                    .centerCrop()&#10;                    .into(ivMainImage);&#10;&#10;            // Setup image gallery if multiple images&#10;            if (imageUrls.size() &gt; 1) {&#10;                setupImageGallery();&#10;            } else {&#10;                rvImageGallery.setVisibility(View.GONE);&#10;            }&#10;        } else {&#10;            ivMainImage.setImageResource(R.drawable.ic_image_placeholder);&#10;            rvImageGallery.setVisibility(View.GONE);&#10;        }&#10;&#10;        // Show/hide YouTube button&#10;        if (youtubeUrl != null &amp;&amp; !youtubeUrl.isEmpty()) {&#10;            btnWatchVideo.setVisibility(View.VISIBLE);&#10;        } else {&#10;            btnWatchVideo.setVisibility(View.GONE);&#10;        }&#10;    }&#10;&#10;    private void setupImageGallery() {&#10;        // Create a horizontal RecyclerView for additional images&#10;        LinearLayoutManager layoutManager = new LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false);&#10;        rvImageGallery.setLayoutManager(layoutManager);&#10;        &#10;        // You can create an ImageGalleryAdapter here if needed&#10;        // For now, we'll keep it simple&#10;        rvImageGallery.setVisibility(View.VISIBLE);&#10;    }&#10;&#10;    private void openGoogleMaps() {&#10;        try {&#10;            // Create a search query for Google Maps&#10;            String query = attractionName;&#10;            if (cityName != null &amp;&amp; !cityName.isEmpty()) {&#10;                query += &quot;, &quot; + cityName + &quot;, Sri Lanka&quot;;&#10;            } else {&#10;                query += &quot;, Sri Lanka&quot;;&#10;            }&#10;&#10;            // Create Google Maps intent&#10;            Uri gmmIntentUri = Uri.parse(&quot;geo:0,0?q=&quot; + Uri.encode(query));&#10;            Intent mapIntent = new Intent(Intent.ACTION_VIEW, gmmIntentUri);&#10;            mapIntent.setPackage(&quot;com.google.android.apps.maps&quot;);&#10;&#10;            // Check if Google Maps app is installed&#10;            if (mapIntent.resolveActivity(getPackageManager()) != null) {&#10;                startActivity(mapIntent);&#10;                Toast.makeText(this, &quot;Opening in Google Maps&quot;, Toast.LENGTH_SHORT).show();&#10;            } else {&#10;                // Fallback to web browser&#10;                Uri webUri = Uri.parse(&quot;https://www.google.com/maps/search/&quot; + Uri.encode(query));&#10;                Intent webIntent = new Intent(Intent.ACTION_VIEW, webUri);&#10;                startActivity(webIntent);&#10;                Toast.makeText(this, &quot;Opening in browser&quot;, Toast.LENGTH_SHORT).show();&#10;            }&#10;        } catch (Exception e) {&#10;            Log.e(TAG, &quot;Error opening Google Maps: &quot; + e.getMessage());&#10;            Toast.makeText(this, &quot;Unable to open maps&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    private void shareLocation() {&#10;        try {&#10;            String shareText = &quot; Check out this amazing place in Sri Lanka!\n\n&quot; +&#10;                             &quot;️ &quot; + (attractionName != null ? attractionName : &quot;Unknown Location&quot;) + &quot;\n&quot; +&#10;                             &quot; Category: &quot; + (attractionCategory != null ? attractionCategory : &quot;Unknown&quot;) + &quot;\n\n&quot; +&#10;                             &quot; &quot; + (attractionDescription != null ? &#10;                                     (attractionDescription.length() &gt; 100 ? &#10;                                      attractionDescription.substring(0, 100) + &quot;...&quot; : &#10;                                      attractionDescription) : &quot;No description available&quot;) + &quot;\n\n&quot; +&#10;                             &quot; Contributed by: &quot; + (contributorName != null &amp;&amp; !contributorName.isEmpty() ? contributorName : &quot;Community&quot;) + &quot;\n\n&quot; +&#10;                             &quot; Search '&quot; + (attractionName != null ? attractionName : &quot;this location&quot;) + &#10;                             (cityName != null ? &quot; &quot; + cityName : &quot;&quot;) + &quot;' on Google Maps\n\n&quot; +&#10;                             &quot; Shared via Hidden Sri Lanka App&quot;;&#10;&#10;            Intent shareIntent = new Intent(Intent.ACTION_SEND);&#10;            shareIntent.setType(&quot;text/plain&quot;);&#10;            shareIntent.putExtra(Intent.EXTRA_TEXT, shareText);&#10;            shareIntent.putExtra(Intent.EXTRA_SUBJECT, &quot;Discover &quot; + (attractionName != null ? attractionName : &quot;this amazing place&quot;) + &quot; in Sri Lanka&quot;);&#10;&#10;            startActivity(Intent.createChooser(shareIntent, &quot;Share this location via&quot;));&#10;            Toast.makeText(this, &quot;Sharing location details&quot;, Toast.LENGTH_SHORT).show();&#10;&#10;        } catch (Exception e) {&#10;            Log.e(TAG, &quot;Error sharing location: &quot; + e.getMessage());&#10;            Toast.makeText(this, &quot;Unable to share location&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    private void watchYouTubeVideo() {&#10;        if (youtubeUrl == null || youtubeUrl.isEmpty()) {&#10;            Toast.makeText(this, &quot;No video available for this location&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        try {&#10;            // Try to open in YouTube app first&#10;            Intent youtubeIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(youtubeUrl));&#10;            youtubeIntent.setPackage(&quot;com.google.android.youtube&quot;);&#10;&#10;            if (youtubeIntent.resolveActivity(getPackageManager()) != null) {&#10;                startActivity(youtubeIntent);&#10;                Toast.makeText(this, &quot;Opening in YouTube app&quot;, Toast.LENGTH_SHORT).show();&#10;            } else {&#10;                // Fallback to web browser&#10;                Intent webIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(youtubeUrl));&#10;                startActivity(webIntent);&#10;                Toast.makeText(this, &quot;Opening in browser&quot;, Toast.LENGTH_SHORT).show();&#10;            }&#10;        } catch (Exception e) {&#10;            Log.e(TAG, &quot;Error opening YouTube video: &quot; + e.getMessage());&#10;            Toast.makeText(this, &quot;Unable to open video&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/LoginActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/LoginActivity.java" />
              <option name="originalContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.Toast; // Added for onCancelled&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import com.google.firebase.database.DataSnapshot;&#10;import com.google.firebase.database.DatabaseError;&#10;import com.google.firebase.database.DatabaseReference;&#10;import com.google.firebase.database.FirebaseDatabase;&#10;import com.google.firebase.database.Query;&#10;import com.google.firebase.database.ValueEventListener;&#10;&#10;import java.util.Objects;&#10;&#10;public class LoginActivity extends AppCompatActivity {&#10;    EditText loginUsername, loginPassword;&#10;    Button loginButton;&#10;    Button signUpRederect;&#10;&#10;    // Define your database URL as a constant i have given reson in Signup Activity&#10;    private static final String FIREBASE_DATABASE_URL = &quot;https://hidden-sri-lanka-c3ec5-default-rtdb.asia-southeast1.firebasedatabase.app&quot;;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_login);&#10;&#10;        loginUsername = findViewById(R.id.userName);&#10;        loginPassword = findViewById(R.id.password);&#10;        loginButton = findViewById(R.id.logingButton);&#10;        signUpRederect = findViewById(R.id.signUpRederect);&#10;&#10;        loginButton.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                boolean isUsernameValid = validateUsername();&#10;                boolean isPasswordValid = validatePassword();&#10;                if (isUsernameValid &amp;&amp; isPasswordValid) {&#10;                    checkUser();&#10;                }&#10;            }&#10;        });&#10;&#10;        signUpRederect.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                Intent intent = new Intent(LoginActivity.this, SignUpActivity.class);&#10;                startActivity(intent);&#10;            }&#10;        });&#10;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;    }&#10;&#10;    public Boolean validateUsername() {&#10;        String val = loginUsername.getText().toString().trim(); // Added trim()&#10;        if (val.isEmpty()) {&#10;            loginUsername.setError(&quot;User Name cannot be Empty !&quot;);&#10;            return false;&#10;        } else {&#10;            loginUsername.setError(null);&#10;            return true;&#10;        }&#10;    }&#10;&#10;    public Boolean validatePassword() {&#10;        String val = loginPassword.getText().toString(); // No trim() here, as passwords can have leading/trailing spaces&#10;        if (val.isEmpty()) {&#10;            loginPassword.setError(&quot;Password cannot be Empty !&quot;);&#10;            return false;&#10;        } else {&#10;            loginPassword.setError(null);&#10;            return true;&#10;        }&#10;    }&#10;&#10;    public void checkUser() {&#10;        String userName = loginUsername.getText().toString().trim();&#10;        String userPassword = loginPassword.getText().toString().trim(); // Also trim password input for consistency if needed, but be careful&#10;&#10;        // Get FirebaseDatabase instance with the correct URL&#10;        FirebaseDatabase database = FirebaseDatabase.getInstance(FIREBASE_DATABASE_URL);&#10;        DatabaseReference reference = database.getReference(&quot;users&quot;);&#10;        Query checkUserDatabase = reference.orderByChild(&quot;username&quot;).equalTo(userName);&#10;&#10;        checkUserDatabase.addListenerForSingleValueEvent(new ValueEventListener() {&#10;            @Override&#10;            public void onDataChange(@NonNull DataSnapshot snapshot) {&#10;                if (snapshot.exists()) {&#10;                    loginUsername.setError(null);&#10;                    boolean credentialsValid = false;&#10;                    for (DataSnapshot userSnapshot : snapshot.getChildren()) {&#10;&#10;&#10;                        String passwordFromDB = userSnapshot.child(&quot;password&quot;).getValue(String.class);&#10;&#10;                        if (Objects.equals(passwordFromDB, userPassword)) {&#10;                            credentialsValid = true;&#10;                            loginPassword.setError(null);&#10;                            Intent intent = new Intent(LoginActivity.this, HomeActivity.class);&#10;                            // Pass the actual username from DB if it can differ in case from input&#10;                            String actualUsernameFromDB = userSnapshot.child(&quot;username&quot;).getValue(String.class);&#10;                            intent.putExtra(&quot;USERNAME&quot;, actualUsernameFromDB != null ? actualUsernameFromDB : userName);&#10;                            startActivity(intent);&#10;                            finish();&#10;                            return; // Exit after successful login&#10;                        }&#10;                    }&#10;&#10;                    // If loop completes and credentials are not valid&#10;                    if (!credentialsValid) {&#10;                        loginPassword.setError(&quot;Invalid Credentials!&quot;);&#10;                        loginPassword.requestFocus();&#10;                    }&#10;&#10;                } else {&#10;                    loginUsername.setError(&quot;User Does Not Exist&quot;);&#10;                    loginUsername.requestFocus();&#10;                }&#10;            }&#10;&#10;            @Override&#10;            public void onCancelled(@NonNull DatabaseError error) {&#10;//if any error&#10;                Toast.makeText(LoginActivity.this, &quot;Database Error: &quot; + error.getMessage(), Toast.LENGTH_LONG).show();&#10;            }&#10;        });&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.Toast; // Added for onCancelled&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import com.google.firebase.database.DataSnapshot;&#10;import com.google.firebase.database.DatabaseError;&#10;import com.google.firebase.database.DatabaseReference;&#10;import com.google.firebase.database.FirebaseDatabase;&#10;import com.google.firebase.database.Query;&#10;import com.google.firebase.database.ValueEventListener;&#10;&#10;import java.util.Objects;&#10;&#10;public class LoginActivity extends AppCompatActivity {&#10;    EditText loginUsername, loginPassword;&#10;    Button loginButton;&#10;    Button signUpRederect;&#10;    private SessionManager sessionManager;&#10;&#10;    // Define your database URL as a constant i have given reson in Signup Activity&#10;    private static final String FIREBASE_DATABASE_URL = &quot;https://hidden-sri-lanka-c3ec5-default-rtdb.asia-southeast1.firebasedatabase.app&quot;;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_login);&#10;&#10;        // Initialize SessionManager&#10;        sessionManager = new SessionManager(this);&#10;&#10;        loginUsername = findViewById(R.id.userName);&#10;        loginPassword = findViewById(R.id.password);&#10;        loginButton = findViewById(R.id.logingButton);&#10;        signUpRederect = findViewById(R.id.signUpRederect);&#10;&#10;        loginButton.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                boolean isUsernameValid = validateUsername();&#10;                boolean isPasswordValid = validatePassword();&#10;                if (isUsernameValid &amp;&amp; isPasswordValid) {&#10;                    checkUser();&#10;                }&#10;            }&#10;        });&#10;&#10;        signUpRederect.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                Intent intent = new Intent(LoginActivity.this, SignUpActivity.class);&#10;                startActivity(intent);&#10;            }&#10;        });&#10;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;    }&#10;&#10;    public Boolean validateUsername() {&#10;        String val = loginUsername.getText().toString().trim(); // Added trim()&#10;        if (val.isEmpty()) {&#10;            loginUsername.setError(&quot;User Name cannot be Empty !&quot;);&#10;            return false;&#10;        } else {&#10;            loginUsername.setError(null);&#10;            return true;&#10;        }&#10;    }&#10;&#10;    public Boolean validatePassword() {&#10;        String val = loginPassword.getText().toString(); // No trim() here, as passwords can have leading/trailing spaces&#10;        if (val.isEmpty()) {&#10;            loginPassword.setError(&quot;Password cannot be Empty !&quot;);&#10;            return false;&#10;        } else {&#10;            loginPassword.setError(null);&#10;            return true;&#10;        }&#10;    }&#10;&#10;    public void checkUser() {&#10;        String userName = loginUsername.getText().toString().trim();&#10;        String userPassword = loginPassword.getText().toString().trim(); // Also trim password input for consistency if needed, but be careful&#10;&#10;        // Get FirebaseDatabase instance with the correct URL&#10;        FirebaseDatabase database = FirebaseDatabase.getInstance(FIREBASE_DATABASE_URL);&#10;        DatabaseReference reference = database.getReference(&quot;users&quot;);&#10;        Query checkUserDatabase = reference.orderByChild(&quot;username&quot;).equalTo(userName);&#10;&#10;        checkUserDatabase.addListenerForSingleValueEvent(new ValueEventListener() {&#10;            @Override&#10;            public void onDataChange(@NonNull DataSnapshot snapshot) {&#10;                if (snapshot.exists()) {&#10;                    loginUsername.setError(null);&#10;                    boolean credentialsValid = false;&#10;                    for (DataSnapshot userSnapshot : snapshot.getChildren()) {&#10;&#10;&#10;                        String passwordFromDB = userSnapshot.child(&quot;password&quot;).getValue(String.class);&#10;&#10;                        if (Objects.equals(passwordFromDB, userPassword)) {&#10;                            credentialsValid = true;&#10;                            loginPassword.setError(null);&#10;&#10;                            // Get user data from database&#10;                            String actualUsernameFromDB = userSnapshot.child(&quot;username&quot;).getValue(String.class);&#10;                            String emailFromDB = userSnapshot.child(&quot;email&quot;).getValue(String.class);&#10;                            String nameFromDB = userSnapshot.child(&quot;name&quot;).getValue(String.class);&#10;&#10;                            // Save session data&#10;                            sessionManager.createLoginSession(&#10;                                    actualUsernameFromDB != null ? actualUsernameFromDB : userName,&#10;                                    emailFromDB != null ? emailFromDB : &quot;&quot;,&#10;                                    nameFromDB != null ? nameFromDB : &quot;&quot;&#10;                            );&#10;&#10;                            Intent intent = new Intent(LoginActivity.this, HomeActivity.class);&#10;                            intent.putExtra(&quot;USERNAME&quot;, actualUsernameFromDB != null ? actualUsernameFromDB : userName);&#10;                            startActivity(intent);&#10;                            finish();&#10;                            return; // Exit after successful login&#10;                        }&#10;                    }&#10;&#10;                    // If loop completes and credentials are not valid&#10;                    if (!credentialsValid) {&#10;                        loginPassword.setError(&quot;Invalid Credentials!&quot;);&#10;                        loginPassword.requestFocus();&#10;                    }&#10;&#10;                } else {&#10;                    loginUsername.setError(&quot;User Does Not Exist&quot;);&#10;                    loginUsername.requestFocus();&#10;                }&#10;            }&#10;&#10;            @Override&#10;            public void onCancelled(@NonNull DatabaseError error) {&#10;//if any error&#10;                Toast.makeText(LoginActivity.this, &quot;Database Error: &quot; + error.getMessage(), Toast.LENGTH_LONG).show();&#10;            }&#10;        });&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/MainActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/MainActivity.java" />
              <option name="originalContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;// Removed: import android.os.Handler; // No longer needed for the primary delay&#10;// Removed: import android.os.Looper;  // No longer needed for the primary delay&#10;// Removed: import android.view.View; // Not directly used in this corrected version&#10;import android.view.animation.Animation;&#10;import android.view.animation.AnimationUtils;&#10;import android.widget.ImageView;&#10;&#10;// Removed: import androidx.activity.EdgeToEdge; // Not essential for the core logic shown&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;public class MainActivity extends AppCompatActivity {&#10;&#10;    // private static final long SPLASH_TIMEOUT = 5000;  (Changed to another method for delay )&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main);&#10;&#10;        // -------------------------------------- Fading Animation &amp; Transition Logic ------------------------------------------&#10;        ImageView imageViewToFadeIn = findViewById(R.id.splashImage);&#10;&#10;        // Load the fade-in animation&#10;        Animation fadeInAnimation = AnimationUtils.loadAnimation(this, R.anim.fadein);&#10;&#10;        // Set an AnimationListener to know when the animation ends&#10;        fadeInAnimation.setAnimationListener(new Animation.AnimationListener() {&#10;            @Override&#10;            public void onAnimationStart(Animation animation) {&#10;                // Animation started&#10;            }&#10;&#10;            @Override&#10;            public void onAnimationEnd(Animation animation) {&#10;                // Animation ended, NOW start the transition to WelcomeActivity&#10;                Intent intent = new Intent(MainActivity.this, WelcomeActivity.class);&#10;                startActivity(intent);&#10;&#10;                // Finish this MainActivity so the user can't navigate back to the splash screen&#10;                finish();&#10;&#10;            }&#10;&#10;            @Override&#10;            public void onAnimationRepeat(Animation animation) {&#10;                // Animation repeated&#10;            }&#10;        });&#10;&#10;        // Apply the animation to the ImageView&#10;        imageViewToFadeIn.startAnimation(fadeInAnimation);&#10;&#10;        // --- Original Handler that i used for  delayed transition no longer need ---&#10;        /*&#10;        new Handler(Looper.getMainLooper()).postDelayed(new Runnable() {&#10;            @Override&#10;            public void run() {&#10;                Intent intent = new Intent(MainActivity.this, WelcomeActivity.class);&#10;                startActivity(intent);&#10;                finish();&#10;            }&#10;        }, SPLASH_TIMEOUT);&#10;        */&#10;&#10;        // --------------------------------------------finshed------------------------------------&#10;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;// Removed: import android.os.Handler; // No longer needed for the primary delay&#10;// Removed: import android.os.Looper;  // No longer needed for the primary delay&#10;// Removed: import android.view.View; // Not directly used in this corrected version&#10;import android.view.animation.Animation;&#10;import android.view.animation.AnimationUtils;&#10;import android.widget.ImageView;&#10;&#10;// Removed: import androidx.activity.EdgeToEdge; // Not essential for the core logic shown&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;public class MainActivity extends AppCompatActivity {&#10;&#10;    // private static final long SPLASH_TIMEOUT = 5000;  (Changed to another method for delay )&#10;    private SessionManager sessionManager;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main);&#10;&#10;        // Initialize SessionManager&#10;        sessionManager = new SessionManager(this);&#10;&#10;        // -------------------------------------- Fading Animation &amp; Transition Logic ------------------------------------------&#10;        ImageView imageViewToFadeIn = findViewById(R.id.splashImage);&#10;&#10;        // Load the fade-in animation&#10;        Animation fadeInAnimation = AnimationUtils.loadAnimation(this, R.anim.fadein);&#10;&#10;        // Set an AnimationListener to know when the animation ends&#10;        fadeInAnimation.setAnimationListener(new Animation.AnimationListener() {&#10;            @Override&#10;            public void onAnimationStart(Animation animation) {&#10;                // Animation started&#10;            }&#10;&#10;            @Override&#10;            public void onAnimationEnd(Animation animation) {&#10;                // Check if user is already logged in&#10;                if (sessionManager.isLoggedIn()) {&#10;                    // User is logged in, go directly to HomeActivity&#10;                    Intent intent = new Intent(MainActivity.this, HomeActivity.class);&#10;                    intent.putExtra(&quot;USERNAME&quot;, sessionManager.getUsername());&#10;                    startActivity(intent);&#10;                } else {&#10;                    // User is not logged in, go to WelcomeActivity&#10;                    Intent intent = new Intent(MainActivity.this, WelcomeActivity.class);&#10;                    startActivity(intent);&#10;                }&#10;&#10;                // Finish this MainActivity so the user can't navigate back to the splash screen&#10;                finish();&#10;            }&#10;&#10;            @Override&#10;            public void onAnimationRepeat(Animation animation) {&#10;                // Animation repeated&#10;            }&#10;        });&#10;&#10;        // Apply the animation to the ImageView&#10;        imageViewToFadeIn.startAnimation(fadeInAnimation);&#10;&#10;        // --- Original Handler that i used for  delayed transition no longer need ---&#10;        /*&#10;        new Handler(Looper.getMainLooper()).postDelayed(new Runnable() {&#10;            @Override&#10;            public void run() {&#10;                Intent intent = new Intent(MainActivity.this, WelcomeActivity.class);&#10;                startActivity(intent);&#10;                finish();&#10;            }&#10;        }, SPLASH_TIMEOUT);&#10;        */&#10;&#10;        // --------------------------------------------finshed------------------------------------&#10;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/SessionManager.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/SessionManager.java" />
              <option name="originalContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Context;&#10;import android.content.SharedPreferences;&#10;&#10;public class SessionManager {&#10;    private static final String PREF_NAME = &quot;HiddenSriLankaSession&quot;;&#10;    private static final String KEY_IS_LOGGED_IN = &quot;isLoggedIn&quot;;&#10;    private static final String KEY_USERNAME = &quot;username&quot;;&#10;    private static final String KEY_EMAIL = &quot;email&quot;;&#10;    private static final String KEY_NAME = &quot;name&quot;;&#10;&#10;    private SharedPreferences pref;&#10;    private SharedPreferences.Editor editor;&#10;    private Context context;&#10;&#10;    public SessionManager(Context context) {&#10;        this.context = context;&#10;        pref = context.getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);&#10;        editor = pref.edit();&#10;    }&#10;&#10;    /**&#10;     * Create login session&#10;     */&#10;    public void createLoginSession(String username, String email, String name) {&#10;        editor.putBoolean(KEY_IS_LOGGED_IN, true);&#10;        editor.putString(KEY_USERNAME, username);&#10;        editor.putString(KEY_EMAIL, email);&#10;        editor.putString(KEY_NAME, name);&#10;        editor.apply();&#10;    }&#10;&#10;    /**&#10;     * Check login method will check user login status&#10;     * If false it will redirect user to login page&#10;     * Else do anything&#10;     */&#10;    public boolean isLoggedIn() {&#10;        return pref.getBoolean(KEY_IS_LOGGED_IN, false);&#10;    }&#10;&#10;    /**&#10;     * Get stored session data&#10;     */&#10;    public String getUsername() {&#10;        return pref.getString(KEY_USERNAME, null);&#10;    }&#10;&#10;    public String getEmail() {&#10;        return pref.getString(KEY_EMAIL, null);&#10;    }&#10;&#10;    public String getName() {&#10;        return pref.getString(KEY_NAME, null);&#10;    }&#10;&#10;    /**&#10;     * Clear session details&#10;     */&#10;    public void logoutUser() {&#10;        editor.clear();&#10;        editor.apply();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Context;&#10;import android.content.SharedPreferences;&#10;&#10;public class SessionManager {&#10;    private static final String PREF_NAME = &quot;HiddenSriLankaSession&quot;;&#10;    private static final String KEY_IS_LOGGED_IN = &quot;isLoggedIn&quot;;&#10;    private static final String KEY_USERNAME = &quot;username&quot;;&#10;    private static final String KEY_EMAIL = &quot;email&quot;;&#10;    private static final String KEY_NAME = &quot;name&quot;;&#10;&#10;    private final SharedPreferences pref;&#10;    private final SharedPreferences.Editor editor;&#10;&#10;    public SessionManager(Context context) {&#10;        pref = context.getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);&#10;        editor = pref.edit();&#10;    }&#10;&#10;    /**&#10;     * Create login session&#10;     */&#10;    public void createLoginSession(String username, String email, String name) {&#10;        editor.putBoolean(KEY_IS_LOGGED_IN, true);&#10;        editor.putString(KEY_USERNAME, username);&#10;        editor.putString(KEY_EMAIL, email);&#10;        editor.putString(KEY_NAME, name);&#10;        editor.apply();&#10;    }&#10;&#10;    /**&#10;     * Check login method will check user login status&#10;     * If false it will redirect user to login page&#10;     * Else do anything&#10;     */&#10;    public boolean isLoggedIn() {&#10;        return pref.getBoolean(KEY_IS_LOGGED_IN, false);&#10;    }&#10;&#10;    /**&#10;     * Get stored session data&#10;     */&#10;    public String getUsername() {&#10;        return pref.getString(KEY_USERNAME, null);&#10;    }&#10;&#10;    public String getEmail() {&#10;        return pref.getString(KEY_EMAIL, null);&#10;    }&#10;&#10;    public String getName() {&#10;        return pref.getString(KEY_NAME, null);&#10;    }&#10;&#10;    /**&#10;     * Clear session details&#10;     */&#10;    public void logoutUser() {&#10;        editor.clear();&#10;        editor.apply();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/circle_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/circle_background.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;oval&quot;&gt;&#10;    &lt;solid android:color=&quot;#80000000&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/duration_badge.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/duration_badge.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:shape=&quot;rectangle&quot;&gt;&#10;    &lt;solid android:color=&quot;#80000000&quot; /&gt;&#10;    &lt;corners android:radius=&quot;4dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/gradient_overlay.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/gradient_overlay.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;gradient&#10;        android:startColor=&quot;#00000000&quot;&#10;        android:centerColor=&quot;#40000000&quot;&#10;        android:endColor=&quot;#80000000&quot;&#10;        android:angle=&quot;270&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/grow_our_database.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/grow_our_database.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;200dp&quot;&#10;    android:height=&quot;150dp&quot;&#10;    android:viewportWidth=&quot;200&quot;&#10;    android:viewportHeight=&quot;150&quot;&gt;&#10;    &#10;    &lt;!-- Background --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#E8F5E8&quot;&#10;        android:pathData=&quot;M0,0h200v150h-200z&quot;/&gt;&#10;    &#10;    &lt;!-- Tree/Growth Icon --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#4CAF50&quot;&#10;        android:pathData=&quot;M100,120c-2,0 -4,-2 -4,-4v-20c0,-2 2,-4 4,-4s4,2 4,4v20c0,2 -2,4 -4,4z&quot;/&gt;&#10;    &#10;    &lt;!-- Leaves --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#66BB6A&quot;&#10;        android:pathData=&quot;M100,90c-8,0 -15,-7 -15,-15s7,-15 15,-15s15,7 15,15s-7,15 -15,15z&quot;/&gt;&#10;    &#10;    &lt;path&#10;        android:fillColor=&quot;#81C784&quot;&#10;        android:pathData=&quot;M90,85c-6,0 -12,-5 -12,-12s6,-12 12,-12s12,5 12,12s-6,12 -12,12z&quot;/&gt;&#10;    &#10;    &lt;path&#10;        android:fillColor=&quot;#81C784&quot;&#10;        android:pathData=&quot;M110,85c-6,0 -12,-5 -12,-12s6,-12 12,-12s12,5 12,12s-6,12 -12,12z&quot;/&gt;&#10;    &#10;    &lt;!-- Plus icon in center --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#2E7D32&quot;&#10;        android:pathData=&quot;M100,50v20m-10,-10h20&quot;&#10;        android:strokeWidth=&quot;3&quot;&#10;        android:strokeColor=&quot;#2E7D32&quot;/&gt;&#10;    &#10;    &lt;!-- Text area suggestion --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#C8E6C9&quot;&#10;        android:pathData=&quot;M30,130h140v15h-140z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_add_location.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_add_location.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M12,2C8.13,2 5,5.13 5,9c0,5.25 7,13 7,13s7,-7.75 7,-13c0,-3.87 -3.13,-7 -7,-7zM7,9c0,-2.76 2.24,-5 5,-5s5,2.24 5,5c0,2.88 -2.88,7.19 -5,9.88C9.92,16.21 7,11.85 7,9z&quot;/&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M12,9m-2.5,0a2.5,2.5 0,1 1,5 0a2.5,2.5 0,1 1,-5 0&quot;/&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M11,7h2v2h-2z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_camera.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_camera.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M9,2l1.17,0L12,4.17L14.83,2L16,2v6h-2V5.83l-2,2 -2,-2V8H8V2H9zM7,8h2v1H7V8zM16,8h1v1h-1V8zM7,10h10v1H7V10zM7,12h10v8H7V12zM9,14h6v2H9V14zM9,17h6v2H9V17z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_directions.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_directions.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@android:color/white&quot;&#10;        android:pathData=&quot;M21.71,11.29l-9,-9c-0.39,-0.39 -1.02,-0.39 -1.41,0l-9,9c-0.39,0.39 -0.39,1.02 0,1.41l9,9c0.39,0.39 1.02,0.39 1.41,0l9,-9c0.39,-0.39 0.39,-1.02 0,-1.41zM14,14.5V12h-4v3H8v-4c0,-0.55 0.45,-1 1,-1h5V7.5l3.5,3.5 -3.5,3.5z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_grow_database.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_grow_database.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;200dp&quot;&#10;    android:height=&quot;150dp&quot;&#10;    android:viewportWidth=&quot;200&quot;&#10;    android:viewportHeight=&quot;150&quot;&gt;&#10;    &#10;    &lt;!-- Background --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#E8F5E8&quot;&#10;        android:pathData=&quot;M0,0h200v150h-200z&quot;/&gt;&#10;    &#10;    &lt;!-- Tree/Growth Icon --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#4CAF50&quot;&#10;        android:pathData=&quot;M100,120c-2,0 -4,-2 -4,-4v-20c0,-2 2,-4 4,-4s4,2 4,4v20c0,2 -2,4 -4,4z&quot;/&gt;&#10;    &#10;    &lt;!-- Leaves --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#66BB6A&quot;&#10;        android:pathData=&quot;M100,90c-8,0 -15,-7 -15,-15s7,-15 15,-15s15,7 15,15s-7,15 -15,15z&quot;/&gt;&#10;    &#10;    &lt;path&#10;        android:fillColor=&quot;#81C784&quot;&#10;        android:pathData=&quot;M90,85c-6,0 -12,-5 -12,-12s6,-12 12,-12s12,5 12,12s-6,12 -12,12z&quot;/&gt;&#10;    &#10;    &lt;path&#10;        android:fillColor=&quot;#81C784&quot;&#10;        android:pathData=&quot;M110,85c-6,0 -12,-5 -12,-12s6,-12 12,-12s12,5 12,12s-6,12 -12,12z&quot;/&gt;&#10;    &#10;    &lt;!-- Plus icon in center --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#2E7D32&quot;&#10;        android:pathData=&quot;M100,50v20m-10,-10h20&quot;&#10;        android:strokeWidth=&quot;3&quot;&#10;        android:strokeColor=&quot;#2E7D32&quot;/&gt;&#10;    &#10;    &lt;!-- Text area suggestion --&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#C8E6C9&quot;&#10;        android:pathData=&quot;M30,130h140v15h-140z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_image_placeholder.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_image_placeholder.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M21,19V5c0,-1.1 -0.9,-2 -2,-2H5c-1.1,0 -2,0.9 -2,2v14c0,1.1 0.9,2 2,2h14c1.1,0 2,-0.9 2,-2zM8.5,13.5l2.5,3.01L14.5,12l4.5,6H5l3.5,-4.5z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_info.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_info.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM13,17h-2v-6h2v6zM13,9h-2L11,7h2v2z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_link.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_link.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M3.9,12c0,-1.71 1.39,-3.1 3.1,-3.1h4V7H6.9C3.82,7 1.3,9.52 1.3,12.6S3.82,18.2 6.9,18.2h4v-1.9H6.9c-1.71,0 -3.1,-1.39 -3.1,-3.1zM8,13h8v-2H8v2zM17.1,7h-4v1.9h4c1.71,0 3.1,1.39 3.1,3.1s-1.39,3.1 -3.1,3.1h-4v1.9h4c3.08,0 5.6,-2.52 5.6,-5.6S20.18,7 17.1,7z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_location_on.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_location_on.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@android:color/white&quot;&#10;        android:pathData=&quot;M12,2C8.13,2 5,5.13 5,9c0,5.25 7,13 7,13s7,-7.75 7,-13c0,-3.87 -3.13,-7 -7,-7zM12,11.5c-1.38,0 -2.5,-1.12 -2.5,-2.5s1.12,-2.5 2.5,-2.5 2.5,1.12 2.5,2.5 -1.12,2.5 -2.5,2.5z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_person.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_person.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@android:color/white&quot;&#10;        android:pathData=&quot;M12,2C13.1,2 14,2.9 14,4C14,5.1 13.1,6 12,6C10.9,6 10,5.1 10,4C10,2.9 10.9,2 12,2ZM21,9V7L15,7V9C15,11.8 12.8,14 10,14V22H8V14C5.2,14 3,11.8 3,9V7H21Z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_play_circle.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_play_circle.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;@android:color/white&quot;&#10;        android:pathData=&quot;M8,5v14l11,-7z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_share.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_share.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M18,16.08c-0.76,0 -1.44,0.3 -1.96,0.77L8.91,12.7c0.05,-0.23 0.09,-0.46 0.09,-0.7s-0.04,-0.47 -0.09,-0.7l7.05,-4.11c0.54,0.5 1.25,0.81 2.04,0.81 1.66,0 3,-1.34 3,-3s-1.34,-3 -3,-3 -3,1.34 -3,3c0,0.24 0.04,0.47 0.09,0.7L8.04,9.81C7.5,9.31 6.79,9 6,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3c0.79,0 1.5,-0.31 2.04,-0.81l7.12,4.16c-0.05,0.21 -0.08,0.43 -0.08,0.65 0,1.61 1.31,2.92 2.92,2.92 1.61,0 2.92,-1.31 2.92,-2.92s-1.31,-2.92 -2.92,-2.92z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_add_location.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_add_location.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:fillViewport=&quot;true&quot;&#10;    android:background=&quot;@color/white&quot;&#10;    tools:context=&quot;.AddLocationActivity&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Header Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;4dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/DeepForestGreen&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:gravity=&quot;center&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;48dp&quot;&#10;                    android:layout_height=&quot;48dp&quot;&#10;                    android:src=&quot;@drawable/ic_add_location&quot;&#10;                    app:tint=&quot;@color/GoldYellow&quot;&#10;                    android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Share a Hidden Gem&quot;&#10;                    android:textColor=&quot;@color/white&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Help other travelers discover amazing places!&quot;&#10;                    android:textColor=&quot;@color/GoldSand&quot;&#10;                    android:textSize=&quot;14sp&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    android:textAlignment=&quot;center&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Instructional Video Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;4dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/white&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:padding=&quot;16dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;horizontal&quot;&#10;                    android:gravity=&quot;center_vertical&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;24dp&quot;&#10;                        android:layout_height=&quot;24dp&quot;&#10;                        android:src=&quot;@drawable/ic_info&quot;&#10;                        app:tint=&quot;@color/DeepForestGreen&quot;&#10;                        android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;0dp&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_weight=&quot;1&quot;&#10;                        android:text=&quot;How to Add a Location&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Tutorial&quot;&#10;                        android:textColor=&quot;@color/GoldYellow&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textStyle=&quot;italic&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;120dp&quot;&#10;                    android:clickable=&quot;true&quot;&#10;                    android:focusable=&quot;true&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;2dp&quot;&gt;&#10;&#10;                    &lt;FrameLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:id=&quot;@+id/iv_tutorial_thumbnail&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;match_parent&quot;&#10;                            android:scaleType=&quot;centerCrop&quot;&#10;                            android:src=&quot;@drawable/ic_image_placeholder&quot; /&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:id=&quot;@+id/btn_play_tutorial&quot;&#10;                            android:layout_width=&quot;48dp&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:layout_gravity=&quot;center&quot;&#10;                            android:background=&quot;@drawable/circle_background&quot;&#10;                            android:padding=&quot;12dp&quot;&#10;                            android:src=&quot;@drawable/ic_link&quot;&#10;                            app:tint=&quot;@color/white&quot; /&gt;&#10;&#10;                    &lt;/FrameLayout&gt;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginTop=&quot;8dp&quot;&#10;                    android:text=&quot;Watch this quick tutorial to learn how to add locations effectively&quot;&#10;                    android:textColor=&quot;@color/light_gray&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textAlignment=&quot;center&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Progress Bar --&gt;&#10;        &lt;ProgressBar&#10;            android:id=&quot;@+id/progress_bar&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_gravity=&quot;center&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;&#10;            android:visibility=&quot;gone&quot; /&gt;&#10;&#10;        &lt;!-- Form Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            app:cardCornerRadius=&quot;16dp&quot;&#10;            app:cardElevation=&quot;8dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/white&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:padding=&quot;24dp&quot;&gt;&#10;&#10;                &lt;!-- Location Name --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_location_name&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Location Name *&quot;&#10;                        android:inputType=&quot;textCapWords&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Category --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:id=&quot;@+id/til_category&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;AutoCompleteTextView&#10;                        android:id=&quot;@+id/et_category&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Category *&quot;&#10;                        android:inputType=&quot;none&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Province --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:id=&quot;@+id/til_province&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;AutoCompleteTextView&#10;                        android:id=&quot;@+id/et_province&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Province *&quot;&#10;                        android:inputType=&quot;none&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- City --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:id=&quot;@+id/til_city&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;AutoCompleteTextView&#10;                        android:id=&quot;@+id/et_city&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;City *&quot;&#10;                        android:inputType=&quot;none&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot;&#10;                        android:enabled=&quot;true&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Description --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&#10;                    app:counterEnabled=&quot;true&quot;&#10;                    app:counterMaxLength=&quot;3000&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_description&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Description (Share detailed information about this amazing place) *&quot;&#10;                        android:inputType=&quot;textMultiLine|textCapSentences&quot;&#10;                        android:lines=&quot;6&quot;&#10;                        android:maxLength=&quot;3000&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Contributor Name --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_contributor_name&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Your Name *&quot;&#10;                        android:inputType=&quot;textPersonName|textCapWords&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- YouTube URL (Optional) --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;24dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_youtube_url&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;YouTube URL (Optional)&quot;&#10;                        android:inputType=&quot;textUri&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Image URL Input (Now Required) --&gt;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Location Image *&quot;&#10;                    android:textColor=&quot;@color/NavyBlue&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_image_url&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Image URL *&quot;&#10;                        android:inputType=&quot;textUri&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Image Preview --&gt;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;200dp&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot;&#10;                    app:cardCornerRadius=&quot;12dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&#10;                    app:cardBackgroundColor=&quot;@color/offWhite&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:id=&quot;@+id/iv_selected_image&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:scaleType=&quot;centerCrop&quot;&#10;                        android:visibility=&quot;gone&quot;&#10;                        android:contentDescription=&quot;Selected location image&quot; /&gt;&#10;&#10;                    &lt;!-- Placeholder when no image selected --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/layout_image_placeholder&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:alpha=&quot;0.6&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;48dp&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:src=&quot;@drawable/ic_image_placeholder&quot;&#10;                            app:tint=&quot;@color/light_gray&quot;&#10;                            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Enter image URL above and tap 'Load Image'&quot;&#10;                            android:textColor=&quot;@color/light_gray&quot;&#10;                            android:fontFamily=&quot;cursive&quot;&#10;                            android:textAlignment=&quot;center&quot;&#10;                            android:paddingHorizontal=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;!-- Load from URL Button --&gt;&#10;                &lt;com.google.android.material.button.MaterialButton&#10;                    android:id=&quot;@+id/btn_load_url&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;32dp&quot;&#10;                    android:text=&quot;Load Image from URL&quot;&#10;                    android:textColor=&quot;@color/DeepForestGreen&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    app:strokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:cornerRadius=&quot;8dp&quot;&#10;                    app:icon=&quot;@drawable/ic_link&quot;&#10;                    app:iconTint=&quot;@color/DeepForestGreen&quot; /&gt;&#10;&#10;                &lt;!-- Submit Button --&gt;&#10;                &lt;com.google.android.material.button.MaterialButton&#10;                    android:id=&quot;@+id/btn_submit_location&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;56dp&quot;&#10;                    android:backgroundTint=&quot;@color/DeepForestGreen&quot;&#10;                    android:text=&quot;Share Location&quot;&#10;                    android:textColor=&quot;@color/GoldYellow&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    app:cornerRadius=&quot;12dp&quot;&#10;                    app:icon=&quot;@drawable/ic_share&quot;&#10;                    app:iconTint=&quot;@color/GoldYellow&quot; /&gt;&#10;&#10;                &lt;!-- Progress Bar for loading states --&gt;&#10;                &lt;ProgressBar&#10;                    android:id=&quot;@+id/progress_bar&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_gravity=&quot;center&quot;&#10;                    android:layout_marginTop=&quot;16dp&quot;&#10;                    android:visibility=&quot;gone&quot;&#10;                    android:indeterminateTint=&quot;@color/DeepForestGreen&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Info Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;16dp&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;2dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/GoldSand&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@drawable/ic_info&quot;&#10;                    app:tint=&quot;@color/NavyBlue&quot;&#10;                    android:layout_marginEnd=&quot;12dp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:text=&quot;Please provide a valid image URL (http/https). Use image hosting services like Imgur, Google Photos, or Dropbox for best results. Your contribution helps travelers discover amazing places!&quot;&#10;                    android:textColor=&quot;@color/NavyBlue&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/ScrollView&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:fillViewport=&quot;true&quot;&#10;    android:background=&quot;@color/white&quot;&#10;    tools:context=&quot;.AddLocationActivity&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Header Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;4dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/DeepForestGreen&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:gravity=&quot;center&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;48dp&quot;&#10;                    android:layout_height=&quot;48dp&quot;&#10;                    android:src=&quot;@drawable/ic_add_location&quot;&#10;                    app:tint=&quot;@color/GoldYellow&quot;&#10;                    android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Share a Hidden Gem&quot;&#10;                    android:textColor=&quot;@color/white&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Help other travelers discover amazing places!&quot;&#10;                    android:textColor=&quot;@color/GoldSand&quot;&#10;                    android:textSize=&quot;14sp&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    android:textAlignment=&quot;center&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Instructional Video Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;4dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/white&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:padding=&quot;16dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;horizontal&quot;&#10;                    android:gravity=&quot;center_vertical&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;24dp&quot;&#10;                        android:layout_height=&quot;24dp&quot;&#10;                        android:src=&quot;@drawable/ic_info&quot;&#10;                        app:tint=&quot;@color/DeepForestGreen&quot;&#10;                        android:layout_marginEnd=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;0dp&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_weight=&quot;1&quot;&#10;                        android:text=&quot;How to Add a Location&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Tutorial&quot;&#10;                        android:textColor=&quot;@color/GoldYellow&quot;&#10;                        android:textSize=&quot;12sp&quot;&#10;                        android:textStyle=&quot;italic&quot; /&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;120dp&quot;&#10;                    android:clickable=&quot;true&quot;&#10;                    android:focusable=&quot;true&quot;&#10;                    app:cardCornerRadius=&quot;8dp&quot;&#10;                    app:cardElevation=&quot;2dp&quot;&gt;&#10;&#10;                    &lt;FrameLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:id=&quot;@+id/iv_tutorial_thumbnail&quot;&#10;                            android:layout_width=&quot;match_parent&quot;&#10;                            android:layout_height=&quot;match_parent&quot;&#10;                            android:scaleType=&quot;centerCrop&quot;&#10;                            android:src=&quot;@drawable/ic_image_placeholder&quot; /&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:id=&quot;@+id/btn_play_tutorial&quot;&#10;                            android:layout_width=&quot;48dp&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:layout_gravity=&quot;center&quot;&#10;                            android:background=&quot;@drawable/circle_background&quot;&#10;                            android:padding=&quot;12dp&quot;&#10;                            android:src=&quot;@drawable/ic_link&quot;&#10;                            app:tint=&quot;@color/white&quot; /&gt;&#10;&#10;                    &lt;/FrameLayout&gt;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginTop=&quot;8dp&quot;&#10;                    android:text=&quot;Watch this quick tutorial to learn how to add locations effectively&quot;&#10;                    android:textColor=&quot;@color/light_gray&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:textAlignment=&quot;center&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Form Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            app:cardCornerRadius=&quot;16dp&quot;&#10;            app:cardElevation=&quot;8dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/white&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:padding=&quot;24dp&quot;&gt;&#10;&#10;                &lt;!-- Location Name --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_location_name&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Location Name *&quot;&#10;                        android:inputType=&quot;textCapWords&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Category --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:id=&quot;@+id/til_category&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;AutoCompleteTextView&#10;                        android:id=&quot;@+id/et_category&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Category *&quot;&#10;                        android:inputType=&quot;none&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Province --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:id=&quot;@+id/til_province&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;AutoCompleteTextView&#10;                        android:id=&quot;@+id/et_province&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Province *&quot;&#10;                        android:inputType=&quot;none&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- City --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:id=&quot;@+id/til_city&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;AutoCompleteTextView&#10;                        android:id=&quot;@+id/et_city&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;City *&quot;&#10;                        android:inputType=&quot;none&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot;&#10;                        android:enabled=&quot;true&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Description --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&#10;                    app:counterEnabled=&quot;true&quot;&#10;                    app:counterMaxLength=&quot;3000&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_description&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Description (Share detailed information about this amazing place) *&quot;&#10;                        android:inputType=&quot;textMultiLine|textCapSentences&quot;&#10;                        android:lines=&quot;6&quot;&#10;                        android:maxLength=&quot;3000&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Contributor Name --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_contributor_name&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Your Name *&quot;&#10;                        android:inputType=&quot;textPersonName|textCapWords&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- YouTube URL (Optional) --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;24dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_youtube_url&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;YouTube URL (Optional)&quot;&#10;                        android:inputType=&quot;textUri&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Image URL Input (Now Required) --&gt;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Location Image *&quot;&#10;                    android:textColor=&quot;@color/NavyBlue&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_image_url&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Image URL *&quot;&#10;                        android:inputType=&quot;textUri&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Image Preview --&gt;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;200dp&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot;&#10;                    app:cardCornerRadius=&quot;12dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&#10;                    app:cardBackgroundColor=&quot;@color/offWhite&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:id=&quot;@+id/iv_selected_image&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:scaleType=&quot;centerCrop&quot;&#10;                        android:visibility=&quot;gone&quot;&#10;                        android:contentDescription=&quot;Selected location image&quot; /&gt;&#10;&#10;                    &lt;!-- Placeholder when no image selected --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/layout_image_placeholder&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:alpha=&quot;0.6&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;48dp&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:src=&quot;@drawable/ic_image_placeholder&quot;&#10;                            app:tint=&quot;@color/light_gray&quot;&#10;                            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Enter image URL above and tap 'Load Image'&quot;&#10;                            android:textColor=&quot;@color/light_gray&quot;&#10;                            android:fontFamily=&quot;cursive&quot;&#10;                            android:textAlignment=&quot;center&quot;&#10;                            android:paddingHorizontal=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;!-- Load from URL Button --&gt;&#10;                &lt;com.google.android.material.button.MaterialButton&#10;                    android:id=&quot;@+id/btn_load_url&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;32dp&quot;&#10;                    android:text=&quot;Load Image from URL&quot;&#10;                    android:textColor=&quot;@color/DeepForestGreen&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    app:strokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:cornerRadius=&quot;8dp&quot;&#10;                    app:icon=&quot;@drawable/ic_link&quot;&#10;                    app:iconTint=&quot;@color/DeepForestGreen&quot; /&gt;&#10;&#10;                &lt;!-- Submit Button --&gt;&#10;                &lt;com.google.android.material.button.MaterialButton&#10;                    android:id=&quot;@+id/btn_submit_location&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;56dp&quot;&#10;                    android:backgroundTint=&quot;@color/DeepForestGreen&quot;&#10;                    android:text=&quot;Share Location&quot;&#10;                    android:textColor=&quot;@color/GoldYellow&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    app:cornerRadius=&quot;12dp&quot;&#10;                    app:icon=&quot;@drawable/ic_share&quot;&#10;                    app:iconTint=&quot;@color/GoldYellow&quot; /&gt;&#10;&#10;                &lt;!-- Progress Bar for loading states --&gt;&#10;                &lt;ProgressBar&#10;                    android:id=&quot;@+id/progress_bar&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_gravity=&quot;center&quot;&#10;                    android:layout_marginTop=&quot;16dp&quot;&#10;                    android:visibility=&quot;gone&quot;&#10;                    android:indeterminateTint=&quot;@color/DeepForestGreen&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Info Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;16dp&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;2dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/GoldSand&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@drawable/ic_info&quot;&#10;                    app:tint=&quot;@color/NavyBlue&quot;&#10;                    android:layout_marginEnd=&quot;12dp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:text=&quot;Please provide a valid image URL (http/https). Use image hosting services like Imgur, Google Photos, or Dropbox for best results. Your contribution helps travelers discover amazing places!&quot;&#10;                    android:textColor=&quot;@color/NavyBlue&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/ScrollView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_location_detail_screen.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_location_detail_screen.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/white&quot;&#10;    tools:context=&quot;.LocationDetailScreenActivity&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;!-- Main Image --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;250dp&quot;&#10;            android:layout_margin=&quot;16dp&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;            &lt;FrameLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:id=&quot;@+id/iv_main_image&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;match_parent&quot;&#10;                    android:scaleType=&quot;centerCrop&quot;&#10;                    android:src=&quot;@drawable/ic_image_placeholder&quot; /&gt;&#10;&#10;                &lt;!-- Gradient overlay for better text readability --&gt;&#10;                &lt;View&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;80dp&quot;&#10;                    android:layout_gravity=&quot;bottom&quot;&#10;                    android:background=&quot;@drawable/gradient_overlay&quot; /&gt;&#10;&#10;                &lt;!-- Category chip overlay --&gt;&#10;                &lt;com.google.android.material.chip.Chip&#10;                    android:id=&quot;@+id/chip_category&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_gravity=&quot;top|end&quot;&#10;                    android:layout_margin=&quot;12dp&quot;&#10;                    android:text=&quot;Category&quot;&#10;                    android:textColor=&quot;@color/white&quot;&#10;                    app:chipBackgroundColor=&quot;@color/DeepForestGreen&quot; /&gt;&#10;&#10;            &lt;/FrameLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Location Information --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginHorizontal=&quot;16dp&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;!-- Location Name --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_location_name&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;8dp&quot;&#10;                android:text=&quot;Location Name&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot;&#10;                android:textSize=&quot;24sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;            &lt;!-- Category --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_category&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:text=&quot;Category&quot;&#10;                android:textColor=&quot;@color/light_gray&quot;&#10;                android:textSize=&quot;16sp&quot; /&gt;&#10;&#10;            &lt;!-- Description --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;4dp&quot;&#10;                android:text=&quot;About this place&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot;&#10;                android:textSize=&quot;18sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_description&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:lineSpacingExtra=&quot;4dp&quot;&#10;                android:text=&quot;Description will be shown here...&quot;&#10;                android:textColor=&quot;@color/black&quot;&#10;                android:textSize=&quot;14sp&quot; /&gt;&#10;&#10;            &lt;!-- Contributor Information --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_contributor&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;4dp&quot;&#10;                android:text=&quot;Contributed by: Username&quot;&#10;                android:textColor=&quot;@color/DeepForestGreen&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:textStyle=&quot;italic&quot;&#10;                android:visibility=&quot;visible&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tv_contributed_date&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&#10;                android:text=&quot;Added on: Date&quot;&#10;                android:textColor=&quot;@color/light_gray&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:visibility=&quot;visible&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Action Buttons --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginHorizontal=&quot;16dp&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;!-- Get Directions Button --&gt;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btn_get_directions&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;56dp&quot;&#10;                android:layout_marginBottom=&quot;12dp&quot;&#10;                android:backgroundTint=&quot;@color/DeepForestGreen&quot;&#10;                android:text=&quot;Get Directions&quot;&#10;                android:textColor=&quot;@color/white&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                app:cornerRadius=&quot;8dp&quot;&#10;                app:icon=&quot;@drawable/ic_directions&quot;&#10;                app:iconGravity=&quot;textStart&quot;&#10;                app:iconPadding=&quot;8dp&quot;&#10;                app:iconTint=&quot;@color/white&quot; /&gt;&#10;&#10;            &lt;!-- Watch Video Button --&gt;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btn_watch_video&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;56dp&quot;&#10;                android:layout_marginBottom=&quot;12dp&quot;&#10;                android:text=&quot;Watch Video&quot;&#10;                android:textColor=&quot;@color/DeepForestGreen&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:visibility=&quot;visible&quot;&#10;                app:cornerRadius=&quot;8dp&quot;&#10;                app:icon=&quot;@drawable/ic_link&quot;&#10;                app:iconGravity=&quot;textStart&quot;&#10;                app:iconPadding=&quot;8dp&quot;&#10;                app:iconTint=&quot;@color/DeepForestGreen&quot;&#10;                app:strokeColor=&quot;@color/DeepForestGreen&quot;&#10;                app:strokeWidth=&quot;2dp&quot; /&gt;&#10;&#10;            &lt;!-- Share Location Button --&gt;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btn_share_location&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;56dp&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:text=&quot;Share Location&quot;&#10;                android:textColor=&quot;@color/GoldYellow&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                app:cornerRadius=&quot;8dp&quot;&#10;                app:icon=&quot;@drawable/ic_share&quot;&#10;                app:iconGravity=&quot;textStart&quot;&#10;                app:iconPadding=&quot;8dp&quot;&#10;                app:iconTint=&quot;@color/GoldYellow&quot;&#10;                app:strokeColor=&quot;@color/GoldYellow&quot;&#10;                app:strokeWidth=&quot;2dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Image Gallery (for multiple images) --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginHorizontal=&quot;16dp&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;&#10;            android:orientation=&quot;vertical&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;8dp&quot;&#10;                android:text=&quot;More Photos&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot;&#10;                android:textSize=&quot;18sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;            &lt;androidx.recyclerview.widget.RecyclerView&#10;                android:id=&quot;@+id/rv_image_gallery&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;120dp&quot;&#10;                android:clipToPadding=&quot;false&quot;&#10;                android:paddingStart=&quot;0dp&quot;&#10;                android:paddingEnd=&quot;16dp&quot;&#10;                android:visibility=&quot;gone&quot;&#10;                tools:listitem=&quot;@layout/item_gallery_image&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Bottom padding for better scrolling --&gt;&#10;        &lt;View&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;32dp&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/ScrollView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/docs/setup/architecture.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/docs/setup/architecture.md" />
              <option name="updatedContent" value="# App Architecture&#10;&#10;## Overview&#10;Hidden Sri Lanka follows Android best practices with a modular, maintainable architecture that supports scalability and testability.&#10;&#10;## Architecture Pattern&#10;&#10;### Model-View-Controller (MVC) with BaseActivity Pattern&#10;The app uses a modified MVC pattern with a BaseActivity that provides common functionality across all screens.&#10;&#10;```&#10;┌─────────────────────────────────────────┐&#10;│                View Layer               │&#10;│  Activities, Layouts, Adapters         │&#10;├─────────────────────────────────────────┤&#10;│              Controller Layer           │&#10;│  Activity Logic, Event Handlers        │&#10;├─────────────────────────────────────────┤&#10;│                Model Layer              │&#10;│  Data Classes, Firebase Integration     │&#10;└─────────────────────────────────────────┘&#10;```&#10;&#10;## Core Components&#10;&#10;### 1. BaseActivity Pattern&#10;```java&#10;public abstract class BaseActivity extends AppCompatActivity {&#10;    protected ActivityBaseBinding binding;&#10;    protected SessionManager sessionManager;&#10;    &#10;    protected abstract int getLayoutResourceId();&#10;    protected abstract String getActivityTitle();&#10;}&#10;```&#10;&#10;**Benefits**:&#10;- Consistent navigation across all screens&#10;- Shared session management&#10;- Common toolbar and drawer functionality&#10;- Reduced code duplication&#10;&#10;### 2. Session Management&#10;```java&#10;public class SessionManager {&#10;    private final SharedPreferences pref;&#10;    private final SharedPreferences.Editor editor;&#10;    &#10;    // Session lifecycle management&#10;    public void createLoginSession(String username, String email, String name);&#10;    public boolean isLoggedIn();&#10;    public void logoutUser();&#10;}&#10;```&#10;&#10;**Features**:&#10;- Persistent user sessions&#10;- Automatic login state checking&#10;- Secure session cleanup&#10;- Multi-field user data storage&#10;&#10;### 3. Data Models&#10;```java&#10;public class Attraction {&#10;    private String name;&#10;    private String category;&#10;    private String description;&#10;    private List&lt;String&gt; images;&#10;    private String youtubeUrl;&#10;    private String contributorName;&#10;    private long contributedAt;&#10;    private double latitude;&#10;    private double longitude;&#10;}&#10;```&#10;&#10;## Application Flow&#10;&#10;### 1. App Launch Sequence&#10;```&#10;MainActivity (Splash)&#10;    ↓&#10;SessionManager.isLoggedIn()&#10;    ├── true → HomeActivity&#10;    └── false → WelcomeActivity&#10;                    ↓&#10;                LoginActivity/SignUpActivity&#10;                    ↓&#10;                HomeActivity&#10;```&#10;&#10;### 2. Authentication Flow&#10;```&#10;User Input → Validation → Firebase Query → Session Creation → Navigation&#10;```&#10;&#10;### 3. Data Flow&#10;```&#10;User Action → Firebase Query → Data Processing → UI Update → User Feedback&#10;```&#10;&#10;## Package Structure&#10;&#10;```&#10;com.s23010526.hiddensrilanka/&#10;├── models/&#10;│   ├── Attraction.java&#10;│   ├── User.java&#10;│   └── Location.java&#10;├── activities/&#10;│   ├── BaseActivity.java&#10;│   ├── MainActivity.java&#10;│   ├── HomeActivity.java&#10;│   ├── LoginActivity.java&#10;│   ├── SignUpActivity.java&#10;│   ├── AddLocationActivity.java&#10;│   ├── SettingsActivity.java&#10;│   └── AboutUsActivity.java&#10;├── adapters/&#10;│   └── AttractionAdapter.java&#10;├── utils/&#10;│   ├── SessionManager.java&#10;│   └── DataSeeder.java&#10;└── databinding/&#10;    └── Generated binding classes&#10;```&#10;&#10;## Design Patterns Used&#10;&#10;### 1. Singleton Pattern&#10;```java&#10;// SessionManager implementation&#10;public class SessionManager {&#10;    private static SessionManager instance;&#10;    &#10;    public static SessionManager getInstance(Context context) {&#10;        if (instance == null) {&#10;            instance = new SessionManager(context);&#10;        }&#10;        return instance;&#10;    }&#10;}&#10;```&#10;&#10;### 2. Adapter Pattern&#10;```java&#10;public class AttractionAdapter extends RecyclerView.Adapter&lt;AttractionAdapter.ViewHolder&gt; {&#10;    private List&lt;Attraction&gt; attractions;&#10;    &#10;    // Bridge between data and RecyclerView&#10;}&#10;```&#10;&#10;### 3. Template Method Pattern&#10;```java&#10;// BaseActivity defines template, subclasses implement specifics&#10;public abstract class BaseActivity extends AppCompatActivity {&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        // Common setup&#10;        setupCustomImplementation(); // Template method&#10;    }&#10;    &#10;    protected abstract void setupCustomImplementation();&#10;}&#10;```&#10;&#10;## Data Management&#10;&#10;### 1. Local Storage&#10;- **SharedPreferences**: User sessions and preferences&#10;- **Room Database**: Future enhancement for offline data&#10;- **File Storage**: Cached images and temporary data&#10;&#10;### 2. Remote Storage&#10;- **Firebase Firestore**: Attraction data and metadata&#10;- **Firebase Realtime Database**: User authentication&#10;- **Firebase Storage**: Image hosting (future enhancement)&#10;&#10;### 3. Caching Strategy&#10;```java&#10;// Multi-level caching&#10;Memory Cache → Local Storage → Remote Database&#10;```&#10;&#10;## UI Architecture&#10;&#10;### 1. Layout Hierarchy&#10;```xml&#10;BaseActivity Layout:&#10;├── DrawerLayout&#10;│   ├── LinearLayout (Main Content)&#10;│   │   ├── Toolbar (Custom)&#10;│   │   └── FrameLayout (Content)&#10;│   └── NavigationView (Drawer)&#10;```&#10;&#10;### 2. View Binding&#10;```java&#10;// Type-safe view references&#10;protected ActivityBaseBinding binding;&#10;binding = ActivityBaseBinding.inflate(getLayoutInflater());&#10;setContentView(binding.getRoot());&#10;```&#10;&#10;### 3. Material Design&#10;- **Material Components**: Buttons, text fields, cards&#10;- **Material Theming**: Consistent color and typography&#10;- **Material Motion**: Smooth animations and transitions&#10;&#10;## Error Handling&#10;&#10;### 1. Exception Hierarchy&#10;```&#10;AppException&#10;├── NetworkException&#10;├── AuthenticationException&#10;├── ValidationException&#10;└── DatabaseException&#10;```&#10;&#10;### 2. Error Recovery&#10;```java&#10;try {&#10;    // Risky operation&#10;} catch (NetworkException e) {&#10;    // Show cached data&#10;} catch (DatabaseException e) {&#10;    // Retry mechanism&#10;} catch (Exception e) {&#10;    // Generic error handling&#10;}&#10;```&#10;&#10;## Testing Architecture&#10;&#10;### 1. Unit Testing&#10;```java&#10;@Test&#10;public void testSessionManager() {&#10;    SessionManager manager = new SessionManager(context);&#10;    manager.createLoginSession(&quot;user&quot;, &quot;email&quot;, &quot;name&quot;);&#10;    assertTrue(manager.isLoggedIn());&#10;}&#10;```&#10;&#10;### 2. Integration Testing&#10;```java&#10;@Test&#10;public void testFirebaseIntegration() {&#10;    // Test Firebase queries and responses&#10;}&#10;```&#10;&#10;### 3. UI Testing&#10;```java&#10;@Test&#10;public void testLoginFlow() {&#10;    // Test complete login user journey&#10;}&#10;```&#10;&#10;## Performance Considerations&#10;&#10;### 1. Memory Management&#10;- **View Recycling**: RecyclerView for efficient scrolling&#10;- **Image Loading**: Glide for optimized image handling&#10;- **Lifecycle Awareness**: Proper cleanup in onDestroy()&#10;&#10;### 2. Network Optimization&#10;- **Request Batching**: Group related Firebase queries&#10;- **Caching**: Minimize redundant network calls&#10;- **Compression**: Optimize image sizes and formats&#10;&#10;### 3. UI Performance&#10;- **Async Operations**: Background threads for heavy tasks&#10;- **Lazy Loading**: Load content as needed&#10;- **Smooth Animations**: 60fps target for all animations&#10;&#10;## Security Architecture&#10;&#10;### 1. Data Protection&#10;- **Input Validation**: Sanitize all user inputs&#10;- **SQL Injection Prevention**: Use parameterized queries&#10;- **XSS Protection**: Validate URLs and content&#10;&#10;### 2. Authentication Security&#10;- **Session Management**: Secure token handling&#10;- **Password Security**: Hash and salt passwords&#10;- **Permission Checking**: Validate user permissions&#10;&#10;### 3. Network Security&#10;- **HTTPS Only**: Secure data transmission&#10;- **Certificate Pinning**: Prevent man-in-the-middle attacks&#10;- **API Key Protection**: Secure Firebase configuration&#10;&#10;## Scalability Considerations&#10;&#10;### 1. Code Scalability&#10;- **Modular Design**: Easy to add new features&#10;- **Interface Segregation**: Small, focused interfaces&#10;- **Dependency Injection**: Loose coupling between components&#10;&#10;### 2. Data Scalability&#10;- **Database Indexing**: Optimize query performance&#10;- **Data Pagination**: Handle large datasets efficiently&#10;- **Caching Strategy**: Reduce database load&#10;&#10;### 3. Performance Scalability&#10;- **Lazy Loading**: Load features on demand&#10;- **Resource Optimization**: Minimize memory and CPU usage&#10;- **Background Processing**: Handle heavy tasks efficiently&#10;&#10;---&#10;*This architecture provides a solid foundation for the Hidden Sri Lanka app with excellent maintainability, scalability, and performance characteristics.*" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/docs/setup/firebase.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/docs/setup/firebase.md" />
              <option name="updatedContent" value="# Firebase Integration Guide&#10;&#10;## Overview&#10;Hidden Sri Lanka uses Firebase as its backend-as-a-service platform, providing authentication, real-time database, and cloud storage capabilities.&#10;&#10;## Firebase Services Used&#10;&#10;### 1. Firebase Realtime Database&#10;**Purpose**: User authentication and profile data&#10;**Database URL**: `https://hidden-sri-lanka-c3ec5-default-rtdb.asia-southeast1.firebasedatabase.app`&#10;&#10;#### Database Structure&#10;```json&#10;{&#10;  &quot;users&quot;: {&#10;    &quot;user-id-1&quot;: {&#10;      &quot;username&quot;: &quot;john_doe&quot;,&#10;      &quot;email&quot;: &quot;john@example.com&quot;,&#10;      &quot;name&quot;: &quot;John Doe&quot;,&#10;      &quot;password&quot;: &quot;encrypted_password&quot;&#10;    }&#10;  }&#10;}&#10;```&#10;&#10;#### Security Rules&#10;```javascript&#10;{&#10;  &quot;rules&quot;: {&#10;    &quot;users&quot;: {&#10;      &quot;.read&quot;: &quot;auth != null&quot;,&#10;      &quot;.write&quot;: &quot;auth != null&quot;,&#10;      &quot;$uid&quot;: {&#10;        &quot;.validate&quot;: &quot;newData.hasChildren(['username', 'email', 'name'])&quot;&#10;      }&#10;    }&#10;  }&#10;}&#10;```&#10;&#10;### 2. Cloud Firestore&#10;**Purpose**: Attraction data and location information&#10;&#10;#### Database Structure&#10;```&#10;/cities/{cityName}/attractions/{attractionId}&#10;{&#10;  name: string,&#10;  category: string,&#10;  description: string,&#10;  images: array&lt;string&gt;,&#10;  youtubeUrl: string,&#10;  contributorName: string,&#10;  contributedAt: timestamp,&#10;  province: string,&#10;  city: string,&#10;  latitude: number,&#10;  longitude: number&#10;}&#10;```&#10;&#10;#### Example Document&#10;```json&#10;{&#10;  &quot;name&quot;: &quot;Sigiriya Rock Fortress&quot;,&#10;  &quot;category&quot;: &quot;Historical Site&quot;,&#10;  &quot;description&quot;: &quot;Ancient rock fortress and palace ruins...&quot;,&#10;  &quot;images&quot;: [&#10;    &quot;https://example.com/sigiriya1.jpg&quot;,&#10;    &quot;https://example.com/sigiriya2.jpg&quot;&#10;  ],&#10;  &quot;youtubeUrl&quot;: &quot;https://youtube.com/watch?v=example&quot;,&#10;  &quot;contributorName&quot;: &quot;Travel Expert&quot;,&#10;  &quot;contributedAt&quot;: 1691234567890,&#10;  &quot;province&quot;: &quot;Central Province&quot;,&#10;  &quot;city&quot;: &quot;Dambulla&quot;,&#10;  &quot;latitude&quot;: 7.9568,&#10;  &quot;longitude&quot;: 80.7592&#10;}&#10;```&#10;&#10;### 3. Firebase Authentication (Future Enhancement)&#10;**Current Status**: Not implemented yet&#10;**Planned Features**: &#10;- Email/password authentication&#10;- Google Sign-In&#10;- Phone number verification&#10;&#10;## Setup Instructions&#10;&#10;### 1. Firebase Project Configuration&#10;&#10;#### Create Firebase Project&#10;1. Go to [Firebase Console](https://console.firebase.google.com)&#10;2. Click &quot;Create a project&quot;&#10;3. Project name: `hidden-sri-lanka`&#10;4. Enable Google Analytics (recommended)&#10;5. Choose your region (Asia-Southeast1 for Sri Lanka)&#10;&#10;#### Enable Required Services&#10;1. **Realtime Database**:&#10;   - Navigate to &quot;Realtime Database&quot; in sidebar&#10;   - Click &quot;Create Database&quot;&#10;   - Choose &quot;Asia-Southeast1&quot; region&#10;   - Start in &quot;Test Mode&quot; initially&#10;&#10;2. **Cloud Firestore**:&#10;   - Navigate to &quot;Firestore Database&quot;&#10;   - Click &quot;Create Database&quot;&#10;   - Choose &quot;Asia-Southeast1&quot; region&#10;   - Start in &quot;Test Mode&quot;&#10;&#10;3. **Authentication** (Future):&#10;   - Navigate to &quot;Authentication&quot;&#10;   - Click &quot;Get Started&quot;&#10;   - Enable Email/Password provider&#10;&#10;### 2. Android App Configuration&#10;&#10;#### Add Android App to Firebase&#10;1. Click &quot;Add app&quot; → Android icon&#10;2. **Package name**: `com.s23010526.hiddensrilanka`&#10;3. **App nickname**: &quot;Hidden Sri Lanka&quot;&#10;4. **Debug signing certificate**: Optional for development&#10;5. Download `google-services.json`&#10;&#10;#### Install google-services.json&#10;```bash&#10;# Place the file in your app module&#10;cp ~/Downloads/google-services.json app/google-services.json&#10;```&#10;&#10;#### Update build.gradle files&#10;**Project-level build.gradle.kts**:&#10;```kotlin&#10;plugins {&#10;    id(&quot;com.google.gms.google-services&quot;) version &quot;4.3.15&quot; apply false&#10;}&#10;```&#10;&#10;**App-level build.gradle.kts**:&#10;```kotlin&#10;plugins {&#10;    id(&quot;com.google.gms.google-services&quot;)&#10;}&#10;&#10;dependencies {&#10;    implementation(&quot;com.google.firebase:firebase-database:20.3.0&quot;)&#10;    implementation(&quot;com.google.firebase:firebase-firestore:24.9.1&quot;)&#10;    implementation(&quot;com.google.firebase:firebase-auth:22.3.0&quot;)&#10;}&#10;```&#10;&#10;### 3. Security Rules Setup&#10;&#10;#### Realtime Database Rules&#10;```javascript&#10;{&#10;  &quot;rules&quot;: {&#10;    &quot;users&quot;: {&#10;      &quot;.read&quot;: true,&#10;      &quot;.write&quot;: true,&#10;      &quot;$userId&quot;: {&#10;        &quot;.validate&quot;: &quot;newData.hasChildren(['username', 'email', 'name', 'password'])&quot;,&#10;        &quot;username&quot;: {&#10;          &quot;.validate&quot;: &quot;newData.isString() &amp;&amp; newData.val().length &gt; 0&quot;&#10;        },&#10;        &quot;email&quot;: {&#10;          &quot;.validate&quot;: &quot;newData.isString() &amp;&amp; newData.val().matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i)&quot;&#10;        },&#10;        &quot;name&quot;: {&#10;          &quot;.validate&quot;: &quot;newData.isString() &amp;&amp; newData.val().length &gt; 0&quot;&#10;        },&#10;        &quot;password&quot;: {&#10;          &quot;.validate&quot;: &quot;newData.isString() &amp;&amp; newData.val().length &gt;= 6&quot;&#10;        }&#10;      }&#10;    }&#10;  }&#10;}&#10;```&#10;&#10;#### Firestore Security Rules&#10;```javascript&#10;rules_version = '2';&#10;service cloud.firestore {&#10;  match /databases/{database}/documents {&#10;    // Allow read access to all cities and attractions&#10;    match /cities/{city}/attractions/{attraction} {&#10;      allow read: if true;&#10;      allow write: if true; // Temporary for development&#10;    }&#10;  }&#10;}&#10;```&#10;&#10;## Data Management&#10;&#10;### 1. Adding Sample Data&#10;&#10;#### Using Firebase Console&#10;1. Navigate to Firestore Database&#10;2. Start collection: `cities`&#10;3. Document ID: City name (e.g., &quot;Colombo&quot;)&#10;4. Add subcollection: `attractions`&#10;5. Add attraction documents with required fields&#10;&#10;#### Using Android Code&#10;```java&#10;FirebaseFirestore db = FirebaseFirestore.getInstance();&#10;&#10;Map&lt;String, Object&gt; attraction = new HashMap&lt;&gt;();&#10;attraction.put(&quot;name&quot;, &quot;Galle Fort&quot;);&#10;attraction.put(&quot;category&quot;, &quot;Historical Site&quot;);&#10;attraction.put(&quot;description&quot;, &quot;Historic fortress built by Portuguese...&quot;);&#10;attraction.put(&quot;contributorName&quot;, &quot;Admin&quot;);&#10;attraction.put(&quot;contributedAt&quot;, System.currentTimeMillis());&#10;&#10;db.collection(&quot;cities&quot;)&#10;  .document(&quot;Galle&quot;)&#10;  .collection(&quot;attractions&quot;)&#10;  .add(attraction);&#10;```&#10;&#10;### 2. Data Validation&#10;&#10;#### Client-side Validation&#10;```java&#10;public boolean validateAttraction(Attraction attraction) {&#10;    return attraction.getName() != null &amp;&amp; !attraction.getName().isEmpty() &amp;&amp;&#10;           attraction.getCategory() != null &amp;&amp; !attraction.getCategory().isEmpty() &amp;&amp;&#10;           attraction.getDescription() != null &amp;&amp; attraction.getDescription().length() &gt;= 50 &amp;&amp;&#10;           attraction.getImages() != null &amp;&amp; !attraction.getImages().isEmpty();&#10;}&#10;```&#10;&#10;#### Server-side Validation (Cloud Functions)&#10;```javascript&#10;exports.validateAttraction = functions.firestore&#10;    .document('cities/{cityId}/attractions/{attractionId}')&#10;    .onWrite((change, context) =&gt; {&#10;        const attraction = change.after.data();&#10;        &#10;        if (!attraction.name || attraction.name.length &lt; 3) {&#10;            throw new Error('Invalid attraction name');&#10;        }&#10;        &#10;        return null;&#10;    });&#10;```&#10;&#10;## Performance Optimization&#10;&#10;### 1. Firestore Indexes&#10;Create composite indexes for common queries:&#10;```&#10;Collection: cities/{cityId}/attractions&#10;Fields: category (Ascending), contributedAt (Descending)&#10;```&#10;&#10;### 2. Data Caching&#10;```java&#10;FirebaseFirestoreSettings settings = new FirebaseFirestoreSettings.Builder()&#10;    .setPersistenceEnabled(true)&#10;    .setCacheSizeBytes(FirebaseFirestoreSettings.CACHE_SIZE_UNLIMITED)&#10;    .build();&#10;db.setFirestoreSettings(settings);&#10;```&#10;&#10;### 3. Offline Support&#10;```java&#10;db.enableNetwork().addOnCompleteListener(task -&gt; {&#10;    // Re-enable network&#10;});&#10;&#10;db.disableNetwork().addOnCompleteListener(task -&gt; {&#10;    // Disable network, use cached data&#10;});&#10;```&#10;&#10;## Monitoring &amp; Analytics&#10;&#10;### 1. Firebase Analytics&#10;```java&#10;FirebaseAnalytics analytics = FirebaseAnalytics.getInstance(this);&#10;&#10;Bundle bundle = new Bundle();&#10;bundle.putString(&quot;attraction_name&quot;, attractionName);&#10;bundle.putString(&quot;city&quot;, cityName);&#10;analytics.logEvent(&quot;attraction_viewed&quot;, bundle);&#10;```&#10;&#10;### 2. Crashlytics (Recommended)&#10;```kotlin&#10;// Add to build.gradle.kts&#10;implementation(&quot;com.google.firebase:firebase-crashlytics:18.6.0&quot;)&#10;```&#10;&#10;### 3. Performance Monitoring&#10;```kotlin&#10;implementation(&quot;com.google.firebase:firebase-perf:20.5.1&quot;)&#10;```&#10;&#10;## Testing&#10;&#10;### 1. Firebase Emulator Suite&#10;```bash&#10;# Install Firebase CLI&#10;npm install -g firebase-tools&#10;&#10;# Initialize emulators&#10;firebase init emulators&#10;&#10;# Start emulators&#10;firebase emulators:start&#10;```&#10;&#10;### 2. Test Data Setup&#10;```java&#10;// Use emulator in debug builds&#10;if (BuildConfig.DEBUG) {&#10;    FirebaseFirestore.getInstance().useEmulator(&quot;10.0.2.2&quot;, 8080);&#10;    FirebaseDatabase.getInstance().useEmulator(&quot;10.0.2.2&quot;, 9000);&#10;}&#10;```&#10;&#10;## Backup &amp; Migration&#10;&#10;### 1. Data Export&#10;```bash&#10;# Export Firestore data&#10;gcloud firestore export gs://your-bucket-name&#10;&#10;# Export Realtime Database&#10;firebase database:get / --output backup.json&#10;```&#10;&#10;### 2. Data Import&#10;```bash&#10;# Import to Firestore&#10;gcloud firestore import gs://your-bucket-name/backup-folder&#10;&#10;# Import to Realtime Database&#10;firebase database:set / backup.json&#10;```&#10;&#10;## Troubleshooting&#10;&#10;### Common Issues&#10;1. **Permission Denied**: Check security rules&#10;2. **Network Issues**: Verify internet connection&#10;3. **Quota Exceeded**: Monitor Firebase usage&#10;4. **Sync Issues**: Clear app data and re-sync&#10;&#10;### Debug Tools&#10;- Firebase Console → Usage tab&#10;- Android Studio → Firebase Assistant&#10;- Firebase CLI for local testing&#10;- Network inspection tools&#10;&#10;---&#10;*This guide provides comprehensive Firebase integration for the Hidden Sri Lanka app with proper security, performance, and maintenance considerations.*" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>