<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/build.gradle.kts" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.google.gms.google.services)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.s23010526.hiddensrilanka&quot;&#10;    compileSdk = 35&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.s23010526.hiddensrilanka&quot;&#10;        minSdk = 24&#10;        targetSdk = 34&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_1_8&#10;        targetCompatibility = JavaVersion.VERSION_1_8&#10;    }&#10;    buildFeatures {&#10;        viewBinding = true&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation(libs.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.activity)&#10;    implementation(libs.constraintlayout)&#10;&#10;    // --- Firebase Setup ---&#10;    // Firebase BoM -- Bill of Materials--&#10;    // This line manages all Firebase library versions.&#10;    implementation(platform(libs.firebase.bom))&#10;&#10;    // Versions are handled by the BoM so  dont need to  specify them here.&#10;    implementation(libs.firebase.auth)       // For  login system&#10;    implementation(libs.firebase.database)   // For login system&#10;    implementation(libs.firebase.firestore)  // For location content&#10;&#10;&#10;    implementation(libs.glide)&#10;    annotationProcessor(libs.glide.compiler)&#10;&#10;    // Google Play Servicesfor location&#10;    implementation(libs.play.services.location)&#10;&#10;&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.ext.junit)&#10;    androidTestImplementation(libs.espresso.core)&#10;}&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.google.gms.google.services)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.s23010526.hiddensrilanka&quot;&#10;    compileSdk = 35&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.s23010526.hiddensrilanka&quot;&#10;        minSdk = 24&#10;        targetSdk = 34&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_1_8&#10;        targetCompatibility = JavaVersion.VERSION_1_8&#10;    }&#10;    buildFeatures {&#10;        viewBinding = true&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation(libs.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.activity)&#10;    implementation(libs.constraintlayout)&#10;&#10;    // --- Firebase Setup ---&#10;    // Firebase BoM -- Bill of Materials--&#10;    // This line manages all Firebase library versions.&#10;    implementation(platform(libs.firebase.bom))&#10;&#10;    // Versions are handled by the BoM so  dont need to  specify them here.&#10;    implementation(libs.firebase.auth)       // For  login system&#10;    implementation(libs.firebase.database)   // For login system&#10;    implementation(libs.firebase.firestore)  // For location content&#10;    implementation(libs.firebase.storage)    // For image uploads - ADDED&#10;&#10;    implementation(libs.glide)&#10;    annotationProcessor(libs.glide.compiler)&#10;&#10;    // Google Play Services for location&#10;    implementation(libs.play.services.location)&#10;&#10;&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.ext.junit)&#10;    androidTestImplementation(libs.espresso.core)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/AboutUsActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/AboutUsActivity.java" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;&#10;public class AboutUsActivity extends BaseActivity {&#10;&#10;    @Override&#10;    protected int getLayoutResourceId() {&#10;        return R.layout.activity_about_us;&#10;    }&#10;&#10;    @Override&#10;    protected String getActivityTitle() {&#10;        return &quot;About Us&quot;;&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        &#10;        // Setup click listeners for buttons if needed&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        // You can add click listeners for buttons in the about us page&#10;        // For example, privacy policy, terms of service, contact us buttons&#10;    }&#10;&#10;    // These methods can be called from XML onClick attributes&#10;    public void privacyPolicy(View view) {&#10;        // Navigate to privacy policy or show dialog&#10;        // For now, show a coming soon message&#10;        Intent intent = new Intent(this, FetureCommingSoonActivity.class);&#10;        intent.putExtra(&quot;FEATURE_NAME&quot;, &quot;Privacy Policy&quot;);&#10;        startActivity(intent);&#10;    }&#10;&#10;    public void Terms(View view) {&#10;        // Navigate to terms of service or show dialog&#10;        Intent intent = new Intent(this, FetureCommingSoonActivity.class);&#10;        intent.putExtra(&quot;FEATURE_NAME&quot;, &quot;Terms of Service&quot;);&#10;        startActivity(intent);&#10;    }&#10;&#10;    public void Contact(View view) {&#10;        // Navigate to contact us or show dialog&#10;        Intent intent = new Intent(this, FetureCommingSoonActivity.class);&#10;        intent.putExtra(&quot;FEATURE_NAME&quot;, &quot;Contact Us&quot;);&#10;        startActivity(intent);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/AddLocationActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/AddLocationActivity.java" />
              <option name="originalContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.app.ProgressDialog;&#10;import android.os.Bundle;&#10;import android.text.TextUtils;&#10;import android.util.Log;&#10;import android.view.View;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.AutoCompleteTextView;&#10;import android.widget.EditText;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.Toast;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.google.android.material.button.MaterialButton;&#10;import com.google.android.material.textfield.TextInputLayout;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;&#10;import java.util.ArrayList;&#10;import java.util.HashMap;&#10;import java.util.List;&#10;import java.util.Map;&#10;&#10;public class AddLocationActivity extends BaseActivity {&#10;&#10;    private static final String TAG = &quot;AddLocationActivity&quot;;&#10;&#10;    // UI Components&#10;    private EditText etLocationName, etDescription, etYoutubeUrl, etContributorName, etImageUrl;&#10;    private AutoCompleteTextView etCategory, etCity, etProvince;&#10;    private ImageView ivSelectedImage;&#10;    private LinearLayout layoutImagePlaceholder;&#10;    private MaterialButton btnSubmitLocation, btnLoadUrl;&#10;    private TextInputLayout tilCity;&#10;&#10;    // Firebase&#10;    private FirebaseFirestore firestore;&#10;&#10;    // Data&#10;    private ProgressDialog progressDialog;&#10;&#10;    // Data structures for province-city mapping&#10;    private Map&lt;String, String[]&gt; provinceCityMap;&#10;&#10;    @Override&#10;    protected int getLayoutResourceId() {&#10;        return R.layout.activity_add_location;&#10;    }&#10;&#10;    @Override&#10;    protected String getActivityTitle() {&#10;        return &quot;Add New Location&quot;;&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        initializeViews();&#10;        initializeFirebase();&#10;        initializeProvinceCityMapping();&#10;        setupDropdowns();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initializeViews() {&#10;        etLocationName = findViewById(R.id.et_location_name);&#10;        etDescription = findViewById(R.id.et_description);&#10;        etYoutubeUrl = findViewById(R.id.et_youtube_url);&#10;        etContributorName = findViewById(R.id.et_contributor_name);&#10;        etImageUrl = findViewById(R.id.et_image_url);&#10;        etCategory = findViewById(R.id.et_category);&#10;        etCity = findViewById(R.id.et_city);&#10;        etProvince = findViewById(R.id.et_province);&#10;        ivSelectedImage = findViewById(R.id.iv_selected_image);&#10;        layoutImagePlaceholder = findViewById(R.id.layout_image_placeholder);&#10;        btnSubmitLocation = findViewById(R.id.btn_submit_location);&#10;        btnLoadUrl = findViewById(R.id.btn_load_url);&#10;        tilCity = findViewById(R.id.til_city);&#10;&#10;        progressDialog = new ProgressDialog(this);&#10;        progressDialog.setMessage(&quot;Submitting location...&quot;);&#10;        progressDialog.setCancelable(false);&#10;    }&#10;&#10;    private void initializeFirebase() {&#10;        firestore = FirebaseFirestore.getInstance();&#10;        Log.d(TAG, &quot;Firestore initialized&quot;);&#10;    }&#10;&#10;    private void initializeProvinceCityMapping() {&#10;        // Initialize province-city mapping&#10;        provinceCityMap = new HashMap&lt;&gt;();&#10;        provinceCityMap.put(&quot;Western Province&quot;, new String[]{&#10;            &quot;Colombo&quot;, &quot;Gampaha&quot;, &quot;Kalutara&quot;, &quot;Negombo&quot;, &quot;Panadura&quot;, &quot;Moratuwa&quot;,&#10;            &quot;Sri Jayawardenepura Kotte&quot;, &quot;Dehiwala&quot;, &quot;Mount Lavinia&quot;, &quot;Kelaniya&quot;,&#10;            &quot;Ja-Ela&quot;, &quot;Wattala&quot;, &quot;Peliyagoda&quot;, &quot;Ragama&quot;, &quot;Kaduwela&quot;, &quot;Maharagama&quot;,&#10;            &quot;Kotte&quot;, &quot;Battaramulla&quot;, &quot;Homagama&quot;, &quot;Padukka&quot;, &quot;Hanwella&quot;, &quot;Avissawella&quot;,&#10;            &quot;Beruwala&quot;, &quot;Bentota&quot;, &quot;Aluthgama&quot;, &quot;Wadduwa&quot;, &quot;Payagala&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Central Province&quot;, new String[]{&#10;            &quot;Kandy&quot;, &quot;Matale&quot;, &quot;Nuwara Eliya&quot;, &quot;Gampola&quot;, &quot;Nawalapitiya&quot;, &quot;Hatton&quot;,&#10;            &quot;Talawakelle&quot;, &quot;Nanu Oya&quot;, &quot;Haputale&quot;, &quot;Bandarawela&quot;, &quot;Ella&quot;, &quot;Welimada&quot;,&#10;            &quot;Badulla&quot;, &quot;Passara&quot;, &quot;Mahiyanganaya&quot;, &quot;Diyatalawa&quot;, &quot;Pussellawa&quot;,&#10;            &quot;Ramboda&quot;, &quot;Maskeliya&quot;, &quot;Norton Bridge&quot;, &quot;Watawala&quot;, &quot;Dikoya&quot;, &quot;Bogawantalawa&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Southern Province&quot;, new String[]{&#10;            &quot;Galle&quot;, &quot;Matara&quot;, &quot;Hambantota&quot;, &quot;Tangalle&quot;, &quot;Mirissa&quot;, &quot;Weligama&quot;,&#10;            &quot;Dikwella&quot;, &quot;Tissamaharama&quot;, &quot;Kataragama&quot;, &quot;Embilipitiya&quot;, &quot;Suriyawewa&quot;,&#10;            &quot;Ambalantota&quot;, &quot;Beliatta&quot;, &quot;Deniyaya&quot;, &quot;Akuressa&quot;, &quot;Kamburupitiya&quot;,&#10;            &quot;Kirinda&quot;, &quot;Yala&quot;, &quot;Bundala&quot;, &quot;Unawatuna&quot;, &quot;Hikkaduwa&quot;, &quot;Bentota&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Northern Province&quot;, new String[]{&#10;            &quot;Jaffna&quot;, &quot;Vavuniya&quot;, &quot;Mannar&quot;, &quot;Kilinochchi&quot;, &quot;Mullaittivu&quot;, &quot;Point Pedro&quot;,&#10;            &quot;Chavakachcheri&quot;, &quot;Valvettithurai&quot;, &quot;Kayts&quot;, &quot;Karainagar&quot;, &quot;Nallur&quot;,&#10;            &quot;Kondavil&quot;, &quot;Tellippalai&quot;, &quot;Kopay&quot;, &quot;Udupiddy&quot;, &quot;Elephant Pass&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Eastern Province&quot;, new String[]{&#10;            &quot;Trincomalee&quot;, &quot;Batticaloa&quot;, &quot;Ampara&quot;, &quot;Kalmunai&quot;, &quot;Akkaraipattu&quot;,&#10;            &quot;Sammanthurai&quot;, &quot;Kattankudy&quot;, &quot;Eravur&quot;, &quot;Valaichchenai&quot;, &quot;Pasikudah&quot;,&#10;            &quot;Kalkudah&quot;, &quot;Arugam Bay&quot;, &quot;Pottuvil&quot;, &quot;Lahugala&quot;, &quot;Siyambalanduwa&quot;,&#10;            &quot;Uhana&quot;, &quot;Maha Oya&quot;, &quot;Nintavur&quot;, &quot;Addalachchenai&quot;, &quot;Chenkalady&quot;&#10;        });&#10;        provinceCityMap.put(&quot;North Western Province&quot;, new String[]{&#10;            &quot;Kurunegala&quot;, &quot;Puttalam&quot;, &quot;Chilaw&quot;, &quot;Wariyapola&quot;, &quot;Mawathagama&quot;,&#10;            &quot;Kuliyapitiya&quot;, &quot;Narammala&quot;, &quot;Pannala&quot;, &quot;Alawwa&quot;, &quot;Bingiriya&quot;,&#10;            &quot;Nikaweratiya&quot;, &quot;Giriulla&quot;, &quot;Polgahawela&quot;, &quot;Kegalle&quot;, &quot;Mawanella&quot;,&#10;            &quot;Warakapola&quot;, &quot;Ruwanwella&quot;, &quot;Yatiyantota&quot;, &quot;Deraniyagala&quot;, &quot;Kitulgala&quot;&#10;        });&#10;        provinceCityMap.put(&quot;North Central Province&quot;, new String[]{&#10;            &quot;Anuradhapura&quot;, &quot;Polonnaruwa&quot;, &quot;Dambulla&quot;, &quot;Sigiriya&quot;, &quot;Habarana&quot;,&#10;            &quot;Mihintale&quot;, &quot;Kekirawa&quot;, &quot;Tambuttegama&quot;, &quot;Galenbindunuwewa&quot;, &quot;Eppawala&quot;,&#10;            &quot;Medawachchiya&quot;, &quot;Rambewa&quot;, &quot;Thambuttegama&quot;, &quot;Galnewa&quot;, &quot;Palagala&quot;,&#10;            &quot;Hingurakgoda&quot;, &quot;Minneriya&quot;, &quot;Medirigiriya&quot;, &quot;Welikanda&quot;, &quot;Dimbulagala&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Uva Province&quot;, new String[]{&#10;            &quot;Badulla&quot;, &quot;Monaragala&quot;, &quot;Bandarawela&quot;, &quot;Ella&quot;, &quot;Haputale&quot;, &quot;Welimada&quot;,&#10;            &quot;Passara&quot;, &quot;Mahiyanganaya&quot;, &quot;Diyatalawa&quot;, &quot;Hali Ela&quot;, &quot;Demodara&quot;,&#10;            &quot;Namunukula&quot;, &quot;Uva Paranagama&quot;, &quot;Kandaketiya&quot;, &quot;Haldummulla&quot;, &quot;Hapugastenna&quot;,&#10;            &quot;Soranathota&quot;, &quot;Meegahakiula&quot;, &quot;Buttala&quot;, &quot;Wellawaya&quot;, &quot;Thanamalwila&quot;,&#10;            &quot;Kataragama&quot;, &quot;Siyambalanduwa&quot;, &quot;Madulla&quot;, &quot;Bibile&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Sabaragamuwa Province&quot;, new String[]{&#10;            &quot;Ratnapura&quot;, &quot;Kegalle&quot;, &quot;Embilipitiya&quot;, &quot;Balangoda&quot;, &quot;Kahawatta&quot;,&#10;            &quot;Pelmadulla&quot;, &quot;Eheliyagoda&quot;, &quot;Kuruwita&quot;, &quot;Godakawela&quot;, &quot;Rakwana&quot;,&#10;            &quot;Nivitigala&quot;, &quot;Kalawana&quot;, &quot;Kolonne&quot;, &quot;Weligepola&quot;, &quot;Ayagama&quot;,&#10;            &quot;Imbulpe&quot;, &quot;Lellopitiya&quot;, &quot;Opanayaka&quot;, &quot;Palmadulla&quot;, &quot;Suriyawewa&quot;&#10;        });&#10;    }&#10;&#10;    private void setupDropdowns() {&#10;        // Categories dropdown&#10;        String[] categories = {&#10;            &quot;Historical Site&quot;, &quot;WaterFall&quot;, &quot;Beach&quot;, &quot;Mountain&quot;, &quot;Temple&quot;,&#10;            &quot;National Park&quot;, &quot;Cave&quot;, &quot;Lake&quot;, &quot;Village&quot;, &quot;Cultural Site&quot;, &quot;More&quot;&#10;        };&#10;        ArrayAdapter&lt;String&gt; categoryAdapter = new ArrayAdapter&lt;&gt;(this,&#10;            android.R.layout.simple_dropdown_item_1line, categories);&#10;        etCategory.setAdapter(categoryAdapter);&#10;&#10;        // All Sri Lankan cities (comprehensive list)&#10;        List&lt;String&gt; allCities = new ArrayList&lt;&gt;();&#10;        for (String[] cities : provinceCityMap.values()) {&#10;            for (String city : cities) {&#10;                if (!allCities.contains(city)) {&#10;                    allCities.add(city);&#10;                }&#10;            }&#10;        }&#10;        allCities.sort(String::compareToIgnoreCase);&#10;&#10;        ArrayAdapter&lt;String&gt; cityAdapter = new ArrayAdapter&lt;&gt;(this,&#10;            android.R.layout.simple_dropdown_item_1line, allCities);&#10;        etCity.setAdapter(cityAdapter);&#10;        etCity.setEnabled(true);&#10;&#10;        // Provinces dropdown&#10;        String[] provinces = {&#10;            &quot;Western Province&quot;, &quot;Central Province&quot;, &quot;Southern Province&quot;, &quot;Northern Province&quot;,&#10;            &quot;Eastern Province&quot;, &quot;North Western Province&quot;, &quot;North Central Province&quot;, &quot;Uva Province&quot;,&#10;            &quot;Sabaragamuwa Province&quot;&#10;        };&#10;        ArrayAdapter&lt;String&gt; provinceAdapter = new ArrayAdapter&lt;&gt;(this,&#10;            android.R.layout.simple_dropdown_item_1line, provinces);&#10;        etProvince.setAdapter(provinceAdapter);&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnSubmitLocation.setOnClickListener(v -&gt; validateAndSubmitLocation());&#10;        btnLoadUrl.setOnClickListener(v -&gt; loadImageFromUrl());&#10;&#10;        // Province selection listener - optional filtering&#10;        etProvince.setOnItemClickListener((parent, view, position, id) -&gt; {&#10;            String selectedProvince = parent.getItemAtPosition(position).toString();&#10;            updateCityDropdown(selectedProvince);&#10;        });&#10;    }&#10;&#10;    private void updateCityDropdown(String selectedProvince) {&#10;        String[] cities = provinceCityMap.get(selectedProvince);&#10;        if (cities != null) {&#10;            ArrayAdapter&lt;String&gt; cityAdapter = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_dropdown_item_1line, cities);&#10;            etCity.setAdapter(cityAdapter);&#10;            etCity.setText(&quot;&quot;);&#10;&#10;            tilCity.setHint(&quot;Select City from &quot; + selectedProvince);&#10;            Toast.makeText(this, &quot;Cities filtered for &quot; + selectedProvince, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    private void loadImageFromUrl() {&#10;        String url = etImageUrl.getText().toString().trim();&#10;&#10;        if (TextUtils.isEmpty(url)) {&#10;            etImageUrl.setError(&quot;Please enter an image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (!isValidUrl(url)) {&#10;            etImageUrl.setError(&quot;Please enter a valid image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        loadAndDisplayImage(url);&#10;    }&#10;&#10;    private boolean isValidUrl(String url) {&#10;        return url.startsWith(&quot;http://&quot;) || url.startsWith(&quot;https://&quot;);&#10;    }&#10;&#10;    private void loadAndDisplayImage(String url) {&#10;        progressDialog.setMessage(&quot;Loading image...&quot;);&#10;        progressDialog.show();&#10;&#10;        Glide.with(this)&#10;            .load(url)&#10;            .into(ivSelectedImage);&#10;&#10;        layoutImagePlaceholder.setVisibility(View.GONE);&#10;        ivSelectedImage.setVisibility(View.VISIBLE);&#10;&#10;        progressDialog.dismiss();&#10;        Toast.makeText(this, &quot;Image loaded successfully&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;&#10;    private void validateAndSubmitLocation() {&#10;        String locationName = etLocationName.getText().toString().trim();&#10;        String description = etDescription.getText().toString().trim();&#10;        String category = etCategory.getText().toString().trim();&#10;        String city = etCity.getText().toString().trim();&#10;        String contributorName = etContributorName.getText().toString().trim();&#10;        String youtubeUrl = etYoutubeUrl.getText().toString().trim();&#10;        String province = etProvince.getText().toString().trim();&#10;&#10;        // Validation&#10;        if (TextUtils.isEmpty(locationName)) {&#10;            etLocationName.setError(&quot;Location name is required&quot;);&#10;            etLocationName.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(description)) {&#10;            etDescription.setError(&quot;Description is required&quot;);&#10;            etDescription.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(category)) {&#10;            etCategory.setError(&quot;Category is required&quot;);&#10;            etCategory.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(city)) {&#10;            etCity.setError(&quot;City is required&quot;);&#10;            etCity.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(contributorName)) {&#10;            etContributorName.setError(&quot;Your name is required&quot;);&#10;            etContributorName.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(province)) {&#10;            etProvince.setError(&quot;Province is required&quot;);&#10;            etProvince.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Check if image URL is provided&#10;        String providedImageUrl = etImageUrl.getText().toString().trim();&#10;        if (TextUtils.isEmpty(providedImageUrl)) {&#10;            etImageUrl.setError(&quot;Please provide an image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Validate image URL&#10;        if (!isValidUrl(providedImageUrl)) {&#10;            etImageUrl.setError(&quot;Please enter a valid image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Validate YouTube URL if provided&#10;        if (!TextUtils.isEmpty(youtubeUrl) &amp;&amp; !isValidYouTubeUrl(youtubeUrl)) {&#10;            etYoutubeUrl.setError(&quot;Please enter a valid YouTube URL&quot;);&#10;            etYoutubeUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // All validations passed, submit the location&#10;        submitLocation(locationName, description, category, city, contributorName, youtubeUrl, province, providedImageUrl);&#10;    }&#10;&#10;    private boolean isValidYouTubeUrl(String url) {&#10;        return url.contains(&quot;youtube.com/watch?v=&quot;) || url.contains(&quot;youtu.be/&quot;);&#10;    }&#10;&#10;    private void submitLocation(String locationName, String description, String category,&#10;                              String city, String contributorName, String youtubeUrl, String province, String imageUrl) {&#10;        progressDialog.show();&#10;&#10;        saveLocationToFirestore(locationName, description, category, city,&#10;                              contributorName, youtubeUrl, imageUrl, province);&#10;    }&#10;&#10;    private void saveLocationToFirestore(String locationName, String description, String category,&#10;                                       String city, String contributorName, String youtubeUrl,&#10;                                       String finalImageUrl, String province) {&#10;&#10;        // Create location data map&#10;        Map&lt;String, Object&gt; locationData = new HashMap&lt;&gt;();&#10;        locationData.put(&quot;name&quot;, locationName);&#10;        locationData.put(&quot;description&quot;, description);&#10;        locationData.put(&quot;category&quot;, category);&#10;        locationData.put(&quot;city&quot;, city);&#10;        locationData.put(&quot;province&quot;, province);&#10;        locationData.put(&quot;contributorName&quot;, contributorName);&#10;        locationData.put(&quot;contributedAt&quot;, System.currentTimeMillis());&#10;        locationData.put(&quot;youtubeUrl&quot;, youtubeUrl.isEmpty() ? &quot;&quot; : youtubeUrl);&#10;&#10;        // Create images list with the provided URL&#10;        List&lt;String&gt; images = new ArrayList&lt;&gt;();&#10;        images.add(finalImageUrl);&#10;        locationData.put(&quot;images&quot;, images);&#10;&#10;        // Save to Firestore under cities/{city}/attractions collection&#10;        firestore.collection(&quot;cities&quot;)&#10;                .document(city)&#10;                .collection(&quot;attractions&quot;)&#10;                .add(locationData)&#10;                .addOnSuccessListener(documentReference -&gt; {&#10;                    progressDialog.dismiss();&#10;                    Log.d(TAG, &quot;Location added successfully with ID: &quot; + documentReference.getId());&#10;&#10;                    Toast.makeText(this, &quot;Location added successfully! Thank you for your contribution.&quot;,&#10;                                 Toast.LENGTH_LONG).show();&#10;&#10;                    // Clear form after successful submission&#10;                    clearForm();&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    progressDialog.dismiss();&#10;                    Log.e(TAG, &quot;Error adding location: &quot; + e.getMessage());&#10;&#10;                    String errorMessage = &quot;Failed to add location&quot;;&#10;                    if (e.getMessage() != null) {&#10;                        if (e.getMessage().contains(&quot;PERMISSION_DENIED&quot;)) {&#10;                            errorMessage = &quot;Permission denied. Please check Firestore security rules.&quot;;&#10;                        } else if (e.getMessage().contains(&quot;Network&quot;)) {&#10;                            errorMessage = &quot;Network error. Please check your internet connection.&quot;;&#10;                        } else {&#10;                            errorMessage = &quot;Error: &quot; + e.getMessage();&#10;                        }&#10;                    }&#10;&#10;                    Toast.makeText(this, errorMessage, Toast.LENGTH_LONG).show();&#10;                });&#10;    }&#10;&#10;    private void clearForm() {&#10;        etLocationName.setText(&quot;&quot;);&#10;        etDescription.setText(&quot;&quot;);&#10;        etCategory.setText(&quot;&quot;);&#10;        etCity.setText(&quot;&quot;);&#10;        etProvince.setText(&quot;&quot;);&#10;        etContributorName.setText(&quot;&quot;);&#10;        etYoutubeUrl.setText(&quot;&quot;);&#10;        etImageUrl.setText(&quot;&quot;);&#10;&#10;        ivSelectedImage.setVisibility(View.GONE);&#10;        layoutImagePlaceholder.setVisibility(View.VISIBLE);&#10;&#10;        tilCity.setHint(&quot;City *&quot;);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.os.Bundle;&#10;import android.text.TextUtils;&#10;import android.util.Log;&#10;import android.view.View;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.AutoCompleteTextView;&#10;import android.widget.EditText;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.Toast;&#10;import android.widget.ProgressBar;&#10;&#10;import com.bumptech.glide.Glide;&#10;import com.google.android.material.button.MaterialButton;&#10;import com.google.android.material.textfield.TextInputLayout;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;&#10;import java.util.ArrayList;&#10;import java.util.HashMap;&#10;import java.util.List;&#10;import java.util.Map;&#10;&#10;public class AddLocationActivity extends BaseActivity {&#10;&#10;    private static final String TAG = &quot;AddLocationActivity&quot;;&#10;&#10;    // UI Components&#10;    private EditText etLocationName, etDescription, etYoutubeUrl, etContributorName, etImageUrl;&#10;    private AutoCompleteTextView etCategory, etCity, etProvince;&#10;    private ImageView ivSelectedImage;&#10;    private LinearLayout layoutImagePlaceholder;&#10;    private MaterialButton btnSubmitLocation, btnLoadUrl;&#10;    private TextInputLayout tilCity;&#10;    private ProgressBar progressBar; // Replace ProgressDialog with ProgressBar&#10;&#10;    // Firebase&#10;    private FirebaseFirestore firestore;&#10;&#10;    // Data structures for province-city mapping&#10;    private Map&lt;String, String[]&gt; provinceCityMap;&#10;&#10;    @Override&#10;    protected int getLayoutResourceId() {&#10;        return R.layout.activity_add_location;&#10;    }&#10;&#10;    @Override&#10;    protected String getActivityTitle() {&#10;        return &quot;Add New Location&quot;;&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        initializeViews();&#10;        initializeFirebase();&#10;        initializeProvinceCityMapping();&#10;        setupDropdowns();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initializeViews() {&#10;        etLocationName = findViewById(R.id.et_location_name);&#10;        etDescription = findViewById(R.id.et_description);&#10;        etYoutubeUrl = findViewById(R.id.et_youtube_url);&#10;        etContributorName = findViewById(R.id.et_contributor_name);&#10;        etImageUrl = findViewById(R.id.et_image_url);&#10;        etCategory = findViewById(R.id.et_category);&#10;        etCity = findViewById(R.id.et_city);&#10;        etProvince = findViewById(R.id.et_province);&#10;        ivSelectedImage = findViewById(R.id.iv_selected_image);&#10;        layoutImagePlaceholder = findViewById(R.id.layout_image_placeholder);&#10;        btnSubmitLocation = findViewById(R.id.btn_submit_location);&#10;        btnLoadUrl = findViewById(R.id.btn_load_url);&#10;        tilCity = findViewById(R.id.til_city);&#10;        &#10;        // Reference ProgressBar from layout&#10;        progressBar = findViewById(R.id.progress_bar);&#10;    }&#10;&#10;    private void initializeFirebase() {&#10;        firestore = FirebaseFirestore.getInstance();&#10;        Log.d(TAG, &quot;Firestore initialized&quot;);&#10;    }&#10;&#10;    private void initializeProvinceCityMapping() {&#10;        // Initialize province-city mapping&#10;        provinceCityMap = new HashMap&lt;&gt;();&#10;        provinceCityMap.put(&quot;Western Province&quot;, new String[]{&#10;            &quot;Colombo&quot;, &quot;Gampaha&quot;, &quot;Kalutara&quot;, &quot;Negombo&quot;, &quot;Panadura&quot;, &quot;Moratuwa&quot;,&#10;            &quot;Sri Jayawardenepura Kotte&quot;, &quot;Dehiwala&quot;, &quot;Mount Lavinia&quot;, &quot;Kelaniya&quot;,&#10;            &quot;Ja-Ela&quot;, &quot;Wattala&quot;, &quot;Peliyagoda&quot;, &quot;Ragama&quot;, &quot;Kaduwela&quot;, &quot;Maharagama&quot;,&#10;            &quot;Kotte&quot;, &quot;Battaramulla&quot;, &quot;Homagama&quot;, &quot;Padukka&quot;, &quot;Hanwella&quot;, &quot;Avissawella&quot;,&#10;            &quot;Beruwala&quot;, &quot;Bentota&quot;, &quot;Aluthgama&quot;, &quot;Wadduwa&quot;, &quot;Payagala&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Central Province&quot;, new String[]{&#10;            &quot;Kandy&quot;, &quot;Matale&quot;, &quot;Nuwara Eliya&quot;, &quot;Gampola&quot;, &quot;Nawalapitiya&quot;, &quot;Hatton&quot;,&#10;            &quot;Talawakelle&quot;, &quot;Nanu Oya&quot;, &quot;Haputale&quot;, &quot;Bandarawela&quot;, &quot;Ella&quot;, &quot;Welimada&quot;,&#10;            &quot;Badulla&quot;, &quot;Passara&quot;, &quot;Mahiyanganaya&quot;, &quot;Diyatalawa&quot;, &quot;Pussellawa&quot;,&#10;            &quot;Ramboda&quot;, &quot;Maskeliya&quot;, &quot;Norton Bridge&quot;, &quot;Watawala&quot;, &quot;Dikoya&quot;, &quot;Bogawantalawa&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Southern Province&quot;, new String[]{&#10;            &quot;Galle&quot;, &quot;Matara&quot;, &quot;Hambantota&quot;, &quot;Tangalle&quot;, &quot;Mirissa&quot;, &quot;Weligama&quot;,&#10;            &quot;Dikwella&quot;, &quot;Tissamaharama&quot;, &quot;Kataragama&quot;, &quot;Embilipitiya&quot;, &quot;Suriyawewa&quot;,&#10;            &quot;Ambalantota&quot;, &quot;Beliatta&quot;, &quot;Deniyaya&quot;, &quot;Akuressa&quot;, &quot;Kamburupitiya&quot;,&#10;            &quot;Kirinda&quot;, &quot;Yala&quot;, &quot;Bundala&quot;, &quot;Unawatuna&quot;, &quot;Hikkaduwa&quot;, &quot;Bentota&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Northern Province&quot;, new String[]{&#10;            &quot;Jaffna&quot;, &quot;Vavuniya&quot;, &quot;Mannar&quot;, &quot;Kilinochchi&quot;, &quot;Mullaittivu&quot;, &quot;Point Pedro&quot;,&#10;            &quot;Chavakachcheri&quot;, &quot;Valvettithurai&quot;, &quot;Kayts&quot;, &quot;Karainagar&quot;, &quot;Nallur&quot;,&#10;            &quot;Kondavil&quot;, &quot;Tellippalai&quot;, &quot;Kopay&quot;, &quot;Udupiddy&quot;, &quot;Elephant Pass&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Eastern Province&quot;, new String[]{&#10;            &quot;Trincomalee&quot;, &quot;Batticaloa&quot;, &quot;Ampara&quot;, &quot;Kalmunai&quot;, &quot;Akkaraipattu&quot;,&#10;            &quot;Sammanthurai&quot;, &quot;Kattankudy&quot;, &quot;Eravur&quot;, &quot;Valaichchenai&quot;, &quot;Pasikudah&quot;,&#10;            &quot;Kalkudah&quot;, &quot;Arugam Bay&quot;, &quot;Pottuvil&quot;, &quot;Lahugala&quot;, &quot;Siyambalanduwa&quot;,&#10;            &quot;Uhana&quot;, &quot;Maha Oya&quot;, &quot;Nintavur&quot;, &quot;Addalachchenai&quot;, &quot;Chenkalady&quot;&#10;        });&#10;        provinceCityMap.put(&quot;North Western Province&quot;, new String[]{&#10;            &quot;Kurunegala&quot;, &quot;Puttalam&quot;, &quot;Chilaw&quot;, &quot;Wariyapola&quot;, &quot;Mawathagama&quot;,&#10;            &quot;Kuliyapitiya&quot;, &quot;Narammala&quot;, &quot;Pannala&quot;, &quot;Alawwa&quot;, &quot;Bingiriya&quot;,&#10;            &quot;Nikaweratiya&quot;, &quot;Giriulla&quot;, &quot;Polgahawela&quot;, &quot;Kegalle&quot;, &quot;Mawanella&quot;,&#10;            &quot;Warakapola&quot;, &quot;Ruwanwella&quot;, &quot;Yatiyantota&quot;, &quot;Deraniyagala&quot;, &quot;Kitulgala&quot;&#10;        });&#10;        provinceCityMap.put(&quot;North Central Province&quot;, new String[]{&#10;            &quot;Anuradhapura&quot;, &quot;Polonnaruwa&quot;, &quot;Dambulla&quot;, &quot;Sigiriya&quot;, &quot;Habarana&quot;,&#10;            &quot;Mihintale&quot;, &quot;Kekirawa&quot;, &quot;Tambuttegama&quot;, &quot;Galenbindunuwewa&quot;, &quot;Eppawala&quot;,&#10;            &quot;Medawachchiya&quot;, &quot;Rambewa&quot;, &quot;Thambuttegama&quot;, &quot;Galnewa&quot;, &quot;Palagala&quot;,&#10;            &quot;Hingurakgoda&quot;, &quot;Minneriya&quot;, &quot;Medirigiriya&quot;, &quot;Welikanda&quot;, &quot;Dimbulagala&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Uva Province&quot;, new String[]{&#10;            &quot;Badulla&quot;, &quot;Monaragala&quot;, &quot;Bandarawela&quot;, &quot;Ella&quot;, &quot;Haputale&quot;, &quot;Welimada&quot;,&#10;            &quot;Passara&quot;, &quot;Mahiyanganaya&quot;, &quot;Diyatalawa&quot;, &quot;Hali Ela&quot;, &quot;Demodara&quot;,&#10;            &quot;Namunukula&quot;, &quot;Uva Paranagama&quot;, &quot;Kandaketiya&quot;, &quot;Haldummulla&quot;, &quot;Hapugastenna&quot;,&#10;            &quot;Soranathota&quot;, &quot;Meegahakiula&quot;, &quot;Buttala&quot;, &quot;Wellawaya&quot;, &quot;Thanamalwila&quot;,&#10;            &quot;Kataragama&quot;, &quot;Siyambalanduwa&quot;, &quot;Madulla&quot;, &quot;Bibile&quot;&#10;        });&#10;        provinceCityMap.put(&quot;Sabaragamuwa Province&quot;, new String[]{&#10;            &quot;Ratnapura&quot;, &quot;Kegalle&quot;, &quot;Embilipitiya&quot;, &quot;Balangoda&quot;, &quot;Kahawatta&quot;,&#10;            &quot;Pelmadulla&quot;, &quot;Eheliyagoda&quot;, &quot;Kuruwita&quot;, &quot;Godakawela&quot;, &quot;Rakwana&quot;,&#10;            &quot;Nivitigala&quot;, &quot;Kalawana&quot;, &quot;Kolonne&quot;, &quot;Weligepola&quot;, &quot;Ayagama&quot;,&#10;            &quot;Imbulpe&quot;, &quot;Lellopitiya&quot;, &quot;Opanayaka&quot;, &quot;Palmadulla&quot;, &quot;Suriyawewa&quot;&#10;        });&#10;    }&#10;&#10;    private void setupDropdowns() {&#10;        // Categories dropdown&#10;        String[] categories = {&#10;            &quot;Historical Site&quot;, &quot;WaterFall&quot;, &quot;Beach&quot;, &quot;Mountain&quot;, &quot;Temple&quot;,&#10;            &quot;National Park&quot;, &quot;Cave&quot;, &quot;Lake&quot;, &quot;Village&quot;, &quot;Cultural Site&quot;, &quot;More&quot;&#10;        };&#10;        ArrayAdapter&lt;String&gt; categoryAdapter = new ArrayAdapter&lt;&gt;(this,&#10;            android.R.layout.simple_dropdown_item_1line, categories);&#10;        etCategory.setAdapter(categoryAdapter);&#10;&#10;        // All Sri Lankan cities (comprehensive list)&#10;        List&lt;String&gt; allCities = new ArrayList&lt;&gt;();&#10;        for (String[] cities : provinceCityMap.values()) {&#10;            for (String city : cities) {&#10;                if (!allCities.contains(city)) {&#10;                    allCities.add(city);&#10;                }&#10;            }&#10;        }&#10;        allCities.sort(String::compareToIgnoreCase);&#10;&#10;        ArrayAdapter&lt;String&gt; cityAdapter = new ArrayAdapter&lt;&gt;(this,&#10;            android.R.layout.simple_dropdown_item_1line, allCities);&#10;        etCity.setAdapter(cityAdapter);&#10;        etCity.setEnabled(true);&#10;&#10;        // Provinces dropdown&#10;        String[] provinces = {&#10;            &quot;Western Province&quot;, &quot;Central Province&quot;, &quot;Southern Province&quot;, &quot;Northern Province&quot;,&#10;            &quot;Eastern Province&quot;, &quot;North Western Province&quot;, &quot;North Central Province&quot;, &quot;Uva Province&quot;,&#10;            &quot;Sabaragamuwa Province&quot;&#10;        };&#10;        ArrayAdapter&lt;String&gt; provinceAdapter = new ArrayAdapter&lt;&gt;(this,&#10;            android.R.layout.simple_dropdown_item_1line, provinces);&#10;        etProvince.setAdapter(provinceAdapter);&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnSubmitLocation.setOnClickListener(v -&gt; validateAndSubmitLocation());&#10;        btnLoadUrl.setOnClickListener(v -&gt; loadImageFromUrl());&#10;&#10;        // Province selection listener - optional filtering&#10;        etProvince.setOnItemClickListener((parent, view, position, id) -&gt; {&#10;            String selectedProvince = parent.getItemAtPosition(position).toString();&#10;            updateCityDropdown(selectedProvince);&#10;        });&#10;    }&#10;&#10;    private void updateCityDropdown(String selectedProvince) {&#10;        String[] cities = provinceCityMap.get(selectedProvince);&#10;        if (cities != null) {&#10;            ArrayAdapter&lt;String&gt; cityAdapter = new ArrayAdapter&lt;&gt;(this,&#10;                android.R.layout.simple_dropdown_item_1line, cities);&#10;            etCity.setAdapter(cityAdapter);&#10;            etCity.setText(&quot;&quot;);&#10;&#10;            tilCity.setHint(&quot;Select City from &quot; + selectedProvince);&#10;            Toast.makeText(this, &quot;Cities filtered for &quot; + selectedProvince, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    private void loadImageFromUrl() {&#10;        String url = etImageUrl.getText().toString().trim();&#10;&#10;        if (TextUtils.isEmpty(url)) {&#10;            etImageUrl.setError(&quot;Please enter an image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (!isValidUrl(url)) {&#10;            etImageUrl.setError(&quot;Please enter a valid image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        loadAndDisplayImage(url);&#10;    }&#10;&#10;    private boolean isValidUrl(String url) {&#10;        return url.startsWith(&quot;http://&quot;) || url.startsWith(&quot;https://&quot;);&#10;    }&#10;&#10;    private void loadAndDisplayImage(String url) {&#10;        progressBar.setVisibility(View.VISIBLE);&#10;&#10;        Glide.with(this)&#10;            .load(url)&#10;            .into(ivSelectedImage);&#10;&#10;        layoutImagePlaceholder.setVisibility(View.GONE);&#10;        ivSelectedImage.setVisibility(View.VISIBLE);&#10;&#10;        progressBar.setVisibility(View.GONE);&#10;        Toast.makeText(this, &quot;Image loaded successfully&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;&#10;    private void validateAndSubmitLocation() {&#10;        String locationName = etLocationName.getText().toString().trim();&#10;        String description = etDescription.getText().toString().trim();&#10;        String category = etCategory.getText().toString().trim();&#10;        String city = etCity.getText().toString().trim();&#10;        String contributorName = etContributorName.getText().toString().trim();&#10;        String youtubeUrl = etYoutubeUrl.getText().toString().trim();&#10;        String province = etProvince.getText().toString().trim();&#10;&#10;        // Validation&#10;        if (TextUtils.isEmpty(locationName)) {&#10;            etLocationName.setError(&quot;Location name is required&quot;);&#10;            etLocationName.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(description)) {&#10;            etDescription.setError(&quot;Description is required&quot;);&#10;            etDescription.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(category)) {&#10;            etCategory.setError(&quot;Category is required&quot;);&#10;            etCategory.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(city)) {&#10;            etCity.setError(&quot;City is required&quot;);&#10;            etCity.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(contributorName)) {&#10;            etContributorName.setError(&quot;Your name is required&quot;);&#10;            etContributorName.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(province)) {&#10;            etProvince.setError(&quot;Province is required&quot;);&#10;            etProvince.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Check if image URL is provided&#10;        String providedImageUrl = etImageUrl.getText().toString().trim();&#10;        if (TextUtils.isEmpty(providedImageUrl)) {&#10;            etImageUrl.setError(&quot;Please provide an image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Validate image URL&#10;        if (!isValidUrl(providedImageUrl)) {&#10;            etImageUrl.setError(&quot;Please enter a valid image URL&quot;);&#10;            etImageUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Validate YouTube URL if provided&#10;        if (!TextUtils.isEmpty(youtubeUrl) &amp;&amp; !isValidYouTubeUrl(youtubeUrl)) {&#10;            etYoutubeUrl.setError(&quot;Please enter a valid YouTube URL&quot;);&#10;            etYoutubeUrl.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // All validations passed, submit the location&#10;        submitLocation(locationName, description, category, city, contributorName, youtubeUrl, province, providedImageUrl);&#10;    }&#10;&#10;    private boolean isValidYouTubeUrl(String url) {&#10;        return url.contains(&quot;youtube.com/watch?v=&quot;) || url.contains(&quot;youtu.be/&quot;);&#10;    }&#10;&#10;    private void submitLocation(String locationName, String description, String category,&#10;                              String city, String contributorName, String youtubeUrl, String province, String imageUrl) {&#10;        progressBar.setVisibility(View.VISIBLE);&#10;&#10;        saveLocationToFirestore(locationName, description, category, city,&#10;                              contributorName, youtubeUrl, imageUrl, province);&#10;    }&#10;&#10;    private void saveLocationToFirestore(String locationName, String description, String category,&#10;                                       String city, String contributorName, String youtubeUrl,&#10;                                       String finalImageUrl, String province) {&#10;&#10;        // Create location data map&#10;        Map&lt;String, Object&gt; locationData = new HashMap&lt;&gt;();&#10;        locationData.put(&quot;name&quot;, locationName);&#10;        locationData.put(&quot;description&quot;, description);&#10;        locationData.put(&quot;category&quot;, category);&#10;        locationData.put(&quot;city&quot;, city);&#10;        locationData.put(&quot;province&quot;, province);&#10;        locationData.put(&quot;contributorName&quot;, contributorName);&#10;        locationData.put(&quot;contributedAt&quot;, System.currentTimeMillis());&#10;        locationData.put(&quot;youtubeUrl&quot;, youtubeUrl.isEmpty() ? &quot;&quot; : youtubeUrl);&#10;&#10;        // Create images list with the provided URL&#10;        List&lt;String&gt; images = new ArrayList&lt;&gt;();&#10;        images.add(finalImageUrl);&#10;        locationData.put(&quot;images&quot;, images);&#10;&#10;        // Save to Firestore under cities/{city}/attractions collection&#10;        firestore.collection(&quot;cities&quot;)&#10;                .document(city)&#10;                .collection(&quot;attractions&quot;)&#10;                .add(locationData)&#10;                .addOnSuccessListener(documentReference -&gt; {&#10;                    progressBar.setVisibility(View.GONE);&#10;                    Log.d(TAG, &quot;Location added successfully with ID: &quot; + documentReference.getId());&#10;&#10;                    Toast.makeText(this, &quot;Location added successfully! Thank you for your contribution.&quot;,&#10;                                 Toast.LENGTH_LONG).show();&#10;&#10;                    // Clear form after successful submission&#10;                    clearForm();&#10;                })&#10;                .addOnFailureListener(e -&gt; {&#10;                    progressBar.setVisibility(View.GONE);&#10;                    Log.e(TAG, &quot;Error adding location: &quot; + e.getMessage());&#10;&#10;                    String errorMessage = &quot;Failed to add location&quot;;&#10;                    if (e.getMessage() != null) {&#10;                        if (e.getMessage().contains(&quot;PERMISSION_DENIED&quot;)) {&#10;                            errorMessage = &quot;Permission denied. Please check Firestore security rules.&quot;;&#10;                        } else if (e.getMessage().contains(&quot;Network&quot;)) {&#10;                            errorMessage = &quot;Network error. Please check your internet connection.&quot;;&#10;                        } else {&#10;                            errorMessage = &quot;Error: &quot; + e.getMessage();&#10;                        }&#10;                    }&#10;&#10;                    Toast.makeText(this, errorMessage, Toast.LENGTH_LONG).show();&#10;                });&#10;    }&#10;&#10;    private void clearForm() {&#10;        etLocationName.setText(&quot;&quot;);&#10;        etDescription.setText(&quot;&quot;);&#10;        etCategory.setText(&quot;&quot;);&#10;        etCity.setText(&quot;&quot;);&#10;        etProvince.setText(&quot;&quot;);&#10;        etContributorName.setText(&quot;&quot;);&#10;        etYoutubeUrl.setText(&quot;&quot;);&#10;        etImageUrl.setText(&quot;&quot;);&#10;&#10;        ivSelectedImage.setVisibility(View.GONE);&#10;        layoutImagePlaceholder.setVisibility(View.VISIBLE);&#10;&#10;        tilCity.setHint(&quot;City *&quot;);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/DataSeeder.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/DataSeeder.java" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.util.Log;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import java.util.ArrayList;&#10;import java.util.HashMap;&#10;import java.util.List;&#10;import java.util.Map;&#10;&#10;public class DataSeeder {&#10;    private static final String TAG = &quot;DataSeeder&quot;;&#10;    private FirebaseFirestore firestore;&#10;&#10;    public DataSeeder() {&#10;        firestore = FirebaseFirestore.getInstance();&#10;    }&#10;&#10;    public void seedSampleAttractions() {&#10;        // Sample data for Colombo&#10;        seedColomboAttractions();&#10;        &#10;        // Sample data for Kandy&#10;        seedKandyAttractions();&#10;        &#10;        // Sample data for Galle&#10;        seedGalleAttractions();&#10;    }&#10;&#10;    private void seedColomboAttractions() {&#10;        List&lt;Map&lt;String, Object&gt;&gt; colomboAttractions = new ArrayList&lt;&gt;();&#10;        &#10;        // Gangaramaya Temple&#10;        Map&lt;String, Object&gt; gangaramaya = new HashMap&lt;&gt;();&#10;        gangaramaya.put(&quot;name&quot;, &quot;Gangaramaya Temple&quot;);&#10;        gangaramaya.put(&quot;category&quot;, &quot;Temple&quot;);&#10;        gangaramaya.put(&quot;description&quot;, &quot;One of the most important temples in Colombo, known for its eclectic mix of Sri Lankan, Thai, Indian, and Chinese architecture.&quot;);&#10;        gangaramaya.put(&quot;contributorName&quot;, &quot;Data Seeder&quot;);&#10;        gangaramaya.put(&quot;contributedAt&quot;, System.currentTimeMillis());&#10;        gangaramaya.put(&quot;youtubeUrl&quot;, &quot;&quot;);&#10;        List&lt;String&gt; gangaramayaImages = new ArrayList&lt;&gt;();&#10;        gangaramayaImages.add(&quot;https://example.com/gangaramaya.jpg&quot;);&#10;        gangaramaya.put(&quot;images&quot;, gangaramayaImages);&#10;        colomboAttractions.add(gangaramaya);&#10;&#10;        // Independence Square&#10;        Map&lt;String, Object&gt; independence = new HashMap&lt;&gt;();&#10;        independence.put(&quot;name&quot;, &quot;Independence Memorial Hall&quot;);&#10;        independence.put(&quot;category&quot;, &quot;Historical Site&quot;);&#10;        independence.put(&quot;description&quot;, &quot;A national monument built to commemorate the independence of Sri Lanka from British rule.&quot;);&#10;        independence.put(&quot;contributorName&quot;, &quot;Data Seeder&quot;);&#10;        independence.put(&quot;contributedAt&quot;, System.currentTimeMillis());&#10;        independence.put(&quot;youtubeUrl&quot;, &quot;&quot;);&#10;        List&lt;String&gt; independenceImages = new ArrayList&lt;&gt;();&#10;        independenceImages.add(&quot;https://example.com/independence.jpg&quot;);&#10;        independence.put(&quot;images&quot;, independenceImages);&#10;        colomboAttractions.add(independence);&#10;&#10;        // Save to Firestore&#10;        for (Map&lt;String, Object&gt; attraction : colomboAttractions) {&#10;            firestore.collection(&quot;cities&quot;)&#10;                    .document(&quot;Colombo&quot;)&#10;                    .collection(&quot;attractions&quot;)&#10;                    .add(attraction)&#10;                    .addOnSuccessListener(documentReference -&gt; &#10;                        Log.d(TAG, &quot;Added Colombo attraction: &quot; + attraction.get(&quot;name&quot;)))&#10;                    .addOnFailureListener(e -&gt; &#10;                        Log.e(TAG, &quot;Error adding Colombo attraction&quot;, e));&#10;        }&#10;    }&#10;&#10;    private void seedKandyAttractions() {&#10;        List&lt;Map&lt;String, Object&gt;&gt; kandyAttractions = new ArrayList&lt;&gt;();&#10;        &#10;        // Temple of the Tooth&#10;        Map&lt;String, Object&gt; tooth = new HashMap&lt;&gt;();&#10;        tooth.put(&quot;name&quot;, &quot;Temple of the Sacred Tooth Relic&quot;);&#10;        tooth.put(&quot;category&quot;, &quot;Temple&quot;);&#10;        tooth.put(&quot;description&quot;, &quot;A Buddhist temple that houses the relic of the tooth of the Buddha. It's one of the most sacred places of worship for Buddhists.&quot;);&#10;        tooth.put(&quot;contributorName&quot;, &quot;Data Seeder&quot;);&#10;        tooth.put(&quot;contributedAt&quot;, System.currentTimeMillis());&#10;        tooth.put(&quot;youtubeUrl&quot;, &quot;&quot;);&#10;        List&lt;String&gt; toothImages = new ArrayList&lt;&gt;();&#10;        toothImages.add(&quot;https://example.com/tooth-temple.jpg&quot;);&#10;        tooth.put(&quot;images&quot;, toothImages);&#10;        kandyAttractions.add(tooth);&#10;&#10;        // Royal Botanical Gardens&#10;        Map&lt;String, Object&gt; botanical = new HashMap&lt;&gt;();&#10;        botanical.put(&quot;name&quot;, &quot;Royal Botanical Gardens Peradeniya&quot;);&#10;        botanical.put(&quot;category&quot;, &quot;More&quot;);&#10;        botanical.put(&quot;description&quot;, &quot;147-acre botanical garden about 5.5 km to the west of the city of Kandy, known for its collection of orchids.&quot;);&#10;        botanical.put(&quot;contributorName&quot;, &quot;Data Seeder&quot;);&#10;        botanical.put(&quot;contributedAt&quot;, System.currentTimeMillis());&#10;        botanical.put(&quot;youtubeUrl&quot;, &quot;&quot;);&#10;        List&lt;String&gt; botanicalImages = new ArrayList&lt;&gt;();&#10;        botanicalImages.add(&quot;https://example.com/botanical-gardens.jpg&quot;);&#10;        botanical.put(&quot;images&quot;, botanicalImages);&#10;        kandyAttractions.add(botanical);&#10;&#10;        // Save to Firestore&#10;        for (Map&lt;String, Object&gt; attraction : kandyAttractions) {&#10;            firestore.collection(&quot;cities&quot;)&#10;                    .document(&quot;Kandy&quot;)&#10;                    .collection(&quot;attractions&quot;)&#10;                    .add(attraction)&#10;                    .addOnSuccessListener(documentReference -&gt; &#10;                        Log.d(TAG, &quot;Added Kandy attraction: &quot; + attraction.get(&quot;name&quot;)))&#10;                    .addOnFailureListener(e -&gt; &#10;                        Log.e(TAG, &quot;Error adding Kandy attraction&quot;, e));&#10;        }&#10;    }&#10;&#10;    private void seedGalleAttractions() {&#10;        List&lt;Map&lt;String, Object&gt;&gt; galleAttractions = new ArrayList&lt;&gt;();&#10;        &#10;        // Galle Fort&#10;        Map&lt;String, Object&gt; fort = new HashMap&lt;&gt;();&#10;        fort.put(&quot;name&quot;, &quot;Galle Dutch Fort&quot;);&#10;        fort.put(&quot;category&quot;, &quot;Historical Site&quot;);&#10;        fort.put(&quot;description&quot;, &quot;A fortified city built by the Portuguese and later fortified by the Dutch, now a UNESCO World Heritage Site.&quot;);&#10;        fort.put(&quot;contributorName&quot;, &quot;Data Seeder&quot;);&#10;        fort.put(&quot;contributedAt&quot;, System.currentTimeMillis());&#10;        fort.put(&quot;youtubeUrl&quot;, &quot;&quot;);&#10;        List&lt;String&gt; fortImages = new ArrayList&lt;&gt;();&#10;        fortImages.add(&quot;https://example.com/galle-fort.jpg&quot;);&#10;        fort.put(&quot;images&quot;, fortImages);&#10;        galleAttractions.add(fort);&#10;&#10;        // Unawatuna Beach&#10;        Map&lt;String, Object&gt; unawatuna = new HashMap&lt;&gt;();&#10;        unawatuna.put(&quot;name&quot;, &quot;Unawatuna Beach&quot;);&#10;        unawatuna.put(&quot;category&quot;, &quot;Beach&quot;);&#10;        unawatuna.put(&quot;description&quot;, &quot;A beautiful crescent-shaped sandy beach, perfect for swimming and snorkeling.&quot;);&#10;        unawatuna.put(&quot;contributorName&quot;, &quot;Data Seeder&quot;);&#10;        unawatuna.put(&quot;contributedAt&quot;, System.currentTimeMillis());&#10;        unawatuna.put(&quot;youtubeUrl&quot;, &quot;&quot;);&#10;        List&lt;String&gt; unawatunaImages = new ArrayList&lt;&gt;();&#10;        unawatunaImages.add(&quot;https://example.com/unawatuna.jpg&quot;);&#10;        unawatuna.put(&quot;images&quot;, unawatunaImages);&#10;        galleAttractions.add(unawatuna);&#10;&#10;        // Save to Firestore&#10;        for (Map&lt;String, Object&gt; attraction : galleAttractions) {&#10;            firestore.collection(&quot;cities&quot;)&#10;                    .document(&quot;Galle&quot;)&#10;                    .collection(&quot;attractions&quot;)&#10;                    .add(attraction)&#10;                    .addOnSuccessListener(documentReference -&gt; &#10;                        Log.d(TAG, &quot;Added Galle attraction: &quot; + attraction.get(&quot;name&quot;)))&#10;                    .addOnFailureListener(e -&gt; &#10;                        Log.e(TAG, &quot;Error adding Galle attraction&quot;, e));&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/HomeActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/HomeActivity.java" />
              <option name="originalContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.Manifest;&#10;import android.annotation.SuppressLint;&#10;import android.content.pm.PackageManager;&#10;import android.location.Address;&#10;import android.location.Geocoder;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.View;&#10;import android.widget.EditText;&#10;import android.widget.ProgressBar;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.core.app.ActivityCompat;&#10;import androidx.core.content.ContextCompat;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.google.android.gms.location.FusedLocationProviderClient;&#10;import com.google.android.gms.location.LocationServices;&#10;import com.google.android.gms.location.Priority;&#10;import com.google.android.material.chip.Chip;&#10;import com.google.android.material.chip.ChipGroup;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.google.firebase.firestore.Query;&#10;import com.google.firebase.firestore.QueryDocumentSnapshot;&#10;&#10;import java.io.IOException;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;import java.util.Locale;&#10;&#10;public class HomeActivity extends BaseActivity {&#10;&#10;    // ---Declare all the variables we will need ---&#10;    private static final int LOCATION_PERMISSION_REQUEST_CODE = 1;&#10;    private static final String TAG = &quot;HomeActivity&quot;;&#10;&#10;    private AttractionAdapter adapter;&#10;    private List&lt;Attraction&gt; attractionList;&#10;&#10;    private ProgressBar progressBar;&#10;    private ChipGroup chipGroup;&#10;&#10;    private FirebaseFirestore firestoreDb;&#10;    private FusedLocationProviderClient fusedLocationProviderClient;&#10;    private String currentCity = null;&#10;&#10;    @Override&#10;    protected int getLayoutResourceId() {&#10;        return R.layout.activity_home;&#10;    }&#10;&#10;    @Override&#10;    protected String getActivityTitle() {&#10;        return getString(R.string.nav_home_title);&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        //Initialize everything&#10;        firestoreDb = FirebaseFirestore.getInstance();&#10;        fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(this);&#10;&#10;        progressBar = findViewById(R.id.progressBar);&#10;        chipGroup = findViewById(R.id.chip_group_filters);&#10;        RecyclerView recyclerView = findViewById(R.id.recyclerView_attractions);&#10;&#10;        attractionList = new ArrayList&lt;&gt;();&#10;        adapter = new AttractionAdapter(attractionList);&#10;        recyclerView.setLayoutManager(new LinearLayoutManager(this));&#10;        recyclerView.setAdapter(adapter);&#10;&#10;        checkLocationPermission();&#10;        setupFilterListener();&#10;        setupRefreshButton(); // Add refresh functionality&#10;    }&#10;&#10;    // Add refresh button functionality&#10;    private void setupRefreshButton() {&#10;        // Make the search functionality work for manual city override&#10;        findViewById(R.id.search_icon).setOnClickListener(v -&gt; {&#10;            EditText searchField = findViewById(R.id.toolbar_search_field);&#10;            String searchQuery = searchField.getText().toString().trim();&#10;&#10;            if (!searchQuery.isEmpty()) {&#10;                // Manual city override - search for attractions in specified city&#10;                currentCity = searchQuery;&#10;                Toast.makeText(this, &quot; Searching attractions in: &quot; + searchQuery, Toast.LENGTH_SHORT).show();&#10;                loadAttractionsFromFirestore(searchQuery, &quot;All&quot;);&#10;&#10;                // Clear search field and hide keyboard&#10;                searchField.setText(&quot;&quot;);&#10;                searchField.clearFocus();&#10;                android.view.inputmethod.InputMethodManager imm =&#10;                    (android.view.inputmethod.InputMethodManager) getSystemService(android.content.Context.INPUT_METHOD_SERVICE);&#10;                imm.hideSoftInputFromWindow(searchField.getWindowToken(), 0);&#10;            } else {&#10;                // Regular refresh functionality&#10;                Toast.makeText(this, &quot; Refreshing location...&quot;, Toast.LENGTH_SHORT).show();&#10;                refreshLocation();&#10;            }&#10;        });&#10;    }&#10;&#10;    // Method to refresh location and attractions&#10;    private void refreshLocation() {&#10;        // Clear current data&#10;        currentCity = null;&#10;        attractionList.clear();&#10;        notifyDataSetChanged();&#10;&#10;        // Get fresh location&#10;        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {&#10;            getCurrentCity();&#10;        } else {&#10;            Toast.makeText(this, &quot;Location permission needed for refresh&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    // Helper method to update adapter efficiently&#10;    private void notifyDataSetChanged() {&#10;        if (adapter != null) {&#10;            adapter.notifyDataSetChanged();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Refresh location when activity resumes (when user returns to app)&#10;        if (currentCity == null) {&#10;            refreshLocation();&#10;        }&#10;    }&#10;&#10;    // Location Handling Methods&#10;    private void checkLocationPermission() {&#10;        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {&#10;            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, LOCATION_PERMISSION_REQUEST_CODE);&#10;        } else {&#10;            getCurrentCity();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {&#10;        super.onRequestPermissionsResult(requestCode, permissions, grantResults);&#10;        if (requestCode == LOCATION_PERMISSION_REQUEST_CODE) {&#10;            if (grantResults.length &gt; 0 &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED) {&#10;                getCurrentCity();&#10;            } else {&#10;                Toast.makeText(this, &quot;Location permission is required to show nearby attractions. Loading default attractions...&quot;, Toast.LENGTH_LONG).show();&#10;                // Load default attractions when permission denied&#10;                loadDefaultAttractions();&#10;            }&#10;        }&#10;    }&#10;&#10;    @SuppressLint(&quot;MissingPermission&quot;)&#10;    private void getCurrentCity() {&#10;        progressBar.setVisibility(View.VISIBLE);&#10;        Log.d(TAG, &quot;Starting location detection...&quot;);&#10;&#10;        // Clear any cached location first&#10;        fusedLocationProviderClient.flushLocations();&#10;&#10;        fusedLocationProviderClient.getCurrentLocation(Priority.PRIORITY_HIGH_ACCURACY, null)&#10;                .addOnSuccessListener(this, location -&gt; {&#10;                    if (location != null) {&#10;                        Log.d(TAG, &quot;Location found: &quot; + location.getLatitude() + &quot;, &quot; + location.getLongitude());&#10;&#10;                        // Always try to geocode the coordinates to get city name&#10;                        Geocoder geocoder = new Geocoder(this, Locale.getDefault());&#10;                        try {&#10;                            List&lt;Address&gt; addresses = geocoder.getFromLocation(location.getLatitude(), location.getLongitude(), 1);&#10;                            if (addresses != null &amp;&amp; !addresses.isEmpty()) {&#10;                                Address address = addresses.get(0);&#10;&#10;                                // Try multiple ways to get city name&#10;                                String city = address.getLocality();&#10;                                if (city == null) city = address.getSubAdminArea();&#10;                                if (city == null) city = address.getAdminArea();&#10;                                if (city == null) city = address.getSubLocality();&#10;&#10;                                Log.d(TAG, &quot;Geocoded city: &quot; + city);&#10;                                Log.d(TAG, &quot;Full geocoded address: &quot; + address);&#10;&#10;                                if (city != null) {&#10;                                    currentCity = normalizeCityName(city);&#10;&#10;                                    // Check if location is in Sri Lanka&#10;                                    if (isInSriLanka(location.getLatitude(), location.getLongitude())) {&#10;                                        Toast.makeText(this, &quot; Detected location: &quot; + currentCity, Toast.LENGTH_SHORT).show();&#10;                                    } else {&#10;                                        Toast.makeText(this, &quot; Foreign location detected: &quot; + currentCity +&#10;                                                     &quot;\n Tap refresh to try again or test with Sri Lankan cities&quot;, Toast.LENGTH_LONG).show();&#10;                                    }&#10;&#10;                                    // Always check Firebase for attractions in the detected city&#10;                                    loadAttractionsFromFirestore(currentCity, &quot;All&quot;);&#10;                                    return;&#10;                                } else {&#10;                                    Log.w(TAG, &quot;Could not determine city name from geocoding&quot;);&#10;                                    showLocationFallbackOptions();&#10;                                }&#10;                            } else {&#10;                                Log.w(TAG, &quot;No addresses found for location&quot;);&#10;                                showLocationFallbackOptions();&#10;                            }&#10;                        } catch (IOException e) {&#10;                            Log.e(TAG, &quot;Geocoder error: &quot; + e.getMessage());&#10;                            showLocationFallbackOptions();&#10;                        }&#10;                    } else {&#10;                        Log.w(TAG, &quot;Location is null&quot;);&#10;                        showLocationFallbackOptions();&#10;                    }&#10;                })&#10;                .addOnFailureListener(this, e -&gt; {&#10;                    Log.e(TAG, &quot;Location error: &quot; + e.getMessage());&#10;                    showLocationFallbackOptions();&#10;                });&#10;    }&#10;&#10;    // New method to show fallback options when location detection fails&#10;    private void showLocationFallbackOptions() {&#10;        progressBar.setVisibility(View.GONE);&#10;        Toast.makeText(this, &quot; Location not detected. Showing default attractions.\n Tap refresh icon to try again&quot;, Toast.LENGTH_LONG).show();&#10;&#10;        // Try some Sri Lankan cities as fallback&#10;        String[] sriLankanCities = {&quot;Colombo&quot;, &quot;Kandy&quot;, &quot;Galle&quot;, &quot;Anuradhapura&quot;, &quot;Nuwara Eliya&quot;, &quot;Kahawatta&quot;};&#10;&#10;        for (String city : sriLankanCities) {&#10;            currentCity = city;&#10;            loadAttractionsFromFirestore(city, &quot;All&quot;);&#10;            break; // Try first available city&#10;        }&#10;    }&#10;&#10;    // Show message when location cannot be detected&#10;    private void showNoLocationMessage() {&#10;        progressBar.setVisibility(View.GONE);&#10;        Toast.makeText(this, &quot;Unable to detect your location. Please check GPS settings.&quot;, Toast.LENGTH_LONG).show();&#10;&#10;        // Clear the attractions list and show message&#10;        attractionList.clear();&#10;        adapter.notifyDataSetChanged();&#10;    }&#10;&#10;    // New method to load default attractions when location fails&#10;    private void loadDefaultAttractions() {&#10;        Log.d(TAG, &quot;Loading default attractions from fallback cities&quot;);&#10;        currentCity = &quot;Colombo&quot;; // Set default city&#10;        loadAttractionsFromFirestore(currentCity, &quot;All&quot;);&#10;    }&#10;&#10;    // Improved Firestore loading with better error handling and fallback&#10;    private void loadAttractionsFromFirestore(String cityName, String category) {&#10;        progressBar.setVisibility(View.VISIBLE);&#10;        attractionList.clear();&#10;&#10;        String formattedCityName = cityName.trim();&#10;        Log.d(TAG, &quot;Querying for city: '&quot; + formattedCityName + &quot;' and category: '&quot; + category + &quot;'&quot;);&#10;&#10;        // Try exact city match first&#10;        tryLoadFromCity(formattedCityName, category, 0);&#10;    }&#10;&#10;    private void tryLoadFromCity(String cityName, String category, int fallbackIndex) {&#10;        Query query = firestoreDb.collection(&quot;cities&quot;).document(cityName).collection(&quot;attractions&quot;);&#10;&#10;        if (!&quot;All&quot;.equalsIgnoreCase(category)) {&#10;            query = query.whereEqualTo(&quot;category&quot;, category);&#10;        }&#10;&#10;        query.get().addOnCompleteListener(task -&gt; {&#10;            if (task.isSuccessful()) {&#10;                Log.d(TAG, &quot;Query successful for &quot; + cityName + &quot;. Found &quot; + task.getResult().size() + &quot; documents.&quot;);&#10;&#10;                if (!task.getResult().isEmpty()) {&#10;                    // Found attractions for this city - show them&#10;                    for (QueryDocumentSnapshot document : task.getResult()) {&#10;                        Attraction attraction = document.toObject(Attraction.class);&#10;                        attraction.setDocumentId(document.getId());&#10;                        attractionList.add(attraction);&#10;                        Log.d(TAG, &quot;Added attraction: &quot; + attraction.getName());&#10;                    }&#10;                    adapter.notifyDataSetChanged();&#10;                    progressBar.setVisibility(View.GONE);&#10;&#10;                    Toast.makeText(this, &quot;Found &quot; + attractionList.size() + &quot; attractions in &quot; + cityName, Toast.LENGTH_SHORT).show();&#10;                } else {&#10;                    // No attractions found for this city - show community growth entry&#10;                    Log.d(TAG, &quot;No attractions found for &quot; + cityName + &quot;, showing community growth entry&quot;);&#10;                    showPlaceholderEntry(cityName); // Changed back to show the grow database entry&#10;                }&#10;            } else {&#10;                Exception exception = task.getException();&#10;                Log.e(TAG, &quot;Error getting documents from &quot; + cityName + &quot;: &quot;, exception);&#10;&#10;                progressBar.setVisibility(View.GONE);&#10;                if (exception != null &amp;&amp; exception.getMessage() != null &amp;&amp; exception.getMessage().contains(&quot;PERMISSION_DENIED&quot;)) {&#10;                    Toast.makeText(this, &quot;⚠️ Firebase Database Access Denied!\nPlease update Firebase Security Rules.&quot;, Toast.LENGTH_LONG).show();&#10;                } else {&#10;                    Toast.makeText(this, &quot;Error loading data. Please check your internet connection.&quot;, Toast.LENGTH_LONG).show();&#10;                }&#10;            }&#10;        });&#10;    }&#10;&#10;    // Show message when no attractions found for the detected city&#10;    private void showNoAttractionsMessage(String cityName) {&#10;        progressBar.setVisibility(View.GONE);&#10;        attractionList.clear();&#10;        adapter.notifyDataSetChanged();&#10;&#10;        Toast.makeText(this, &quot;No attractions found in &quot; + cityName + &quot;. Be the first to add some!&quot;, Toast.LENGTH_LONG).show();&#10;    }&#10;&#10;    // Helper method to check if coordinates are in Sri Lanka&#10;    private boolean isInSriLanka(double lat, double lng) {&#10;        // Sri Lanka boundaries (approximate)&#10;        return lat &gt;= 5.9 &amp;&amp; lat &lt;= 9.9 &amp;&amp; lng &gt;= 79.5 &amp;&amp; lng &lt;= 81.9;&#10;    }&#10;&#10;    // Helper method to normalize city names for better Firebase matching&#10;    private String normalizeCityName(String cityName) {&#10;        if (cityName == null) return null;&#10;&#10;        String normalized = cityName.trim();&#10;&#10;        // Handle common Sri Lankan city name variations&#10;        switch (normalized.toLowerCase()) {&#10;            case &quot;colombo municipal council&quot;:&#10;            case &quot;colombo district&quot;:&#10;                return &quot;Colombo&quot;;&#10;            case &quot;kandy municipal council&quot;:&#10;            case &quot;kandy district&quot;:&#10;                return &quot;Kandy&quot;;&#10;            case &quot;galle municipal council&quot;:&#10;            case &quot;galle district&quot;:&#10;                return &quot;Galle&quot;;&#10;            case &quot;anuradhapura district&quot;:&#10;                return &quot;Anuradhapura&quot;;&#10;            case &quot;polonnaruwa district&quot;:&#10;                return &quot;Polonnaruwa&quot;;&#10;            case &quot;nuwara eliya district&quot;:&#10;                return &quot;Nuwara Eliya&quot;;&#10;            case &quot;matale district&quot;:&#10;                return &quot;Matale&quot;;&#10;            case &quot;kurunegala district&quot;:&#10;                return &quot;Kurunegala&quot;;&#10;            default:&#10;                return normalized;&#10;        }&#10;    }&#10;&#10;    private void setupFilterListener() {&#10;        chipGroup.setOnCheckedChangeListener((group, checkedId) -&gt; {&#10;            if (checkedId == View.NO_ID) {&#10;                return;&#10;            }&#10;            Chip selectedChip = findViewById(checkedId);&#10;            if (selectedChip != null) {&#10;                String selectedCategory = selectedChip.getText().toString();&#10;                String cityToQuery = currentCity != null ? currentCity : &quot;Colombo&quot;;&#10;                loadAttractionsFromFirestore(cityToQuery, selectedCategory);&#10;            }&#10;        });&#10;    }&#10;&#10;    // Add this method to your HomeActivity class&#10;    private void seedSampleData() {&#10;        DataSeeder seeder = new DataSeeder();&#10;        seeder.seedSampleAttractions();&#10;        Toast.makeText(this, &quot;Sample attractions added!&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;&#10;    // Method to show placeholder entry when no attractions found&#10;    private void showPlaceholderEntry(String cityName) {&#10;        progressBar.setVisibility(View.GONE);&#10;&#10;        // Create placeholder attraction&#10;        Attraction placeholder = new Attraction();&#10;        placeholder.setDocumentId(&quot;placeholder_&quot; + cityName);&#10;        placeholder.setName(&quot;Help Us Grow Our Database! &quot;);&#10;        placeholder.setCategory(&quot;Community Contribution&quot;);&#10;        placeholder.setDescription(&quot;Unfortunately, we haven't updated our database with attractions from &quot; + cityName + &quot; yet. &quot; +&#10;                &quot;Please consider adding interesting locations near your area to help other travelers discover amazing places!&quot;);&#10;        placeholder.setYoutubeUrl(&quot;&quot;);&#10;&#10;        // Set placeholder image - let the adapter handle the icon&#10;        List&lt;String&gt; placeholderImages = new ArrayList&lt;&gt;();&#10;        // Don't add any image URL - the adapter will show the special icon&#10;        placeholder.setImages(placeholderImages);&#10;&#10;        placeholder.setContributorName(&quot;Hidden Sri Lanka Team&quot;);&#10;        placeholder.setContributedAt(System.currentTimeMillis());&#10;        placeholder.setPlaceholder(true); // Mark as placeholder&#10;&#10;        // Add to attraction list&#10;        attractionList.clear();&#10;        attractionList.add(placeholder);&#10;        adapter.notifyDataSetChanged();&#10;&#10;        Log.d(TAG, &quot;Placeholder entry added for &quot; + cityName);&#10;        Toast.makeText(this, &quot;No attractions found for &quot; + cityName + &quot;. Help us by adding some!&quot;, Toast.LENGTH_LONG).show();&#10;    }&#10;&#10;    // Call this method once to populate your database (you can trigger it with a button or on first run)&#10;}&#10;" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.Manifest;&#10;import android.annotation.SuppressLint;&#10;import android.content.pm.PackageManager;&#10;import android.location.Address;&#10;import android.location.Geocoder;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.View;&#10;import android.widget.EditText;&#10;import android.widget.ProgressBar;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.core.app.ActivityCompat;&#10;import androidx.core.content.ContextCompat;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.google.android.gms.location.FusedLocationProviderClient;&#10;import com.google.android.gms.location.LocationServices;&#10;import com.google.android.gms.location.Priority;&#10;import com.google.android.material.chip.Chip;&#10;import com.google.android.material.chip.ChipGroup;&#10;import com.google.firebase.firestore.FirebaseFirestore;&#10;import com.google.firebase.firestore.Query;&#10;import com.google.firebase.firestore.QueryDocumentSnapshot;&#10;&#10;import java.io.IOException;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;import java.util.Locale;&#10;&#10;public class HomeActivity extends BaseActivity {&#10;&#10;    // ---Declare all the variables we will need ---&#10;    private static final int LOCATION_PERMISSION_REQUEST_CODE = 1;&#10;    private static final String TAG = &quot;HomeActivity&quot;;&#10;&#10;    private AttractionAdapter adapter;&#10;    private List&lt;Attraction&gt; attractionList;&#10;&#10;    private ProgressBar progressBar;&#10;    private ChipGroup chipGroup;&#10;&#10;    private FirebaseFirestore firestoreDb;&#10;    private FusedLocationProviderClient fusedLocationProviderClient;&#10;    private String currentCity = null;&#10;    &#10;    // Add flag to prevent multiple location requests&#10;    private boolean isLocationRequestInProgress = false;&#10;    private boolean hasInitialLocationLoad = false;&#10;&#10;    @Override&#10;    protected int getLayoutResourceId() {&#10;        return R.layout.activity_home;&#10;    }&#10;&#10;    @Override&#10;    protected String getActivityTitle() {&#10;        return getString(R.string.nav_home_title);&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        //Initialize everything&#10;        firestoreDb = FirebaseFirestore.getInstance();&#10;        fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(this);&#10;&#10;        progressBar = findViewById(R.id.progressBar);&#10;        chipGroup = findViewById(R.id.chip_group_filters);&#10;        RecyclerView recyclerView = findViewById(R.id.recyclerView_attractions);&#10;&#10;        attractionList = new ArrayList&lt;&gt;();&#10;        adapter = new AttractionAdapter(attractionList);&#10;        recyclerView.setLayoutManager(new LinearLayoutManager(this));&#10;        recyclerView.setAdapter(adapter);&#10;&#10;        checkLocationPermission();&#10;        setupFilterListener();&#10;        setupRefreshButton(); // Add refresh functionality&#10;    }&#10;&#10;    // Add refresh button functionality&#10;    private void setupRefreshButton() {&#10;        // Make the search functionality work for manual city override&#10;        findViewById(R.id.search_icon).setOnClickListener(v -&gt; {&#10;            EditText searchField = findViewById(R.id.toolbar_search_field);&#10;            String searchQuery = searchField.getText().toString().trim();&#10;&#10;            if (!searchQuery.isEmpty()) {&#10;                // Manual city override - search for attractions in specified city&#10;                currentCity = searchQuery;&#10;                Toast.makeText(this, &quot; Searching attractions in: &quot; + searchQuery, Toast.LENGTH_SHORT).show();&#10;                loadAttractionsFromFirestore(searchQuery, &quot;All&quot;);&#10;&#10;                // Clear search field and hide keyboard&#10;                searchField.setText(&quot;&quot;);&#10;                searchField.clearFocus();&#10;                android.view.inputmethod.InputMethodManager imm =&#10;                    (android.view.inputmethod.InputMethodManager) getSystemService(android.content.Context.INPUT_METHOD_SERVICE);&#10;                imm.hideSoftInputFromWindow(searchField.getWindowToken(), 0);&#10;            } else {&#10;                // Regular refresh functionality&#10;                Toast.makeText(this, &quot; Refreshing location...&quot;, Toast.LENGTH_SHORT).show();&#10;                refreshLocation();&#10;            }&#10;        });&#10;    }&#10;&#10;    // Method to refresh location and attractions&#10;    private void refreshLocation() {&#10;        if (isLocationRequestInProgress) {&#10;            Log.d(TAG, &quot;Location request already in progress, skipping refresh&quot;);&#10;            Toast.makeText(this, &quot;Location request already in progress...&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;        &#10;        // Clear current data&#10;        currentCity = null;&#10;        attractionList.clear();&#10;        notifyDataSetChanged();&#10;        hasInitialLocationLoad = false; // Reset flag for manual refresh&#10;&#10;        // Get fresh location&#10;        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {&#10;            getCurrentCity();&#10;        } else {&#10;            Toast.makeText(this, &quot;Location permission needed for refresh&quot;, Toast.LENGTH_SHORT).show();&#10;        }&#10;    }&#10;&#10;    // Helper method to update adapter efficiently&#10;    private void notifyDataSetChanged() {&#10;        if (adapter != null) {&#10;            adapter.notifyDataSetChanged();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Only refresh location if we haven't done initial load and no request is in progress&#10;        if (!hasInitialLocationLoad &amp;&amp; !isLocationRequestInProgress &amp;&amp; currentCity == null) {&#10;            Log.d(TAG, &quot;onResume: Performing initial location load&quot;);&#10;            refreshLocation();&#10;        } else {&#10;            Log.d(TAG, &quot;onResume: Skipping location refresh - already loaded or in progress&quot;);&#10;        }&#10;    }&#10;&#10;    // Location Handling Methods&#10;    private void checkLocationPermission() {&#10;        if (isLocationRequestInProgress) {&#10;            Log.d(TAG, &quot;Location request already in progress, skipping&quot;);&#10;            return;&#10;        }&#10;        &#10;        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {&#10;            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, LOCATION_PERMISSION_REQUEST_CODE);&#10;        } else {&#10;            getCurrentCity();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {&#10;        super.onRequestPermissionsResult(requestCode, permissions, grantResults);&#10;        if (requestCode == LOCATION_PERMISSION_REQUEST_CODE) {&#10;            if (grantResults.length &gt; 0 &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED) {&#10;                getCurrentCity();&#10;            } else {&#10;                Toast.makeText(this, &quot;Location permission is required to show nearby attractions. Loading default attractions...&quot;, Toast.LENGTH_LONG).show();&#10;                // Load default attractions when permission denied&#10;                loadDefaultAttractions();&#10;            }&#10;        }&#10;    }&#10;&#10;    @SuppressLint(&quot;MissingPermission&quot;)&#10;    private void getCurrentCity() {&#10;        if (isLocationRequestInProgress) {&#10;            Log.d(TAG, &quot;Location request already in progress, skipping getCurrentCity&quot;);&#10;            return;&#10;        }&#10;        &#10;        isLocationRequestInProgress = true;&#10;        progressBar.setVisibility(View.VISIBLE);&#10;        Log.d(TAG, &quot;Starting location detection...&quot;);&#10;&#10;        // Clear any cached location first&#10;        fusedLocationProviderClient.flushLocations();&#10;&#10;        fusedLocationProviderClient.getCurrentLocation(Priority.PRIORITY_HIGH_ACCURACY, null)&#10;                .addOnSuccessListener(this, location -&gt; {&#10;                    isLocationRequestInProgress = false;&#10;                    hasInitialLocationLoad = true;&#10;                    &#10;                    if (location != null) {&#10;                        Log.d(TAG, &quot;Location found: &quot; + location.getLatitude() + &quot;, &quot; + location.getLongitude());&#10;&#10;                        // Always try to geocode the coordinates to get city name&#10;                        Geocoder geocoder = new Geocoder(this, Locale.getDefault());&#10;                        try {&#10;                            List&lt;Address&gt; addresses = geocoder.getFromLocation(location.getLatitude(), location.getLongitude(), 1);&#10;                            if (addresses != null &amp;&amp; !addresses.isEmpty()) {&#10;                                Address address = addresses.get(0);&#10;&#10;                                // Try multiple ways to get city name&#10;                                String city = address.getLocality();&#10;                                if (city == null) city = address.getSubAdminArea();&#10;                                if (city == null) city = address.getAdminArea();&#10;                                if (city == null) city = address.getSubLocality();&#10;&#10;                                Log.d(TAG, &quot;Geocoded city: &quot; + city);&#10;                                Log.d(TAG, &quot;Full geocoded address: &quot; + address);&#10;&#10;                                if (city != null) {&#10;                                    currentCity = normalizeCityName(city);&#10;&#10;                                    // Check if location is in Sri Lanka&#10;                                    if (isInSriLanka(location.getLatitude(), location.getLongitude())) {&#10;                                        Toast.makeText(this, &quot; Detected location: &quot; + currentCity, Toast.LENGTH_SHORT).show();&#10;                                    } else {&#10;                                        Toast.makeText(this, &quot; Foreign location detected: &quot; + currentCity +&#10;                                                     &quot;\n Tap refresh to try again or test with Sri Lankan cities&quot;, Toast.LENGTH_LONG).show();&#10;                                    }&#10;&#10;                                    // Always check Firebase for attractions in the detected city&#10;                                    loadAttractionsFromFirestore(currentCity, &quot;All&quot;);&#10;                                    return;&#10;                                } else {&#10;                                    Log.w(TAG, &quot;Could not determine city name from geocoding&quot;);&#10;                                    showLocationFallbackOptions();&#10;                                }&#10;                            } else {&#10;                                Log.w(TAG, &quot;No addresses found for location&quot;);&#10;                                showLocationFallbackOptions();&#10;                            }&#10;                        } catch (IOException e) {&#10;                            Log.e(TAG, &quot;Geocoder error: &quot; + e.getMessage());&#10;                            showLocationFallbackOptions();&#10;                        }&#10;                    } else {&#10;                        Log.w(TAG, &quot;Location is null&quot;);&#10;                        showLocationFallbackOptions();&#10;                    }&#10;                })&#10;                .addOnFailureListener(this, e -&gt; {&#10;                    isLocationRequestInProgress = false;&#10;                    hasInitialLocationLoad = true;&#10;                    Log.e(TAG, &quot;Location error: &quot; + e.getMessage());&#10;                    showLocationFallbackOptions();&#10;                });&#10;    }&#10;&#10;    // New method to show fallback options when location detection fails&#10;    private void showLocationFallbackOptions() {&#10;        isLocationRequestInProgress = false;&#10;        hasInitialLocationLoad = true;&#10;        progressBar.setVisibility(View.GONE);&#10;        Toast.makeText(this, &quot; Location not detected. Showing default attractions.\n Tap refresh icon to try again&quot;, Toast.LENGTH_LONG).show();&#10;&#10;        // Try some Sri Lankan cities as fallback&#10;        String[] sriLankanCities = {&quot;Colombo&quot;, &quot;Kandy&quot;, &quot;Galle&quot;, &quot;Anuradhapura&quot;, &quot;Nuwara Eliya&quot;, &quot;Kahawatta&quot;};&#10;&#10;        for (String city : sriLankanCities) {&#10;            currentCity = city;&#10;            loadAttractionsFromFirestore(city, &quot;All&quot;);&#10;            break; // Try first available city&#10;        }&#10;    }&#10;&#10;    // Show message when location cannot be detected&#10;    private void showNoLocationMessage() {&#10;        progressBar.setVisibility(View.GONE);&#10;        Toast.makeText(this, &quot;Unable to detect your location. Please check GPS settings.&quot;, Toast.LENGTH_LONG).show();&#10;&#10;        // Clear the attractions list and show message&#10;        attractionList.clear();&#10;        adapter.notifyDataSetChanged();&#10;    }&#10;&#10;    // New method to load default attractions when location fails&#10;    private void loadDefaultAttractions() {&#10;        Log.d(TAG, &quot;Loading default attractions from fallback cities&quot;);&#10;        currentCity = &quot;Colombo&quot;; // Set default city&#10;        loadAttractionsFromFirestore(currentCity, &quot;All&quot;);&#10;    }&#10;&#10;    // Improved Firestore loading with better error handling and fallback&#10;    private void loadAttractionsFromFirestore(String cityName, String category) {&#10;        progressBar.setVisibility(View.VISIBLE);&#10;        attractionList.clear();&#10;&#10;        String formattedCityName = cityName.trim();&#10;        Log.d(TAG, &quot;Querying for city: '&quot; + formattedCityName + &quot;' and category: '&quot; + category + &quot;'&quot;);&#10;&#10;        // Try exact city match first&#10;        tryLoadFromCity(formattedCityName, category, 0);&#10;    }&#10;&#10;    private void tryLoadFromCity(String cityName, String category, int fallbackIndex) {&#10;        Query query = firestoreDb.collection(&quot;cities&quot;).document(cityName).collection(&quot;attractions&quot;);&#10;&#10;        if (!&quot;All&quot;.equalsIgnoreCase(category)) {&#10;            query = query.whereEqualTo(&quot;category&quot;, category);&#10;        }&#10;&#10;        query.get().addOnCompleteListener(task -&gt; {&#10;            if (task.isSuccessful()) {&#10;                Log.d(TAG, &quot;Query successful for &quot; + cityName + &quot;. Found &quot; + task.getResult().size() + &quot; documents.&quot;);&#10;&#10;                if (!task.getResult().isEmpty()) {&#10;                    // Found attractions for this city - show them&#10;                    for (QueryDocumentSnapshot document : task.getResult()) {&#10;                        Attraction attraction = document.toObject(Attraction.class);&#10;                        attraction.setDocumentId(document.getId());&#10;                        attractionList.add(attraction);&#10;                        Log.d(TAG, &quot;Added attraction: &quot; + attraction.getName());&#10;                    }&#10;                    adapter.notifyDataSetChanged();&#10;                    progressBar.setVisibility(View.GONE);&#10;&#10;                    Toast.makeText(this, &quot;Found &quot; + attractionList.size() + &quot; attractions in &quot; + cityName, Toast.LENGTH_SHORT).show();&#10;                } else {&#10;                    // No attractions found for this city - show community growth entry&#10;                    Log.d(TAG, &quot;No attractions found for &quot; + cityName + &quot;, showing community growth entry&quot;);&#10;                    showPlaceholderEntry(cityName); // Changed back to show the grow database entry&#10;                }&#10;            } else {&#10;                Exception exception = task.getException();&#10;                Log.e(TAG, &quot;Error getting documents from &quot; + cityName + &quot;: &quot;, exception);&#10;&#10;                progressBar.setVisibility(View.GONE);&#10;                if (exception != null &amp;&amp; exception.getMessage() != null &amp;&amp; exception.getMessage().contains(&quot;PERMISSION_DENIED&quot;)) {&#10;                    Toast.makeText(this, &quot;⚠️ Firebase Database Access Denied!\nPlease update Firebase Security Rules.&quot;, Toast.LENGTH_LONG).show();&#10;                } else {&#10;                    Toast.makeText(this, &quot;Error loading data. Please check your internet connection.&quot;, Toast.LENGTH_LONG).show();&#10;                }&#10;            }&#10;        });&#10;    }&#10;&#10;    // Show message when no attractions found for the detected city&#10;    private void showNoAttractionsMessage(String cityName) {&#10;        progressBar.setVisibility(View.GONE);&#10;        attractionList.clear();&#10;        adapter.notifyDataSetChanged();&#10;&#10;        Toast.makeText(this, &quot;No attractions found in &quot; + cityName + &quot;. Be the first to add some!&quot;, Toast.LENGTH_LONG).show();&#10;    }&#10;&#10;    // Helper method to check if coordinates are in Sri Lanka&#10;    private boolean isInSriLanka(double lat, double lng) {&#10;        // Sri Lanka boundaries (approximate)&#10;        return lat &gt;= 5.9 &amp;&amp; lat &lt;= 9.9 &amp;&amp; lng &gt;= 79.5 &amp;&amp; lng &lt;= 81.9;&#10;    }&#10;&#10;    // Helper method to normalize city names for better Firebase matching&#10;    private String normalizeCityName(String cityName) {&#10;        if (cityName == null) return null;&#10;&#10;        String normalized = cityName.trim();&#10;&#10;        // Handle common Sri Lankan city name variations&#10;        switch (normalized.toLowerCase()) {&#10;            case &quot;colombo municipal council&quot;:&#10;            case &quot;colombo district&quot;:&#10;                return &quot;Colombo&quot;;&#10;            case &quot;kandy municipal council&quot;:&#10;            case &quot;kandy district&quot;:&#10;                return &quot;Kandy&quot;;&#10;            case &quot;galle municipal council&quot;:&#10;            case &quot;galle district&quot;:&#10;                return &quot;Galle&quot;;&#10;            case &quot;anuradhapura district&quot;:&#10;                return &quot;Anuradhapura&quot;;&#10;            case &quot;polonnaruwa district&quot;:&#10;                return &quot;Polonnaruwa&quot;;&#10;            case &quot;nuwara eliya district&quot;:&#10;                return &quot;Nuwara Eliya&quot;;&#10;            case &quot;matale district&quot;:&#10;                return &quot;Matale&quot;;&#10;            case &quot;kurunegala district&quot;:&#10;                return &quot;Kurunegala&quot;;&#10;            default:&#10;                return normalized;&#10;        }&#10;    }&#10;&#10;    private void setupFilterListener() {&#10;        chipGroup.setOnCheckedChangeListener((group, checkedId) -&gt; {&#10;            if (checkedId == View.NO_ID) {&#10;                return;&#10;            }&#10;            Chip selectedChip = findViewById(checkedId);&#10;            if (selectedChip != null) {&#10;                String selectedCategory = selectedChip.getText().toString();&#10;                String cityToQuery = currentCity != null ? currentCity : &quot;Colombo&quot;;&#10;                loadAttractionsFromFirestore(cityToQuery, selectedCategory);&#10;            }&#10;        });&#10;    }&#10;&#10;    // Add this method to your HomeActivity class&#10;    private void seedSampleData() {&#10;        DataSeeder seeder = new DataSeeder();&#10;        seeder.seedSampleAttractions();&#10;        Toast.makeText(this, &quot;Sample attractions added!&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;&#10;    // Method to show placeholder entry when no attractions found&#10;    private void showPlaceholderEntry(String cityName) {&#10;        progressBar.setVisibility(View.GONE);&#10;&#10;        // Create placeholder attraction&#10;        Attraction placeholder = new Attraction();&#10;        placeholder.setDocumentId(&quot;placeholder_&quot; + cityName);&#10;        placeholder.setName(&quot;Help Us Grow Our Database! &quot;);&#10;        placeholder.setCategory(&quot;Community Contribution&quot;);&#10;        placeholder.setDescription(&quot;Unfortunately, we haven't updated our database with attractions from &quot; + cityName + &quot; yet. &quot; +&#10;                &quot;Please consider adding interesting locations near your area to help other travelers discover amazing places!&quot;);&#10;        placeholder.setYoutubeUrl(&quot;&quot;);&#10;&#10;        // Set placeholder image - let the adapter handle the icon&#10;        List&lt;String&gt; placeholderImages = new ArrayList&lt;&gt;();&#10;        // Don't add any image URL - the adapter will show the special icon&#10;        placeholder.setImages(placeholderImages);&#10;&#10;        placeholder.setContributorName(&quot;Hidden Sri Lanka Team&quot;);&#10;        placeholder.setContributedAt(System.currentTimeMillis());&#10;        placeholder.setPlaceholder(true); // Mark as placeholder&#10;&#10;        // Add to attraction list&#10;        attractionList.clear();&#10;        attractionList.add(placeholder);&#10;        adapter.notifyDataSetChanged();&#10;&#10;        Log.d(TAG, &quot;Placeholder entry added for &quot; + cityName);&#10;        Toast.makeText(this, &quot;No attractions found for &quot; + cityName + &quot;. Help us by adding some!&quot;, Toast.LENGTH_LONG).show();&#10;    }&#10;&#10;    // Call this method once to populate your database (you can trigger it with a button or on first run)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/LocationDetailScreenActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/LocationDetailScreenActivity.java" />
              <option name="originalContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;&#10;public class LocationDetailScreenActivity extends BaseActivity { // Changed to BaseActivity&#10;//TODO : Still in Inplimentation Part&#10;    // TODO: DETAIL_CONTENT_SETUP - Declare UI elements for the location detail screen&#10;&#10;    @Override&#10;    protected int getLayoutResourceId() {&#10;        return R.layout.activity_location_detail_screen;&#10;    }&#10;&#10;    @Override&#10;    protected String getActivityTitle() {&#10;        String locationName = getIntent().getStringExtra(&quot;LOCATION_NAME_EXTRA&quot;);&#10;        return locationName != null ? locationName : &quot;Location Details&quot;; // Default title&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        // --- TODO: Future Feature Integration  here  ---&#10;&#10;&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.os.Bundle;&#10;&#10;public class LocationDetailScreenActivity extends BaseActivity { // Changed to BaseActivity&#10;//TODO : Still in Inplimentation Part&#10;    // TODO: DETAIL_CONTENT_SETUP - Declare UI elements for the location detail screen&#10;&#10;    @Override&#10;    protected int getLayoutResourceId() {&#10;        return R.layout.activity_location_detail_screen;&#10;    }&#10;&#10;    @Override&#10;    protected String getActivityTitle() {&#10;        String locationName = getIntent().getStringExtra(&quot;LOCATION_NAME_EXTRA&quot;);&#10;        return locationName != null ? locationName : &quot;Location Details&quot;; // Default title&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;&#10;        // --- TODO: Future Feature Integration  here  ---&#10;&#10;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/SignUpActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/SignUpActivity.java" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import com.google.firebase.database.DataSnapshot;&#10;import com.google.firebase.database.DatabaseError;&#10;import com.google.firebase.database.DatabaseReference;&#10;import com.google.firebase.database.FirebaseDatabase;&#10;import com.google.firebase.database.ValueEventListener;&#10;&#10;public class SignUpActivity extends AppCompatActivity {&#10;&#10;    EditText signupName, signupUserName, signupEmail, signupPassword, signupRePassword;&#10;    Button signupButton;&#10;    Button loginRedirectText;&#10;&#10;    // Define your database URL as a constant&#10;    private static final String FIREBASE_DATABASE_URL = &quot;https://hidden-sri-lanka-c3ec5-default-rtdb.asia-southeast1.firebasedatabase.app&quot;;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_sign_up);&#10;&#10;        // Initialize views&#10;        signupName = findViewById(R.id.userName); // This might be reused for name&#10;        signupUserName = findViewById(R.id.userName);&#10;        signupEmail = findViewById(R.id.email);&#10;        signupPassword = findViewById(R.id.password);&#10;        signupRePassword = findViewById(R.id.rePassword);&#10;        signupButton = findViewById(R.id.signUpButton);&#10;        loginRedirectText = findViewById(R.id.loginRedirectText);&#10;&#10;        signupButton.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                // Get FirebaseDatabase instance with the correct URL&#10;                FirebaseDatabase database = FirebaseDatabase.getInstance(FIREBASE_DATABASE_URL);&#10;                DatabaseReference reference = database.getReference(&quot;users&quot;);&#10;&#10;                String name = signupName.getText().toString().trim();&#10;                String email = signupEmail.getText().toString().trim();&#10;                String username = signupUserName.getText().toString().trim();&#10;                String password = signupPassword.getText().toString();&#10;                String rePassword = signupRePassword.getText().toString();&#10;&#10;                // Validation&#10;                if (name.isEmpty()) {&#10;                    signupName.setError(&quot;Name cannot be empty&quot;);&#10;                    return;&#10;                }&#10;                if (email.isEmpty()) {&#10;                    signupEmail.setError(&quot;Email cannot be empty&quot;);&#10;                    return;&#10;                }&#10;                if (username.isEmpty()) {&#10;                    signupUserName.setError(&quot;Username cannot be empty&quot;);&#10;                    return;&#10;                }&#10;                if (password.isEmpty()) {&#10;                    signupPassword.setError(&quot;Password cannot be empty&quot;);&#10;                    return;&#10;                }&#10;                if (!password.equals(rePassword)) {&#10;                    signupRePassword.setError(&quot;Passwords do not match&quot;);&#10;                    return;&#10;                }&#10;&#10;                // Create helper class instance&#10;                HelperClass helperClass = new HelperClass(name, email, username, password);&#10;&#10;                // Save to Firebase&#10;                reference.child(username).setValue(helperClass).addOnCompleteListener(task -&gt; {&#10;                    if (task.isSuccessful()) {&#10;                        Toast.makeText(SignUpActivity.this, &quot;Account created successfully!&quot;, Toast.LENGTH_SHORT).show();&#10;                        Intent intent = new Intent(SignUpActivity.this, LoginActivity.class);&#10;                        startActivity(intent);&#10;                        finish();&#10;                    } else {&#10;                        Toast.makeText(SignUpActivity.this, &quot;Failed to create account&quot;, Toast.LENGTH_SHORT).show();&#10;                    }&#10;                });&#10;            }&#10;        });&#10;&#10;        loginRedirectText.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                toLogin(v);&#10;            }&#10;        });&#10;&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;    }&#10;&#10;    public void toLogin(View view) {&#10;        Intent intent = new Intent(this, LoginActivity.class);&#10;        startActivity(intent);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/WelcomeActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/s23010526/hiddensrilanka/WelcomeActivity.java" />
              <option name="updatedContent" value="package com.s23010526.hiddensrilanka;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;public class WelcomeActivity extends AppCompatActivity {&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_welcome);&#10;        &#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;    }&#10;&#10;    public void exploreShere(View view) {&#10;        Intent intent = new Intent(this, OnboardingScreen2Activity.class);&#10;        startActivity(intent);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_add_location.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_add_location.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M12,2C8.13,2 5,5.13 5,9c0,5.25 7,13 7,13s7,-7.75 7,-13c0,-3.87 -3.13,-7 -7,-7zM7,9c0,-2.76 2.24,-5 5,-5s5,2.24 5,5c0,2.88 -2.88,7.19 -5,9.88C9.92,16.21 7,11.85 7,9z&quot;/&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M12,9m-2.5,0a2.5,2.5 0,1 1,5 0a2.5,2.5 0,1 1,-5 0&quot;/&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M11,7h2v2h-2z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_camera.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_camera.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M9,2l1.17,0L12,4.17L14.83,2L16,2v6h-2V5.83l-2,2 -2,-2V8H8V2H9zM7,8h2v1H7V8zM16,8h1v1h-1V8zM7,10h10v1H7V10zM7,12h10v8H7V12zM9,14h6v2H9V14zM9,17h6v2H9V17z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_image_placeholder.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_image_placeholder.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M21,19V5c0,-1.1 -0.9,-2 -2,-2H5c-1.1,0 -2,0.9 -2,2v14c0,1.1 0.9,2 2,2h14c1.1,0 2,-0.9 2,-2zM8.5,13.5l2.5,3.01L14.5,12l4.5,6H5l3.5,-4.5z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_info.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_info.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM13,17h-2v-6h2v6zM13,9h-2L11,7h2v2z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_link.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_link.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M3.9,12c0,-1.71 1.39,-3.1 3.1,-3.1h4V7H6.9C3.82,7 1.3,9.52 1.3,12.6S3.82,18.2 6.9,18.2h4v-1.9H6.9c-1.71,0 -3.1,-1.39 -3.1,-3.1zM8,13h8v-2H8v2zM17.1,7h-4v1.9h4c1.71,0 3.1,1.39 3.1,3.1s-1.39,3.1 -3.1,3.1h-4v1.9h4c3.08,0 5.6,-2.52 5.6,-5.6S20.18,7 17.1,7z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_share.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_share.xml" />
              <option name="updatedContent" value="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&#10;    android:tint=&quot;?attr/colorOnSurface&quot;&gt;&#10;  &lt;path&#10;      android:fillColor=&quot;@android:color/white&quot;&#10;      android:pathData=&quot;M18,16.08c-0.76,0 -1.44,0.3 -1.96,0.77L8.91,12.7c0.05,-0.23 0.09,-0.46 0.09,-0.7s-0.04,-0.47 -0.09,-0.7l7.05,-4.11c0.54,0.5 1.25,0.81 2.04,0.81 1.66,0 3,-1.34 3,-3s-1.34,-3 -3,-3 -3,1.34 -3,3c0,0.24 0.04,0.47 0.09,0.7L8.04,9.81C7.5,9.31 6.79,9 6,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3c0.79,0 1.5,-0.31 2.04,-0.81l7.12,4.16c-0.05,0.21 -0.08,0.43 -0.08,0.65 0,1.61 1.31,2.92 2.92,2.92 1.61,0 2.92,-1.31 2.92,-2.92s-1.31,-2.92 -2.92,-2.92z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_add_location.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_add_location.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:fillViewport=&quot;true&quot;&#10;    android:background=&quot;@color/white&quot;&#10;    tools:context=&quot;.AddLocationActivity&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Header Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;4dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/DeepForestGreen&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:gravity=&quot;center&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;48dp&quot;&#10;                    android:layout_height=&quot;48dp&quot;&#10;                    android:src=&quot;@drawable/ic_add_location&quot;&#10;                    app:tint=&quot;@color/GoldYellow&quot;&#10;                    android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Share a Hidden Gem&quot;&#10;                    android:textColor=&quot;@color/white&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Help other travelers discover amazing places!&quot;&#10;                    android:textColor=&quot;@color/GoldSand&quot;&#10;                    android:textSize=&quot;14sp&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    android:textAlignment=&quot;center&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Form Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            app:cardCornerRadius=&quot;16dp&quot;&#10;            app:cardElevation=&quot;8dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/white&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:padding=&quot;24dp&quot;&gt;&#10;&#10;                &lt;!-- Location Name --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_location_name&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Location Name *&quot;&#10;                        android:inputType=&quot;textCapWords&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Category --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:id=&quot;@+id/til_category&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;AutoCompleteTextView&#10;                        android:id=&quot;@+id/et_category&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Category *&quot;&#10;                        android:inputType=&quot;none&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Province --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:id=&quot;@+id/til_province&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;AutoCompleteTextView&#10;                        android:id=&quot;@+id/et_province&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Province *&quot;&#10;                        android:inputType=&quot;none&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- City --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:id=&quot;@+id/til_city&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;AutoCompleteTextView&#10;                        android:id=&quot;@+id/et_city&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;City *&quot;&#10;                        android:inputType=&quot;none&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot;&#10;                        android:enabled=&quot;true&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Description --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&#10;                    app:counterEnabled=&quot;true&quot;&#10;                    app:counterMaxLength=&quot;500&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_description&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Description *&quot;&#10;                        android:inputType=&quot;textMultiLine|textCapSentences&quot;&#10;                        android:lines=&quot;4&quot;&#10;                        android:maxLength=&quot;500&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Contributor Name --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_contributor_name&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Your Name *&quot;&#10;                        android:inputType=&quot;textPersonName|textCapWords&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- YouTube URL (Optional) --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;24dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_youtube_url&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;YouTube URL (Optional)&quot;&#10;                        android:inputType=&quot;textUri&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Image URL Input (Now Required) --&gt;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Location Image *&quot;&#10;                    android:textColor=&quot;@color/NavyBlue&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_image_url&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Image URL *&quot;&#10;                        android:inputType=&quot;textUri&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Image Preview --&gt;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;200dp&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot;&#10;                    app:cardCornerRadius=&quot;12dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&#10;                    app:cardBackgroundColor=&quot;@color/offWhite&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:id=&quot;@+id/iv_selected_image&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:scaleType=&quot;centerCrop&quot;&#10;                        android:visibility=&quot;gone&quot;&#10;                        android:contentDescription=&quot;Selected location image&quot; /&gt;&#10;&#10;                    &lt;!-- Placeholder when no image selected --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/layout_image_placeholder&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:alpha=&quot;0.6&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;48dp&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:src=&quot;@drawable/ic_image_placeholder&quot;&#10;                            app:tint=&quot;@color/light_gray&quot;&#10;                            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Enter image URL above and tap 'Load Image'&quot;&#10;                            android:textColor=&quot;@color/light_gray&quot;&#10;                            android:fontFamily=&quot;cursive&quot;&#10;                            android:textAlignment=&quot;center&quot;&#10;                            android:paddingHorizontal=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;!-- Load from URL Button --&gt;&#10;                &lt;com.google.android.material.button.MaterialButton&#10;                    android:id=&quot;@+id/btn_load_url&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;32dp&quot;&#10;                    android:text=&quot;Load Image from URL&quot;&#10;                    android:textColor=&quot;@color/DeepForestGreen&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    app:strokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:cornerRadius=&quot;8dp&quot;&#10;                    app:icon=&quot;@drawable/ic_link&quot;&#10;                    app:iconTint=&quot;@color/DeepForestGreen&quot; /&gt;&#10;&#10;                &lt;!-- Submit Button --&gt;&#10;                &lt;com.google.android.material.button.MaterialButton&#10;                    android:id=&quot;@+id/btn_submit_location&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;56dp&quot;&#10;                    android:backgroundTint=&quot;@color/DeepForestGreen&quot;&#10;                    android:text=&quot;Share Location&quot;&#10;                    android:textColor=&quot;@color/GoldYellow&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    app:cornerRadius=&quot;12dp&quot;&#10;                    app:icon=&quot;@drawable/ic_share&quot;&#10;                    app:iconTint=&quot;@color/GoldYellow&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Info Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;16dp&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;2dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/GoldSand&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@drawable/ic_info&quot;&#10;                    app:tint=&quot;@color/NavyBlue&quot;&#10;                    android:layout_marginEnd=&quot;12dp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:text=&quot;Please provide a valid image URL (http/https). Use image hosting services like Imgur, Google Photos, or Dropbox for best results. Your contribution helps travelers discover amazing places!&quot;&#10;                    android:textColor=&quot;@color/NavyBlue&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/ScrollView&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:fillViewport=&quot;true&quot;&#10;    android:background=&quot;@color/white&quot;&#10;    tools:context=&quot;.AddLocationActivity&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Header Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;4dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/DeepForestGreen&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:gravity=&quot;center&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;48dp&quot;&#10;                    android:layout_height=&quot;48dp&quot;&#10;                    android:src=&quot;@drawable/ic_add_location&quot;&#10;                    app:tint=&quot;@color/GoldYellow&quot;&#10;                    android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Share a Hidden Gem&quot;&#10;                    android:textColor=&quot;@color/white&quot;&#10;                    android:textSize=&quot;18sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Help other travelers discover amazing places!&quot;&#10;                    android:textColor=&quot;@color/GoldSand&quot;&#10;                    android:textSize=&quot;14sp&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    android:textAlignment=&quot;center&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Form Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            app:cardCornerRadius=&quot;16dp&quot;&#10;            app:cardElevation=&quot;8dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/white&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:padding=&quot;24dp&quot;&gt;&#10;&#10;                &lt;!-- Location Name --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_location_name&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Location Name *&quot;&#10;                        android:inputType=&quot;textCapWords&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Category --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:id=&quot;@+id/til_category&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;AutoCompleteTextView&#10;                        android:id=&quot;@+id/et_category&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Category *&quot;&#10;                        android:inputType=&quot;none&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Province --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:id=&quot;@+id/til_province&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;AutoCompleteTextView&#10;                        android:id=&quot;@+id/et_province&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Province *&quot;&#10;                        android:inputType=&quot;none&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- City --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:id=&quot;@+id/til_city&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;AutoCompleteTextView&#10;                        android:id=&quot;@+id/et_city&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;City *&quot;&#10;                        android:inputType=&quot;none&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot;&#10;                        android:enabled=&quot;true&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Description --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&#10;                    app:counterEnabled=&quot;true&quot;&#10;                    app:counterMaxLength=&quot;500&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_description&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Description *&quot;&#10;                        android:inputType=&quot;textMultiLine|textCapSentences&quot;&#10;                        android:lines=&quot;4&quot;&#10;                        android:maxLength=&quot;500&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Contributor Name --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;16dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_contributor_name&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Your Name *&quot;&#10;                        android:inputType=&quot;textPersonName|textCapWords&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- YouTube URL (Optional) --&gt;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;24dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_youtube_url&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;YouTube URL (Optional)&quot;&#10;                        android:inputType=&quot;textUri&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Image URL Input (Now Required) --&gt;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Location Image *&quot;&#10;                    android:textColor=&quot;@color/NavyBlue&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&#10;                    app:boxStrokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:hintTextColor=&quot;@color/NavyBlue&quot;&gt;&#10;&#10;                    &lt;com.google.android.material.textfield.TextInputEditText&#10;                        android:id=&quot;@+id/et_image_url&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:hint=&quot;Image URL *&quot;&#10;                        android:inputType=&quot;textUri&quot;&#10;                        android:textColor=&quot;@color/NavyBlue&quot;&#10;                        android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;                &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;                &lt;!-- Image Preview --&gt;&#10;                &lt;androidx.cardview.widget.CardView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;200dp&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot;&#10;                    app:cardCornerRadius=&quot;12dp&quot;&#10;                    app:cardElevation=&quot;4dp&quot;&#10;                    app:cardBackgroundColor=&quot;@color/offWhite&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:id=&quot;@+id/iv_selected_image&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:scaleType=&quot;centerCrop&quot;&#10;                        android:visibility=&quot;gone&quot;&#10;                        android:contentDescription=&quot;Selected location image&quot; /&gt;&#10;&#10;                    &lt;!-- Placeholder when no image selected --&gt;&#10;                    &lt;LinearLayout&#10;                        android:id=&quot;@+id/layout_image_placeholder&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:alpha=&quot;0.6&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;48dp&quot;&#10;                            android:layout_height=&quot;48dp&quot;&#10;                            android:src=&quot;@drawable/ic_image_placeholder&quot;&#10;                            app:tint=&quot;@color/light_gray&quot;&#10;                            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Enter image URL above and tap 'Load Image'&quot;&#10;                            android:textColor=&quot;@color/light_gray&quot;&#10;                            android:fontFamily=&quot;cursive&quot;&#10;                            android:textAlignment=&quot;center&quot;&#10;                            android:paddingHorizontal=&quot;16dp&quot; /&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;                &lt;!-- Load from URL Button --&gt;&#10;                &lt;com.google.android.material.button.MaterialButton&#10;                    android:id=&quot;@+id/btn_load_url&quot;&#10;                    style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_marginBottom=&quot;32dp&quot;&#10;                    android:text=&quot;Load Image from URL&quot;&#10;                    android:textColor=&quot;@color/DeepForestGreen&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    app:strokeColor=&quot;@color/DeepForestGreen&quot;&#10;                    app:cornerRadius=&quot;8dp&quot;&#10;                    app:icon=&quot;@drawable/ic_link&quot;&#10;                    app:iconTint=&quot;@color/DeepForestGreen&quot; /&gt;&#10;&#10;                &lt;!-- Submit Button --&gt;&#10;                &lt;com.google.android.material.button.MaterialButton&#10;                    android:id=&quot;@+id/btn_submit_location&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;56dp&quot;&#10;                    android:backgroundTint=&quot;@color/DeepForestGreen&quot;&#10;                    android:text=&quot;Share Location&quot;&#10;                    android:textColor=&quot;@color/GoldYellow&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:fontFamily=&quot;cursive&quot;&#10;                    app:cornerRadius=&quot;12dp&quot;&#10;                    app:icon=&quot;@drawable/ic_share&quot;&#10;                    app:iconTint=&quot;@color/GoldYellow&quot; /&gt;&#10;&#10;                &lt;!-- Progress Bar for loading states --&gt;&#10;                &lt;ProgressBar&#10;                    android:id=&quot;@+id/progress_bar&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_gravity=&quot;center&quot;&#10;                    android:layout_marginTop=&quot;16dp&quot;&#10;                    android:visibility=&quot;gone&quot;&#10;                    android:indeterminateTint=&quot;@color/DeepForestGreen&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;        &lt;!-- Info Card --&gt;&#10;        &lt;androidx.cardview.widget.CardView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;16dp&quot;&#10;            app:cardCornerRadius=&quot;12dp&quot;&#10;            app:cardElevation=&quot;2dp&quot;&#10;            app:cardBackgroundColor=&quot;@color/GoldSand&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:padding=&quot;16dp&quot;&#10;                android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;24dp&quot;&#10;                    android:layout_height=&quot;24dp&quot;&#10;                    android:src=&quot;@drawable/ic_info&quot;&#10;                    app:tint=&quot;@color/NavyBlue&quot;&#10;                    android:layout_marginEnd=&quot;12dp&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:text=&quot;Please provide a valid image URL (http/https). Use image hosting services like Imgur, Google Photos, or Dropbox for best results. Your contribution helps travelers discover amazing places!&quot;&#10;                    android:textColor=&quot;@color/NavyBlue&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:fontFamily=&quot;cursive&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/ScrollView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_home.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_home.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/white&quot;&#10;    tools:context=&quot;.HomeActivity&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/txtWelcome&quot;&#10;        style=&quot;@style/HeadingText&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginStart=&quot;50dp&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:layout_marginEnd=&quot;50dp&quot;&#10;        android:text=&quot;Attractions Near You&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;!-- Horizontal ScrollView for Filter Chips --&gt;&#10;    &lt;HorizontalScrollView&#10;        android:id=&quot;@+id/horizontal_scroll_filters&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginStart=&quot;16dp&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:layout_marginEnd=&quot;16dp&quot;&#10;        android:scrollbars=&quot;none&quot;&#10;        android:fadingEdge=&quot;horizontal&quot;&#10;        android:fadingEdgeLength=&quot;20dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/txtWelcome&quot;&gt;&#10;&#10;        &lt;com.google.android.material.chip.ChipGroup&#10;            android:id=&quot;@+id/chip_group_filters&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:paddingStart=&quot;8dp&quot;&#10;            android:paddingEnd=&quot;8dp&quot;&#10;            app:singleSelection=&quot;true&quot;&#10;            app:singleLine=&quot;true&quot;&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:checked=&quot;true&quot;&#10;                android:text=&quot;All&quot;&#10;                app:chipBackgroundColor=&quot;@color/DeepForestGreen&quot;&#10;                android:textColor=&quot;@color/GoldYellow&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;Historical Site&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;WaterFall&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;Beach&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;Mountain&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;Temple&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;National Park&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;More&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.chip.ChipGroup&gt;&#10;&#10;    &lt;/HorizontalScrollView&gt;&#10;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/recyclerView_attractions&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:paddingStart=&quot;10dp&quot;&#10;        android:paddingEnd=&quot;10dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/chip_group_filters&quot;&#10;        tools:listitem=&quot;@layout/list_item_attraction&quot; /&gt;&#10;&#10;    &lt;ProgressBar&#10;        android:id=&quot;@+id/progressBar&quot;&#10;        style=&quot;?android:attr/progressBarStyle&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:indeterminateTint=&quot;@color/DeepForestGreen&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/white&quot;&#10;    tools:context=&quot;.HomeActivity&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/txtWelcome&quot;&#10;        style=&quot;@style/HeadingText&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginStart=&quot;50dp&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:layout_marginEnd=&quot;50dp&quot;&#10;        android:text=&quot;Attractions Near You&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;!-- Horizontal ScrollView for Filter Chips --&gt;&#10;    &lt;HorizontalScrollView&#10;        android:id=&quot;@+id/horizontal_scroll_filters&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginStart=&quot;16dp&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:layout_marginEnd=&quot;16dp&quot;&#10;        android:scrollbars=&quot;none&quot;&#10;        android:fadingEdge=&quot;horizontal&quot;&#10;        android:fadingEdgeLength=&quot;20dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/txtWelcome&quot;&gt;&#10;&#10;        &lt;com.google.android.material.chip.ChipGroup&#10;            android:id=&quot;@+id/chip_group_filters&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:paddingStart=&quot;8dp&quot;&#10;            android:paddingEnd=&quot;8dp&quot;&#10;            app:singleSelection=&quot;true&quot;&#10;            app:singleLine=&quot;true&quot;&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:checked=&quot;true&quot;&#10;                android:text=&quot;All&quot;&#10;                app:chipBackgroundColor=&quot;@color/DeepForestGreen&quot;&#10;                android:textColor=&quot;@color/GoldYellow&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;Historical Site&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;WaterFall&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;Beach&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;Mountain&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;Temple&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;National Park&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;            &lt;com.google.android.material.chip.Chip&#10;                style=&quot;@style/Widget.MaterialComponents.Chip.Filter&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:text=&quot;More&quot;&#10;                app:chipBackgroundColor=&quot;@color/GoldSand&quot;&#10;                android:textColor=&quot;@color/NavyBlue&quot; /&gt;&#10;&#10;        &lt;/com.google.android.material.chip.ChipGroup&gt;&#10;&#10;    &lt;/HorizontalScrollView&gt;&#10;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/recyclerView_attractions&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:paddingStart=&quot;10dp&quot;&#10;        android:paddingEnd=&quot;10dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/horizontal_scroll_filters&quot;&#10;        tools:listitem=&quot;@layout/list_item_attraction&quot; /&gt;&#10;&#10;    &lt;ProgressBar&#10;        android:id=&quot;@+id/progressBar&quot;&#10;        style=&quot;?android:attr/progressBarStyle&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:indeterminateTint=&quot;@color/DeepForestGreen&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/menu/main_menue.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/menu/main_menue.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;&lt;!--TODO : Change Title Color--&gt;&#10;&lt;!--Base file for Drawer--&gt;&#10;    &lt;group android:checkableBehavior=&quot;single&quot;&gt;&#10;&#10;        &lt;item&#10;            android:id=&quot;@+id/nav_home&quot;&#10;            android:icon=&quot;@drawable/home_icon&quot;&#10;            android:title=&quot;Home&quot; /&gt;&#10;&#10;        &lt;item&#10;            android:id=&quot;@+id/nav_exp_map&quot;&#10;            android:icon=&quot;@drawable/map_drop_pin_icon&quot;&#10;            android:title=&quot;Explore On Map&quot; /&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;&lt;!--TODO : Change Title Color--&gt;&#10;&lt;!--Base file for Drawer--&gt;&#10;    &lt;group android:checkableBehavior=&quot;single&quot;&gt;&#10;&#10;        &lt;item&#10;            android:id=&quot;@+id/nav_home&quot;&#10;            android:icon=&quot;@drawable/home_icon&quot;&#10;            android:title=&quot;Home&quot; /&gt;&#10;&#10;        &lt;item&#10;            android:id=&quot;@+id/nav_exp_map&quot;&#10;            android:icon=&quot;@drawable/map_drop_pin_icon&quot;&#10;            android:title=&quot;Explore On Map&quot; /&gt;&#10;            &#10;        &lt;item&#10;            android:id=&quot;@+id/nav_add_location&quot;&#10;            android:icon=&quot;@drawable/ic_add_location&quot;&#10;            android:title=&quot;Add Location&quot; /&gt;&#10;            &#10;        &lt;item&#10;            android:id=&quot;@+id/nav_favorit&quot;&#10;            android:icon=&quot;@drawable/fav_icon&quot;&#10;            android:title=&quot;My Favorites&quot; /&gt;&#10;        &lt;item&#10;            android:id=&quot;@+id/nav_about_us&quot;&#10;            android:icon=&quot;@drawable/two_person_icon&quot;&#10;            android:title=&quot;About Us&quot; /&gt;&#10;        &lt;item&#10;            android:id=&quot;@+id/nav_settings&quot;&#10;            android:icon=&quot;@drawable/settings&quot;&#10;            android:title=&quot;Settings&quot; /&gt;&#10;    &lt;/group&gt;&#10;&#10;&#10;    &lt;item android:title=&quot;Profile&quot;&gt;&#10;&#10;        &lt;menu&gt;&#10;            &lt;group android:checkableBehavior=&quot;single&quot;&gt;&#10;&#10;                &lt;item&#10;                    android:id=&quot;@+id/nav_profile&quot;&#10;                    android:icon=&quot;@drawable/fringerprint_icon&quot;&#10;                    android:title=&quot;Profile&quot; /&gt;&#10;&#10;                &lt;item&#10;                    android:id=&quot;@+id/nav_log_out&quot;&#10;                    android:icon=&quot;@drawable/log_out_icon&quot;&#10;                    android:title=&quot;Log Out&quot; /&gt;&#10;&#10;            &lt;/group&gt;&#10;        &lt;/menu&gt;&#10;    &lt;/item&gt;&#10;&#10;&#10;&lt;/menu&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/styles.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/styles.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;&#10;    &lt;!-- Base application theme with consistent color scheme --&gt;&#10;    &lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.MaterialComponents.DayNight.DarkActionBar&quot;&gt;&#10;        &lt;item name=&quot;colorPrimary&quot;&gt;@color/DeepForestGreen&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryVariant&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/GoldYellow&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondary&quot;&gt;@color/GoldSand&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondaryVariant&quot;&gt;@color/Tanbrown&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:colorBackground&quot;&gt;@color/white&lt;/item&gt;&#10;        &lt;item name=&quot;colorSurface&quot;&gt;@color/white&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSurface&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;!-- Toolbar Theme --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;!-- Primary Button Style --&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;60dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;cursive&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;        &lt;item name=&quot;backgroundTint&quot;&gt;@color/DeepForestGreen&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/GoldYellow&lt;/item&gt;&#10;        &lt;item name=&quot;cornerRadius&quot;&gt;30dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;style name=&quot;SecondaryButton&quot; parent=&quot;Widget.MaterialComponents.Button.TextButton&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;cursive&lt;/item&gt;&#10;        &lt;item name=&quot;android:textAllCaps&quot;&gt;false&lt;/item&gt;&#10;&#10;    &lt;!-- Primary Text Style --&gt;&#10;    &lt;style name=&quot;PrimaryText&quot;&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textAlignment&quot;&gt;center&lt;/item&gt;&#10;&#10;    &lt;!-- Title Text Style --&gt;&#10;    &lt;style name=&quot;TitleText&quot; parent=&quot;PrimaryText&quot;&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Heading Text Style --&gt;&#10;    &lt;style name=&quot;HeadingText&quot; parent=&quot;PrimaryText&quot;&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Body Text Style --&gt;&#10;    &lt;style name=&quot;BodyText&quot; parent=&quot;PrimaryText&quot;&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Custom EditText Style --&gt;&#10;    &lt;style name=&quot;CustomEditText&quot;&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:drawablePadding&quot;&gt;8dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;cursive&lt;/item&gt;&#10;        &lt;item name=&quot;android:minHeight&quot;&gt;48dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;        &lt;item name=&quot;android:paddingEnd&quot;&gt;20dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginStart&quot;&gt;8dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginEnd&quot;&gt;8dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;20dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;&#10;    &lt;!-- Card Style (main Card Style for all boxes)--&gt;&#10;    &lt;style name=&quot;AppCard&quot; parent=&quot;Widget.MaterialComponents.CardView&quot;&gt;&#10;        &lt;item name=&quot;cardBackgroundColor&quot;&gt;@color/white&lt;/item&gt;&#10;        &lt;item name=&quot;cardCornerRadius&quot;&gt;30dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Styles for About Us Page --&gt;&#10;    &lt;style name=&quot;AboutPage.TextView.Base&quot; parent=&quot;Widget.AppCompat.TextView&quot;&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginEnd&quot;&gt;50dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textAlignment&quot;&gt;center&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;&#10;    &lt;style name=&quot;AboutPage.TextView.Title&quot; parent=&quot;AboutPage.TextView.Base&quot;&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;cursive&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;20sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;AboutPage.TextView.Mission&quot; parent=&quot;AboutPage.TextView.Base&quot;&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;monospace&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;20sp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;AboutPage.TextView.Paragraph&quot; parent=&quot;AboutPage.TextView.Base&quot;&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;monospace&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;italic&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;AboutPage.Button.Link&quot; parent=&quot;Widget.MaterialComponents.Button.TextButton&quot;&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginStart&quot;&gt;40dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginEnd&quot;&gt;40dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginTop&quot;&gt;0dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;monospace&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/Blue2&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;12sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Toolbar Title Appearance Style --&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;20sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;cursive&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;        &lt;item name=&quot;android:gravity&quot;&gt;center_vertical&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;&lt;/resources&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;resources&gt;&#10;&#10;    &lt;!-- Base application theme with consistent color scheme --&gt;&#10;    &lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.MaterialComponents.DayNight.DarkActionBar&quot;&gt;&#10;        &lt;item name=&quot;colorPrimary&quot;&gt;@color/DeepForestGreen&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryVariant&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/GoldYellow&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondary&quot;&gt;@color/GoldSand&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondaryVariant&quot;&gt;@color/Tanbrown&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:colorBackground&quot;&gt;@color/white&lt;/item&gt;&#10;        &lt;item name=&quot;colorSurface&quot;&gt;@color/white&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSurface&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Primary Button Style --&gt;&#10;    &lt;style name=&quot;PrimaryButton&quot; parent=&quot;Widget.MaterialComponents.Button&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;60dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;cursive&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;18sp&lt;/item&gt;&#10;        &lt;item name=&quot;backgroundTint&quot;&gt;@color/DeepForestGreen&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/GoldYellow&lt;/item&gt;&#10;        &lt;item name=&quot;cornerRadius&quot;&gt;30dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Secondary Button Style --&gt;&#10;    &lt;style name=&quot;SecondaryButton&quot; parent=&quot;Widget.MaterialComponents.Button.TextButton&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;cursive&lt;/item&gt;&#10;        &lt;item name=&quot;android:textAllCaps&quot;&gt;false&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/DeepForestGreen&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Primary Text Style --&gt;&#10;    &lt;style name=&quot;PrimaryText&quot;&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;cursive&lt;/item&gt;&#10;        &lt;item name=&quot;android:textAlignment&quot;&gt;center&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Title Text Style --&gt;&#10;    &lt;style name=&quot;TitleText&quot; parent=&quot;PrimaryText&quot;&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;36sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Heading Text Style --&gt;&#10;    &lt;style name=&quot;HeadingText&quot; parent=&quot;PrimaryText&quot;&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;20sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Body Text Style --&gt;&#10;    &lt;style name=&quot;BodyText&quot; parent=&quot;PrimaryText&quot;&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;14sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;monospace&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Custom EditText Style --&gt;&#10;    &lt;style name=&quot;CustomEditText&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:background&quot;&gt;@drawable/custom_edittext&lt;/item&gt;&#10;        &lt;item name=&quot;android:drawablePadding&quot;&gt;8dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;cursive&lt;/item&gt;&#10;        &lt;item name=&quot;android:minHeight&quot;&gt;48dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:paddingStart&quot;&gt;20dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:paddingEnd&quot;&gt;20dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginStart&quot;&gt;8dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginEnd&quot;&gt;8dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;20dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Card Style (main Card Style for all boxes)--&gt;&#10;    &lt;style name=&quot;AppCard&quot; parent=&quot;Widget.MaterialComponents.CardView&quot;&gt;&#10;        &lt;item name=&quot;cardBackgroundColor&quot;&gt;@color/white&lt;/item&gt;&#10;        &lt;item name=&quot;cardCornerRadius&quot;&gt;30dp&lt;/item&gt;&#10;        &lt;item name=&quot;cardElevation&quot;&gt;20dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_margin&quot;&gt;30dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Styles for About Us Page --&gt;&#10;    &lt;style name=&quot;AboutPage.TextView.Base&quot; parent=&quot;Widget.AppCompat.TextView&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginStart&quot;&gt;50dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginEnd&quot;&gt;50dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textAlignment&quot;&gt;center&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;AboutPage.TextView.Title&quot; parent=&quot;AboutPage.TextView.Base&quot;&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;cursive&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;20sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;40dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;AboutPage.TextView.Mission&quot; parent=&quot;AboutPage.TextView.Base&quot;&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;monospace&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;20sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;10dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;AboutPage.TextView.Paragraph&quot; parent=&quot;AboutPage.TextView.Base&quot;&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;monospace&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;14sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;italic&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginBottom&quot;&gt;40dp&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;AboutPage.Button.Link&quot; parent=&quot;Widget.MaterialComponents.Button.TextButton&quot;&gt;&#10;        &lt;item name=&quot;android:layout_width&quot;&gt;match_parent&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginStart&quot;&gt;40dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginEnd&quot;&gt;40dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_marginTop&quot;&gt;0dp&lt;/item&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;monospace&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/DeepForestGreen&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;12sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;!-- Toolbar Title Appearance Style --&gt;&#10;    &lt;style name=&quot;ToolbarTitleAppearance&quot; parent=&quot;TextAppearance.Widget.AppCompat.Toolbar.Title&quot;&gt;&#10;        &lt;item name=&quot;android:textColor&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textSize&quot;&gt;20sp&lt;/item&gt;&#10;        &lt;item name=&quot;android:fontFamily&quot;&gt;cursive&lt;/item&gt;&#10;        &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&#10;        &lt;item name=&quot;android:gravity&quot;&gt;center_vertical&lt;/item&gt;&#10;        &lt;item name=&quot;android:layout_gravity&quot;&gt;center_vertical&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/themes.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/themes.xml" />
              <option name="originalContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;&lt;!--    TODO: Check Here --&gt;&#10;" />
              <option name="updatedContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Base.Theme.HiddenSriLanka&quot; parent=&quot;Theme.Material3.DayNight.NoActionBar&quot;&gt;&#10;        &lt;!-- Apply your consistent color scheme --&gt;&#10;        &lt;item name=&quot;colorPrimary&quot;&gt;@color/DeepForestGreen&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryVariant&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/GoldYellow&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondary&quot;&gt;@color/GoldSand&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondaryVariant&quot;&gt;@color/Tanbrown&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:colorBackground&quot;&gt;@color/white&lt;/item&gt;&#10;        &lt;item name=&quot;colorSurface&quot;&gt;@color/white&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSurface&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;Theme.HiddenSriLanka&quot; parent=&quot;Base.Theme.HiddenSriLanka&quot; /&gt;&#10;&#10;    &lt;!-- Toolbar Theme - Fixed duplicate issue --&gt;&#10;    &lt;style name=&quot;ToolbarTheme&quot; parent=&quot;ThemeOverlay.MaterialComponents.Toolbar.Primary&quot;&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;android:textColorPrimary&quot;&gt;@color/NavyBlue&lt;/item&gt;&#10;        &lt;item name=&quot;titleTextAppearance&quot;&gt;@style/ToolbarTitleAppearance&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>